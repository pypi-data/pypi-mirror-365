[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pysciiart"
version = "0.3.0.dev2"
description = "A set of python libraries used to generate ASCII art from high level data structures."
readme = "README.md"

license = "MIT"
authors = ["Yannick Kirschhoffer <alcibiade@alcibiade.org>"]
maintainers = ["Yannick Kirschhoffer <alcibiade@alcibiade.org>"]
repository = "https://gitlab.com/alcibiade/pysciiart"

packages = [
    { include = "pysciiart", from = "src" }
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: System :: Systems Administration",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13"
]

[tool.poetry.dependencies]
python = "^3.7.0"
termcolor = "1.1.0"

[tool.poetry.group.test.dependencies]
pytest = "*"

[tool.poetry.group.dev.dependencies]
mypy = "*"
ruff = "*"
bandit = "*"

[tool.mypy]
python_version = "3.12"
namespace_packages = true
explicit_package_bases = true
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true
strict_equality = false
ignore_missing_imports = true

[tool.ruff]
target-version = "py37"
line-length = 110

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["F405", "F403"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]
