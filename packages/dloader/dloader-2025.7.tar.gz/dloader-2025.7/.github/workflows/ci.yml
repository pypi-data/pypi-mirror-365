name: CI

on:
  push:
    branches: [main]
  pull_request:

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

permissions:
  contents: read

jobs:
  test:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      checks: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --all-groups --locked

      - name: Run tests
        run: uv run pytest tests/ -v --junit-xml=junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
          path: junit/test-results-*.xml
        if: always()

      - name: Generate test summary
        uses: test-summary/action@v2
        with:
          paths: junit/test-results-*.xml
        if: always()

  lint:
    name: Lint and typecheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: "3.11"

      - name: Install dependencies
        run: uv sync --all-groups --locked

      - name: Run ruff format check
        run: uv run ruff format --check .

      - name: Run ruff lint
        run: uv run ruff check .

      - name: Run pyright
        run: uv run pyright

  build:
    name: Build and verify package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: "3.11"

      - name: Build package
        run: uv build

      - name: Check package
        run: |
          uv run pip install --no-deps dist/*.whl
          uv run python -c "import dloader; print(f'dloader imported successfully')"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
