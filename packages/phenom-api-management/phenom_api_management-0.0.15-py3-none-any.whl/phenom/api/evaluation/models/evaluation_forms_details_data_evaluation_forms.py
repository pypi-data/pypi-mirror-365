# coding: utf-8

"""
    evaluation-api

    Hiring Manager can view all the pending tasks and evaluate the interview if any pending interviews.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: phenom
"""

import pprint
import re  # noqa: F401

import six

class EvaluationFormsDetailsDataEvaluationForms(object):
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'title': 'str',
        'recommended_reasons': 'list[str]',
        'not_recommended_reasons': 'list[str]',
        'not_now_reasons': 'list[str]',
        'created_by': 'str',
        'last_modified_by': 'str',
        'last_modified_by_recruiter_user_id': 'str',
        'created_by_recruiter_user_id': 'str',
        'additional_questions': 'list[QuestionAndAnswers]',
        'is_default': 'bool',
        'created_date': 'str',
        'updated_date': 'str',
        'active': 'bool',
        'deleted': 'bool',
        'evaluation_form_id': 'str',
        'version_id': 'float'
    }

    attribute_map = {
        'id': '_id',
        'title': 'title',
        'recommended_reasons': 'recommendedReasons',
        'not_recommended_reasons': 'notRecommendedReasons',
        'not_now_reasons': 'notNowReasons',
        'created_by': 'createdBy',
        'last_modified_by': 'lastModifiedBy',
        'last_modified_by_recruiter_user_id': 'lastModifiedByRecruiterUserId',
        'created_by_recruiter_user_id': 'createdByRecruiterUserId',
        'additional_questions': 'additionalQuestions',
        'is_default': 'isDefault',
        'created_date': 'createdDate',
        'updated_date': 'updatedDate',
        'active': 'active',
        'deleted': 'deleted',
        'evaluation_form_id': 'evaluationFormId',
        'version_id': 'versionId'
    }

    def __init__(self, id=None, title=None, recommended_reasons=None, not_recommended_reasons=None, not_now_reasons=None, created_by=None, last_modified_by=None, last_modified_by_recruiter_user_id=None, created_by_recruiter_user_id=None, additional_questions=None, is_default=None, created_date=None, updated_date=None, active=None, deleted=None, evaluation_form_id=None, version_id=None):  # noqa: E501
        """EvaluationFormsDetailsDataEvaluationForms - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._title = None
        self._recommended_reasons = None
        self._not_recommended_reasons = None
        self._not_now_reasons = None
        self._created_by = None
        self._last_modified_by = None
        self._last_modified_by_recruiter_user_id = None
        self._created_by_recruiter_user_id = None
        self._additional_questions = None
        self._is_default = None
        self._created_date = None
        self._updated_date = None
        self._active = None
        self._deleted = None
        self._evaluation_form_id = None
        self._version_id = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if title is not None:
            self.title = title
        if recommended_reasons is not None:
            self.recommended_reasons = recommended_reasons
        if not_recommended_reasons is not None:
            self.not_recommended_reasons = not_recommended_reasons
        if not_now_reasons is not None:
            self.not_now_reasons = not_now_reasons
        if created_by is not None:
            self.created_by = created_by
        if last_modified_by is not None:
            self.last_modified_by = last_modified_by
        if last_modified_by_recruiter_user_id is not None:
            self.last_modified_by_recruiter_user_id = last_modified_by_recruiter_user_id
        if created_by_recruiter_user_id is not None:
            self.created_by_recruiter_user_id = created_by_recruiter_user_id
        if additional_questions is not None:
            self.additional_questions = additional_questions
        if is_default is not None:
            self.is_default = is_default
        if created_date is not None:
            self.created_date = created_date
        if updated_date is not None:
            self.updated_date = updated_date
        if active is not None:
            self.active = active
        if deleted is not None:
            self.deleted = deleted
        if evaluation_form_id is not None:
            self.evaluation_form_id = evaluation_form_id
        if version_id is not None:
            self.version_id = version_id

    @property
    def id(self):
        """Gets the id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        Database document object id.  # noqa: E501

        :return: The id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EvaluationFormsDetailsDataEvaluationForms.

        Database document object id.  # noqa: E501

        :param id: The id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def title(self):
        """Gets the title of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        Title of the evaluation form.  # noqa: E501

        :return: The title of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this EvaluationFormsDetailsDataEvaluationForms.

        Title of the evaluation form.  # noqa: E501

        :param title: The title of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def recommended_reasons(self):
        """Gets the recommended_reasons of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        List of reasons for recommendation.  # noqa: E501

        :return: The recommended_reasons of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: list[str]
        """
        return self._recommended_reasons

    @recommended_reasons.setter
    def recommended_reasons(self, recommended_reasons):
        """Sets the recommended_reasons of this EvaluationFormsDetailsDataEvaluationForms.

        List of reasons for recommendation.  # noqa: E501

        :param recommended_reasons: The recommended_reasons of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: list[str]
        """

        self._recommended_reasons = recommended_reasons

    @property
    def not_recommended_reasons(self):
        """Gets the not_recommended_reasons of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        List of reasons for non recommendation.  # noqa: E501

        :return: The not_recommended_reasons of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: list[str]
        """
        return self._not_recommended_reasons

    @not_recommended_reasons.setter
    def not_recommended_reasons(self, not_recommended_reasons):
        """Sets the not_recommended_reasons of this EvaluationFormsDetailsDataEvaluationForms.

        List of reasons for non recommendation.  # noqa: E501

        :param not_recommended_reasons: The not_recommended_reasons of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: list[str]
        """

        self._not_recommended_reasons = not_recommended_reasons

    @property
    def not_now_reasons(self):
        """Gets the not_now_reasons of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        List of reasons for not now.  # noqa: E501

        :return: The not_now_reasons of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: list[str]
        """
        return self._not_now_reasons

    @not_now_reasons.setter
    def not_now_reasons(self, not_now_reasons):
        """Sets the not_now_reasons of this EvaluationFormsDetailsDataEvaluationForms.

        List of reasons for not now.  # noqa: E501

        :param not_now_reasons: The not_now_reasons of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: list[str]
        """

        self._not_now_reasons = not_now_reasons

    @property
    def created_by(self):
        """Gets the created_by of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        Name of the user created evaluation form.  # noqa: E501

        :return: The created_by of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this EvaluationFormsDetailsDataEvaluationForms.

        Name of the user created evaluation form.  # noqa: E501

        :param created_by: The created_by of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def last_modified_by(self):
        """Gets the last_modified_by of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        Evaluation form last modified by.  # noqa: E501

        :return: The last_modified_by of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: str
        """
        return self._last_modified_by

    @last_modified_by.setter
    def last_modified_by(self, last_modified_by):
        """Sets the last_modified_by of this EvaluationFormsDetailsDataEvaluationForms.

        Evaluation form last modified by.  # noqa: E501

        :param last_modified_by: The last_modified_by of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: str
        """

        self._last_modified_by = last_modified_by

    @property
    def last_modified_by_recruiter_user_id(self):
        """Gets the last_modified_by_recruiter_user_id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        Evaluation form last modified by recruiter user id.  # noqa: E501

        :return: The last_modified_by_recruiter_user_id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: str
        """
        return self._last_modified_by_recruiter_user_id

    @last_modified_by_recruiter_user_id.setter
    def last_modified_by_recruiter_user_id(self, last_modified_by_recruiter_user_id):
        """Sets the last_modified_by_recruiter_user_id of this EvaluationFormsDetailsDataEvaluationForms.

        Evaluation form last modified by recruiter user id.  # noqa: E501

        :param last_modified_by_recruiter_user_id: The last_modified_by_recruiter_user_id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: str
        """

        self._last_modified_by_recruiter_user_id = last_modified_by_recruiter_user_id

    @property
    def created_by_recruiter_user_id(self):
        """Gets the created_by_recruiter_user_id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        Recruiter user id who created evaluation form.  # noqa: E501

        :return: The created_by_recruiter_user_id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: str
        """
        return self._created_by_recruiter_user_id

    @created_by_recruiter_user_id.setter
    def created_by_recruiter_user_id(self, created_by_recruiter_user_id):
        """Sets the created_by_recruiter_user_id of this EvaluationFormsDetailsDataEvaluationForms.

        Recruiter user id who created evaluation form.  # noqa: E501

        :param created_by_recruiter_user_id: The created_by_recruiter_user_id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: str
        """

        self._created_by_recruiter_user_id = created_by_recruiter_user_id

    @property
    def additional_questions(self):
        """Gets the additional_questions of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        List of additional questions.  # noqa: E501

        :return: The additional_questions of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: list[QuestionAndAnswers]
        """
        return self._additional_questions

    @additional_questions.setter
    def additional_questions(self, additional_questions):
        """Sets the additional_questions of this EvaluationFormsDetailsDataEvaluationForms.

        List of additional questions.  # noqa: E501

        :param additional_questions: The additional_questions of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: list[QuestionAndAnswers]
        """

        self._additional_questions = additional_questions

    @property
    def is_default(self):
        """Gets the is_default of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        Is a tenant's default form (true or false).  # noqa: E501

        :return: The is_default of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this EvaluationFormsDetailsDataEvaluationForms.

        Is a tenant's default form (true or false).  # noqa: E501

        :param is_default: The is_default of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: bool
        """

        self._is_default = is_default

    @property
    def created_date(self):
        """Gets the created_date of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        Evaluation form created date.  # noqa: E501

        :return: The created_date of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: str
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this EvaluationFormsDetailsDataEvaluationForms.

        Evaluation form created date.  # noqa: E501

        :param created_date: The created_date of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: str
        """

        self._created_date = created_date

    @property
    def updated_date(self):
        """Gets the updated_date of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        Evaluation form latest updated date.  # noqa: E501

        :return: The updated_date of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: str
        """
        return self._updated_date

    @updated_date.setter
    def updated_date(self, updated_date):
        """Sets the updated_date of this EvaluationFormsDetailsDataEvaluationForms.

        Evaluation form latest updated date.  # noqa: E501

        :param updated_date: The updated_date of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: str
        """

        self._updated_date = updated_date

    @property
    def active(self):
        """Gets the active of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        Is an active evaluation form (true or false).  # noqa: E501

        :return: The active of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this EvaluationFormsDetailsDataEvaluationForms.

        Is an active evaluation form (true or false).  # noqa: E501

        :param active: The active of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: bool
        """

        self._active = active

    @property
    def deleted(self):
        """Gets the deleted of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        Is a deleted evaluation form (true or false).  # noqa: E501

        :return: The deleted of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this EvaluationFormsDetailsDataEvaluationForms.

        Is a deleted evaluation form (true or false).  # noqa: E501

        :param deleted: The deleted of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def evaluation_form_id(self):
        """Gets the evaluation_form_id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        Unique evaluation form id.  # noqa: E501

        :return: The evaluation_form_id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: str
        """
        return self._evaluation_form_id

    @evaluation_form_id.setter
    def evaluation_form_id(self, evaluation_form_id):
        """Sets the evaluation_form_id of this EvaluationFormsDetailsDataEvaluationForms.

        Unique evaluation form id.  # noqa: E501

        :param evaluation_form_id: The evaluation_form_id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: str
        """

        self._evaluation_form_id = evaluation_form_id

    @property
    def version_id(self):
        """Gets the version_id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501

        Version id of the evaluation form.  # noqa: E501

        :return: The version_id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :rtype: float
        """
        return self._version_id

    @version_id.setter
    def version_id(self, version_id):
        """Sets the version_id of this EvaluationFormsDetailsDataEvaluationForms.

        Version id of the evaluation form.  # noqa: E501

        :param version_id: The version_id of this EvaluationFormsDetailsDataEvaluationForms.  # noqa: E501
        :type: float
        """

        self._version_id = version_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EvaluationFormsDetailsDataEvaluationForms, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EvaluationFormsDetailsDataEvaluationForms):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
