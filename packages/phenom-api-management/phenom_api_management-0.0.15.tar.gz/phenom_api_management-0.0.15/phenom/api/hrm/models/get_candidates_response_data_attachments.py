# coding: utf-8

"""
    hrm-api

    Hiring Manager can view all the pending tasks and evaluate the interview if any pending interviews.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: phenom
"""

import pprint
import re  # noqa: F401

import six

class GetCandidatesResponseDataAttachments(object):
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'recruiter_user_id': 'str',
        'created_date': 'str',
        'document_type': 'str',
        'attachment_type': 'str',
        'md5sum': 'str',
        'relative_path': 'str',
        'recruiter_name': 'str',
        'resume_file_name': 'str',
        'document_status': 'str',
        'bucket_id': 'str',
        'is_created_from_candidates': 'bool',
        'field_id': 'str'
    }

    attribute_map = {
        'recruiter_user_id': 'recruiterUserId',
        'created_date': 'createdDate',
        'document_type': 'documentType',
        'attachment_type': 'attachmentType',
        'md5sum': 'md5sum',
        'relative_path': 'relativePath',
        'recruiter_name': 'recruiterName',
        'resume_file_name': 'resumeFileName',
        'document_status': 'documentStatus',
        'bucket_id': 'bucketId',
        'is_created_from_candidates': 'isCreatedFromCandidates',
        'field_id': 'fieldID'
    }

    def __init__(self, recruiter_user_id=None, created_date=None, document_type=None, attachment_type=None, md5sum=None, relative_path=None, recruiter_name=None, resume_file_name=None, document_status=None, bucket_id=None, is_created_from_candidates=None, field_id=None):  # noqa: E501
        """GetCandidatesResponseDataAttachments - a model defined in Swagger"""  # noqa: E501
        self._recruiter_user_id = None
        self._created_date = None
        self._document_type = None
        self._attachment_type = None
        self._md5sum = None
        self._relative_path = None
        self._recruiter_name = None
        self._resume_file_name = None
        self._document_status = None
        self._bucket_id = None
        self._is_created_from_candidates = None
        self._field_id = None
        self.discriminator = None
        if recruiter_user_id is not None:
            self.recruiter_user_id = recruiter_user_id
        if created_date is not None:
            self.created_date = created_date
        if document_type is not None:
            self.document_type = document_type
        if attachment_type is not None:
            self.attachment_type = attachment_type
        if md5sum is not None:
            self.md5sum = md5sum
        if relative_path is not None:
            self.relative_path = relative_path
        if recruiter_name is not None:
            self.recruiter_name = recruiter_name
        if resume_file_name is not None:
            self.resume_file_name = resume_file_name
        if document_status is not None:
            self.document_status = document_status
        if bucket_id is not None:
            self.bucket_id = bucket_id
        if is_created_from_candidates is not None:
            self.is_created_from_candidates = is_created_from_candidates
        if field_id is not None:
            self.field_id = field_id

    @property
    def recruiter_user_id(self):
        """Gets the recruiter_user_id of this GetCandidatesResponseDataAttachments.  # noqa: E501

        User ID of the recruiter who attached this file.  # noqa: E501

        :return: The recruiter_user_id of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :rtype: str
        """
        return self._recruiter_user_id

    @recruiter_user_id.setter
    def recruiter_user_id(self, recruiter_user_id):
        """Sets the recruiter_user_id of this GetCandidatesResponseDataAttachments.

        User ID of the recruiter who attached this file.  # noqa: E501

        :param recruiter_user_id: The recruiter_user_id of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :type: str
        """

        self._recruiter_user_id = recruiter_user_id

    @property
    def created_date(self):
        """Gets the created_date of this GetCandidatesResponseDataAttachments.  # noqa: E501

        Creation date of the attachment.  # noqa: E501

        :return: The created_date of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :rtype: str
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this GetCandidatesResponseDataAttachments.

        Creation date of the attachment.  # noqa: E501

        :param created_date: The created_date of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :type: str
        """

        self._created_date = created_date

    @property
    def document_type(self):
        """Gets the document_type of this GetCandidatesResponseDataAttachments.  # noqa: E501

        File type of the attachment.  # noqa: E501

        :return: The document_type of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :rtype: str
        """
        return self._document_type

    @document_type.setter
    def document_type(self, document_type):
        """Sets the document_type of this GetCandidatesResponseDataAttachments.

        File type of the attachment.  # noqa: E501

        :param document_type: The document_type of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :type: str
        """

        self._document_type = document_type

    @property
    def attachment_type(self):
        """Gets the attachment_type of this GetCandidatesResponseDataAttachments.  # noqa: E501

        Type of the attachment.  # noqa: E501

        :return: The attachment_type of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :rtype: str
        """
        return self._attachment_type

    @attachment_type.setter
    def attachment_type(self, attachment_type):
        """Sets the attachment_type of this GetCandidatesResponseDataAttachments.

        Type of the attachment.  # noqa: E501

        :param attachment_type: The attachment_type of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :type: str
        """

        self._attachment_type = attachment_type

    @property
    def md5sum(self):
        """Gets the md5sum of this GetCandidatesResponseDataAttachments.  # noqa: E501

        MD5 checksum of the attachment.  # noqa: E501

        :return: The md5sum of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :rtype: str
        """
        return self._md5sum

    @md5sum.setter
    def md5sum(self, md5sum):
        """Sets the md5sum of this GetCandidatesResponseDataAttachments.

        MD5 checksum of the attachment.  # noqa: E501

        :param md5sum: The md5sum of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :type: str
        """

        self._md5sum = md5sum

    @property
    def relative_path(self):
        """Gets the relative_path of this GetCandidatesResponseDataAttachments.  # noqa: E501

        Relative path of the attachment.  # noqa: E501

        :return: The relative_path of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :rtype: str
        """
        return self._relative_path

    @relative_path.setter
    def relative_path(self, relative_path):
        """Sets the relative_path of this GetCandidatesResponseDataAttachments.

        Relative path of the attachment.  # noqa: E501

        :param relative_path: The relative_path of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :type: str
        """

        self._relative_path = relative_path

    @property
    def recruiter_name(self):
        """Gets the recruiter_name of this GetCandidatesResponseDataAttachments.  # noqa: E501

        Name of the recruiter who attached this file.  # noqa: E501

        :return: The recruiter_name of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :rtype: str
        """
        return self._recruiter_name

    @recruiter_name.setter
    def recruiter_name(self, recruiter_name):
        """Sets the recruiter_name of this GetCandidatesResponseDataAttachments.

        Name of the recruiter who attached this file.  # noqa: E501

        :param recruiter_name: The recruiter_name of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :type: str
        """

        self._recruiter_name = recruiter_name

    @property
    def resume_file_name(self):
        """Gets the resume_file_name of this GetCandidatesResponseDataAttachments.  # noqa: E501

        File name of the resume.  # noqa: E501

        :return: The resume_file_name of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :rtype: str
        """
        return self._resume_file_name

    @resume_file_name.setter
    def resume_file_name(self, resume_file_name):
        """Sets the resume_file_name of this GetCandidatesResponseDataAttachments.

        File name of the resume.  # noqa: E501

        :param resume_file_name: The resume_file_name of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :type: str
        """

        self._resume_file_name = resume_file_name

    @property
    def document_status(self):
        """Gets the document_status of this GetCandidatesResponseDataAttachments.  # noqa: E501

        Status of the document.  # noqa: E501

        :return: The document_status of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :rtype: str
        """
        return self._document_status

    @document_status.setter
    def document_status(self, document_status):
        """Sets the document_status of this GetCandidatesResponseDataAttachments.

        Status of the document.  # noqa: E501

        :param document_status: The document_status of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :type: str
        """

        self._document_status = document_status

    @property
    def bucket_id(self):
        """Gets the bucket_id of this GetCandidatesResponseDataAttachments.  # noqa: E501

        Identifier of the storage bucket.  # noqa: E501

        :return: The bucket_id of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :rtype: str
        """
        return self._bucket_id

    @bucket_id.setter
    def bucket_id(self, bucket_id):
        """Sets the bucket_id of this GetCandidatesResponseDataAttachments.

        Identifier of the storage bucket.  # noqa: E501

        :param bucket_id: The bucket_id of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :type: str
        """

        self._bucket_id = bucket_id

    @property
    def is_created_from_candidates(self):
        """Gets the is_created_from_candidates of this GetCandidatesResponseDataAttachments.  # noqa: E501

        Indicates if the attachment is created from candidate data.  # noqa: E501

        :return: The is_created_from_candidates of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :rtype: bool
        """
        return self._is_created_from_candidates

    @is_created_from_candidates.setter
    def is_created_from_candidates(self, is_created_from_candidates):
        """Sets the is_created_from_candidates of this GetCandidatesResponseDataAttachments.

        Indicates if the attachment is created from candidate data.  # noqa: E501

        :param is_created_from_candidates: The is_created_from_candidates of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :type: bool
        """

        self._is_created_from_candidates = is_created_from_candidates

    @property
    def field_id(self):
        """Gets the field_id of this GetCandidatesResponseDataAttachments.  # noqa: E501

        Field identifier for the attachment.  # noqa: E501

        :return: The field_id of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :rtype: str
        """
        return self._field_id

    @field_id.setter
    def field_id(self, field_id):
        """Sets the field_id of this GetCandidatesResponseDataAttachments.

        Field identifier for the attachment.  # noqa: E501

        :param field_id: The field_id of this GetCandidatesResponseDataAttachments.  # noqa: E501
        :type: str
        """

        self._field_id = field_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetCandidatesResponseDataAttachments, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetCandidatesResponseDataAttachments):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
