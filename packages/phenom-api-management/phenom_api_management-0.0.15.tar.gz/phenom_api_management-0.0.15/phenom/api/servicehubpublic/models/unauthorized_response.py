# coding: utf-8

"""
    servicehub-public-api

    Public APIs for managing user data.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: phenom
"""

import pprint
import re  # noqa: F401

import six

class UnauthorizedResponse(object):
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'timestamp': 'datetime',
        'status': 'int',
        'error': 'str',
        'message': 'str',
        'path': 'str'
    }

    attribute_map = {
        'timestamp': 'timestamp',
        'status': 'status',
        'error': 'error',
        'message': 'message',
        'path': 'path'
    }

    def __init__(self, timestamp=None, status=None, error=None, message=None, path=None):  # noqa: E501
        """UnauthorizedResponse - a model defined in Swagger"""  # noqa: E501
        self._timestamp = None
        self._status = None
        self._error = None
        self._message = None
        self._path = None
        self.discriminator = None
        if timestamp is not None:
            self.timestamp = timestamp
        if status is not None:
            self.status = status
        if error is not None:
            self.error = error
        if message is not None:
            self.message = message
        if path is not None:
            self.path = path

    @property
    def timestamp(self):
        """Gets the timestamp of this UnauthorizedResponse.  # noqa: E501

        The timestamp of the response.  # noqa: E501

        :return: The timestamp of this UnauthorizedResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this UnauthorizedResponse.

        The timestamp of the response.  # noqa: E501

        :param timestamp: The timestamp of this UnauthorizedResponse.  # noqa: E501
        :type: datetime
        """

        self._timestamp = timestamp

    @property
    def status(self):
        """Gets the status of this UnauthorizedResponse.  # noqa: E501

        The HTTP status code (e.g., 401).  # noqa: E501

        :return: The status of this UnauthorizedResponse.  # noqa: E501
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UnauthorizedResponse.

        The HTTP status code (e.g., 401).  # noqa: E501

        :param status: The status of this UnauthorizedResponse.  # noqa: E501
        :type: int
        """

        self._status = status

    @property
    def error(self):
        """Gets the error of this UnauthorizedResponse.  # noqa: E501

        The error type or description.  # noqa: E501

        :return: The error of this UnauthorizedResponse.  # noqa: E501
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this UnauthorizedResponse.

        The error type or description.  # noqa: E501

        :param error: The error of this UnauthorizedResponse.  # noqa: E501
        :type: str
        """

        self._error = error

    @property
    def message(self):
        """Gets the message of this UnauthorizedResponse.  # noqa: E501

        Additional information or error message.  # noqa: E501

        :return: The message of this UnauthorizedResponse.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this UnauthorizedResponse.

        Additional information or error message.  # noqa: E501

        :param message: The message of this UnauthorizedResponse.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def path(self):
        """Gets the path of this UnauthorizedResponse.  # noqa: E501

        The request path that led to this response.  # noqa: E501

        :return: The path of this UnauthorizedResponse.  # noqa: E501
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this UnauthorizedResponse.

        The request path that led to this response.  # noqa: E501

        :param path: The path of this UnauthorizedResponse.  # noqa: E501
        :type: str
        """

        self._path = path

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(UnauthorizedResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UnauthorizedResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
