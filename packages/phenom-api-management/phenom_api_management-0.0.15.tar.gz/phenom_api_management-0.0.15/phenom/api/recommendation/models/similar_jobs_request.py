# coding: utf-8

"""
    recommendations-api

    These APIs provide job suggestions based on your profile, akin job listings, and nearby job opportunities tailored to your qualifications.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: phenom
"""

import pprint
import re  # noqa: F401

import six

class SimilarJobsRequest(object):
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'locale': 'str',
        'site_type': 'str',
        'user_type': 'str',
        'size': 'int'
    }

    attribute_map = {
        'locale': 'locale',
        'site_type': 'siteType',
        'user_type': 'userType',
        'size': 'size'
    }

    def __init__(self, locale=None, site_type=None, user_type=None, size=None):  # noqa: E501
        """SimilarJobsRequest - a model defined in Swagger"""  # noqa: E501
        self._locale = None
        self._site_type = None
        self._user_type = None
        self._size = None
        self.discriminator = None
        if locale is not None:
            self.locale = locale
        if site_type is not None:
            self.site_type = site_type
        if user_type is not None:
            self.user_type = user_type
        if size is not None:
            self.size = size

    @property
    def locale(self):
        """Gets the locale of this SimilarJobsRequest.  # noqa: E501

        Locale of the site (Language_Country) - Example: en_US.  # noqa: E501

        :return: The locale of this SimilarJobsRequest.  # noqa: E501
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this SimilarJobsRequest.

        Locale of the site (Language_Country) - Example: en_US.  # noqa: E501

        :param locale: The locale of this SimilarJobsRequest.  # noqa: E501
        :type: str
        """

        self._locale = locale

    @property
    def site_type(self):
        """Gets the site_type of this SimilarJobsRequest.  # noqa: E501

        Persona Value - Example: Internal, External.  # noqa: E501

        :return: The site_type of this SimilarJobsRequest.  # noqa: E501
        :rtype: str
        """
        return self._site_type

    @site_type.setter
    def site_type(self, site_type):
        """Sets the site_type of this SimilarJobsRequest.

        Persona Value - Example: Internal, External.  # noqa: E501

        :param site_type: The site_type of this SimilarJobsRequest.  # noqa: E501
        :type: str
        """

        self._site_type = site_type

    @property
    def user_type(self):
        """Gets the user_type of this SimilarJobsRequest.  # noqa: E501

        Type of the user - Internal or External User.  # noqa: E501

        :return: The user_type of this SimilarJobsRequest.  # noqa: E501
        :rtype: str
        """
        return self._user_type

    @user_type.setter
    def user_type(self, user_type):
        """Sets the user_type of this SimilarJobsRequest.

        Type of the user - Internal or External User.  # noqa: E501

        :param user_type: The user_type of this SimilarJobsRequest.  # noqa: E501
        :type: str
        """

        self._user_type = user_type

    @property
    def size(self):
        """Gets the size of this SimilarJobsRequest.  # noqa: E501

        Size of the response.  # noqa: E501

        :return: The size of this SimilarJobsRequest.  # noqa: E501
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this SimilarJobsRequest.

        Size of the response.  # noqa: E501

        :param size: The size of this SimilarJobsRequest.  # noqa: E501
        :type: int
        """

        self._size = size

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SimilarJobsRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SimilarJobsRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
