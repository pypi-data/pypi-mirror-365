# coding: utf-8

"""
    EVE Stellar Information (ESI) - tranquility

    EVE ESI Python Client generated with openapi-generator with strong typing features.

    The version of the OpenAPI document: 2020-01-01
    Contact: morte1916@gmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from eve_esi_python.models.fw_leaderboards_get import FwLeaderboardsGet

class TestFwLeaderboardsGet(unittest.TestCase):
    """FwLeaderboardsGet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FwLeaderboardsGet:
        """Test FwLeaderboardsGet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FwLeaderboardsGet`
        """
        model = FwLeaderboardsGet()
        if include_optional:
            return FwLeaderboardsGet(
                kills = eve_esi_python.models.fw_leaderboards_get_kills.FwLeaderboardsGet_kills(
                    active_total = [
                        eve_esi_python.models.fw_leaderboards_get_kills_active_total_inner.FwLeaderboardsGet_kills_active_total_inner(
                            amount = 56, 
                            faction_id = 56, )
                        ], 
                    last_week = [
                        eve_esi_python.models.fw_leaderboards_get_kills_last_week_inner.FwLeaderboardsGet_kills_last_week_inner(
                            amount = 56, 
                            faction_id = 56, )
                        ], 
                    yesterday = [
                        eve_esi_python.models.fw_leaderboards_get_kills_yesterday_inner.FwLeaderboardsGet_kills_yesterday_inner(
                            amount = 56, 
                            faction_id = 56, )
                        ], ),
                victory_points = eve_esi_python.models.fw_leaderboards_get_victory_points.FwLeaderboardsGet_victory_points(
                    active_total = [
                        eve_esi_python.models.fw_leaderboards_get_victory_points_active_total_inner.FwLeaderboardsGet_victory_points_active_total_inner(
                            amount = 56, 
                            faction_id = 56, )
                        ], 
                    last_week = [
                        eve_esi_python.models.fw_leaderboards_get_victory_points_last_week_inner.FwLeaderboardsGet_victory_points_last_week_inner(
                            amount = 56, 
                            faction_id = 56, )
                        ], 
                    yesterday = [
                        eve_esi_python.models.fw_leaderboards_get_victory_points_yesterday_inner.FwLeaderboardsGet_victory_points_yesterday_inner(
                            amount = 56, 
                            faction_id = 56, )
                        ], )
            )
        else:
            return FwLeaderboardsGet(
                kills = eve_esi_python.models.fw_leaderboards_get_kills.FwLeaderboardsGet_kills(
                    active_total = [
                        eve_esi_python.models.fw_leaderboards_get_kills_active_total_inner.FwLeaderboardsGet_kills_active_total_inner(
                            amount = 56, 
                            faction_id = 56, )
                        ], 
                    last_week = [
                        eve_esi_python.models.fw_leaderboards_get_kills_last_week_inner.FwLeaderboardsGet_kills_last_week_inner(
                            amount = 56, 
                            faction_id = 56, )
                        ], 
                    yesterday = [
                        eve_esi_python.models.fw_leaderboards_get_kills_yesterday_inner.FwLeaderboardsGet_kills_yesterday_inner(
                            amount = 56, 
                            faction_id = 56, )
                        ], ),
                victory_points = eve_esi_python.models.fw_leaderboards_get_victory_points.FwLeaderboardsGet_victory_points(
                    active_total = [
                        eve_esi_python.models.fw_leaderboards_get_victory_points_active_total_inner.FwLeaderboardsGet_victory_points_active_total_inner(
                            amount = 56, 
                            faction_id = 56, )
                        ], 
                    last_week = [
                        eve_esi_python.models.fw_leaderboards_get_victory_points_last_week_inner.FwLeaderboardsGet_victory_points_last_week_inner(
                            amount = 56, 
                            faction_id = 56, )
                        ], 
                    yesterday = [
                        eve_esi_python.models.fw_leaderboards_get_victory_points_yesterday_inner.FwLeaderboardsGet_victory_points_yesterday_inner(
                            amount = 56, 
                            faction_id = 56, )
                        ], ),
        )
        """

    def testFwLeaderboardsGet(self):
        """Test FwLeaderboardsGet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
