# coding: utf-8

"""
    EVE Stellar Information (ESI) - tranquility

    EVE ESI Python Client generated with openapi-generator with strong typing features.

    The version of the OpenAPI document: 2020-01-01
    Contact: morte1916@gmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from eve_esi_python.models.corporations_corporation_id_starbases_starbase_id_get_fuels_inner import CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner

class TestCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner(unittest.TestCase):
    """CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner:
        """Test CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner`
        """
        model = CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner()
        if include_optional:
            return CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner(
                quantity = 56,
                type_id = 56
            )
        else:
            return CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner(
                quantity = 56,
                type_id = 56,
        )
        """

    def testCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner(self):
        """Test CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
