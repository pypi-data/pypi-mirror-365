{
  "agentCard": {
    "additionalInterfaces": [
      {
        "transport": "JSONRPC",
        "url": "https://georoute-agent.example.com/a2a/v1"
      },
      {
        "transport": "GRPC",
        "url": "https://georoute-agent.example.com/a2a/grpc"
      },
      {
        "transport": "HTTP+JSON",
        "url": "https://georoute-agent.example.com/a2a/json"
      }
    ],
    "capabilities": {
      "extensions": null,
      "pushNotifications": true,
      "stateTransitionHistory": false,
      "streaming": true
    },
    "defaultInputModes": [
      "application/json",
      "text/plain"
    ],
    "defaultOutputModes": [
      "application/json",
      "image/png"
    ],
    "description": "Provides advanced route planning, traffic analysis, and custom map generation services. This agent can calculate optimal routes, estimate travel times considering real-time traffic, and create personalized maps with points of interest.",
    "documentationUrl": "https://docs.examplegeoservices.com/georoute-agent/api",
    "iconUrl": "https://georoute-agent.example.com/icon.png",
    "name": "GeoSpatial Route Planner Agent",
    "preferredTransport": "JSONRPC",
    "protocolVersion": "0.2.9",
    "provider": {
      "organization": "Example Geo Services Inc.",
      "url": "https://www.examplegeoservices.com"
    },
    "security": [
      {
        "google": [
          "openid",
          "profile",
          "email"
        ]
      }
    ],
    "securitySchemes": {
      "google": {
        "description": null,
        "openIdConnectUrl": "https://accounts.google.com/.well-known/openid-configuration",
        "type": "openIdConnect"
      }
    },
    "skills": [
      {
        "description": "Calculates the optimal driving route between two or more locations, taking into account real-time traffic conditions, road closures, and user preferences (e.g., avoid tolls, prefer highways).",
        "examples": [
          "Plan a route from '1600 Amphitheatre Parkway, Mountain View, CA' to 'San Francisco International Airport' avoiding tolls.",
          "{\"origin\": {\"lat\": 37.422, \"lng\": -122.084}, \"destination\": {\"lat\": 37.7749, \"lng\": -122.4194}, \"preferences\": [\"avoid_ferries\"]}"
        ],
        "id": "route-optimizer-traffic",
        "inputModes": [
          "application/json",
          "text/plain"
        ],
        "name": "Traffic-Aware Route Optimizer",
        "outputModes": [
          "application/json",
          "application/vnd.geo+json",
          "text/html"
        ],
        "tags": [
          "maps",
          "routing",
          "navigation",
          "directions",
          "traffic"
        ]
      },
      {
        "description": "Creates custom map images or interactive map views based on user-defined points of interest, routes, and style preferences. Can overlay data layers.",
        "examples": [
          "Generate a map of my upcoming road trip with all planned stops highlighted.",
          "Show me a map visualizing all coffee shops within a 1-mile radius of my current location."
        ],
        "id": "custom-map-generator",
        "inputModes": [
          "application/json"
        ],
        "name": "Personalized Map Generator",
        "outputModes": [
          "image/png",
          "image/jpeg",
          "application/json",
          "text/html"
        ],
        "tags": [
          "maps",
          "customization",
          "visualization",
          "cartography"
        ]
      }
    ],
    "supportsAuthenticatedExtendedCard": true,
    "url": "https://georoute-agent.example.com/a2a/v1",
    "version": "1.2.0"
  },
  "verificationMaterial": {
    "signatureBundle": {
      "signature": "{\"mediaType\": \"application/vnd.dev.sigstore.bundle.v0.3+json\", \"verificationMaterial\": {\"certificate\": {\"rawBytes\": \"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\"}, \"tlogEntries\": [{\"logIndex\": \"315178194\", \"logId\": {\"keyId\": \"wNI9atQGlz+VWfO6LRygH4QUfY/8W4RFwiT5i5WRgB0=\"}, \"kindVersion\": {\"kind\": \"dsse\", \"version\": \"0.0.1\"}, \"integratedTime\": \"1753556976\", \"inclusionPromise\": {\"signedEntryTimestamp\": \"MEUCIQDcjx+WeOlq00q/Sa9gf0zeChHD7aaoOEi8SovPVASOLAIgbET/Z0ymQ2wtcki3zgbtnx7VASEIZ1JEdAbWrMSRU3g=\"}, \"inclusionProof\": {\"logIndex\": \"193273932\", \"rootHash\": \"b2/R5I1VrRFITUBNgxUop5j0z5VNw08DhA9xGJi7Gms=\", \"treeSize\": \"193273934\", \"hashes\": [\"EmZt471Kd0cp8kpFciKkANeWH+SAk7WLRbv6UOzOnOg=\", \"p9U9pMR4LOp8Uvsi/lVp6qpUuGBlQa3y4/4Jz8adaNs=\", \"znIbeKzsBR1664NlaMsCBbBKWraVEcMe4Hf650TeAco=\", \"D+ESthg97kcNI90rOXsFJZ2anip7VtRyHjOwhdZzAOs=\", \"c+IB0OCgFdW7MhGKtWmancUVQck86SdIjM3LI11QZrc=\", \"r8hipuh+lGLAnlScyCZnqfCt8T+W4+uTaBk1VZQ6aKU=\", \"7uLwFTXqEgcPOMRHXBy/7xD19Ko2R8d7mchE7INfRNU=\", \"ZECSrawbW7xcTYWt92a6Hvpv659pnkePsf9NWTogPzw=\", \"IFGnhaSgtefBWTqFW7bRojC0bBHVbOb8JzL0K1LrQFU=\", \"HouMZeE2XjlPmxVnP7fw6rUjyw+RRQ8qbLEEKlq2uOA=\", \"wLANT0NMxIRh/p5rRcam4MppSIbUXIfT1Ht9FQA2XnI=\"], \"checkpoint\": {\"envelope\": \"rekor.sigstore.dev - 1193050959916656506\\n193273934\\nb2/R5I1VrRFITUBNgxUop5j0z5VNw08DhA9xGJi7Gms=\\n\\n\\u2014 rekor.sigstore.dev wNI9ajBFAiEAoQXKWVbxsN72SzUlgAumoRMWyD5yHYzMqiI0mFV8iVUCIEcHI3NslcXuJgXbJrQaaLcm3BdSFyq4Xa2hFx4VRgHb\\n\"}}, \"canonicalizedBody\": \"eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiZHNzZSIsInNwZWMiOnsiZW52ZWxvcGVIYXNoIjp7ImFsZ29yaXRobSI6InNoYTI1NiIsInZhbHVlIjoiNTlkMjRhNmUxMWJiMDU3NmQxOWVjZjUxN2M1ZWUyMmEyMmQ2ZTI3ZjFlMzM5MWJhMWQzMzY0NWZlNjk0NTk2ZSJ9LCJwYXlsb2FkSGFzaCI6eyJhbGdvcml0aG0iOiJzaGEyNTYiLCJ2YWx1ZSI6IjE4ZTNlZDEwNmI5NzM0YTgwOGUyNTEwZDkyMjU5MzhjMzhiNWI0NjNiMWI1MzRhZWZjN2M0OWEyMmQ2OWQ1YmIifSwic2lnbmF0dXJlcyI6W3sic2lnbmF0dXJlIjoiTUVZQ0lRQ3VhVms4SXZHUmVXbFRpUHBZTnJZbkVSaThhMzVyWWJHZVk1WndXc3JlZ3dJaEFPbko0LzlsenNJWDFGU21IMHFIUkFZMENXSWFiNVpaTGJ3SUlXeE9ocERtIiwidmVyaWZpZXIiOiJMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1Vjd2FrTkRRbXhwWjBGM1NVSkJaMGxWUnpWdmN6ZzRjRU5pVjFZelluSmxObWhUTkhObmNHNVJORlJuZDBObldVbExiMXBKZW1vd1JVRjNUWGNLVG5wRlZrMUNUVWRCTVZWRlEyaE5UV015Ykc1ak0xSjJZMjFWZFZwSFZqSk5ValIzU0VGWlJGWlJVVVJGZUZaNllWZGtlbVJIT1hsYVV6RndZbTVTYkFwamJURnNXa2RzYUdSSFZYZElhR05PVFdwVmQwNTZTVEpOVkd0M1QxUk5NbGRvWTA1TmFsVjNUbnBKTWsxVWEzaFBWRTB5VjJwQlFVMUdhM2RGZDFsSUNrdHZXa2w2YWpCRFFWRlpTVXR2V2tsNmFqQkVRVkZqUkZGblFVVjJiR3hxVDJacWEwYzVOMkZSY1d4VlNtSk9WM0Z4TmpKUVYzZDBiblJTU0U4emFuSUtlVFpqWldsak1HRlNTekkzV1RGTlMwSk5SVEZhVWs1Vk5XUnpVVVZPUlVoMWNEUnpjQzlITmtkRlJVdFBRbU52ZEhGUFEwSllZM2RuWjFaNlRVRTBSd3BCTVZWa1JIZEZRaTkzVVVWQmQwbElaMFJCVkVKblRsWklVMVZGUkVSQlMwSm5aM0pDWjBWR1FsRmpSRUY2UVdSQ1owNVdTRkUwUlVablVWVnNMMWRvQ2taUFNqRldaa0p1Y21aWlVVdDBOR0kwWWxobmRsWmpkMGgzV1VSV1VqQnFRa0puZDBadlFWVXpPVkJ3ZWpGWmEwVmFZalZ4VG1wd1MwWlhhWGhwTkZrS1drUTRkMWwzV1VSV1VqQlNRVkZJTDBKR2EzZFdORnBXWVVoU01HTklUVFpNZVRsdVlWaFNiMlJYU1hWWk1qbDBUREZLYkZwRlVuWmtSa3AyV1RKMGJBcGtRemw2WVZka2VtUkhPWGxhVXpGb1RXMUZka3h0WkhCa1IyZ3hXV2s1TTJJelNuSmFiWGgyWkROTmRsa3lhM1ZsVnpGelVVaEtiRnB1VFhaaFIxWm9DbHBJVFhaaVYwWndZbXBCTlVKbmIzSkNaMFZGUVZsUEwwMUJSVUpDUTNSdlpFaFNkMk42YjNaTU0xSjJZVEpXZFV4dFJtcGtSMngyWW01TmRWb3liREFLWVVoV2FXUllUbXhqYlU1MlltNVNiR0p1VVhWWk1qbDBUVUpKUjBOcGMwZEJVVkZDWnpjNGQwRlJTVVZDU0VJeFl6Sm5kMDVuV1V0TGQxbENRa0ZIUkFwMmVrRkNRWGRSYjA1VVVUTlBWRlV6VFdwTmVWcFVSVFJaZWtrMFRWUm5OVTU2U1hoTlYxRjZXVlJqZUUxVVFYcE5la2wzVGxSbmVWbHFWVEpPVkVGakNrSm5iM0pDWjBWRlFWbFBMMDFCUlVWQ1FUVkVVMU01UkZKRFFsRmhXRUpzWWtkc2RWcFVRVzVDWjI5eVFtZEZSVUZaVHk5TlFVVkdRa0pzVTFwWFVrVUtZak5TVTJJeVRuSmFXRkYyWXpKc2JtTXpVblpqYlZWMFdWUkthRTFDTUVkRGFYTkhRVkZSUW1jM09IZEJVVmxGUkROS2JGcHVUWFpoUjFab1draE5kZ3BpVjBad1ltcEJOMEpuYjNKQ1owVkZRVmxQTDAxQlJVbENRekJOU3pKb01HUklRbnBQYVRoMlpFYzVjbHBYTkhWWlYwNHdZVmM1ZFdONU5XNWhXRkp2Q21SWFNqRmpNbFo1V1RJNWRXUkhWblZrUXpWcVlqSXdkMXBSV1V0TGQxbENRa0ZIUkhaNlFVSkRVVkpZUkVaV2IyUklVbmRqZW05MlRESmtjR1JIYURFS1dXazFhbUl5TUhaVmJWWnJVa2M1TUZWdE9XcGhNbFl3VEROT2NGb3pUakJpTTBwc1RGZEZlVmxUT0hWYU1td3dZVWhXYVV3elpIWmpiWFJ0WWtjNU13cGplVGxxWVZNMU5XSlhlRUZqYlZadFkzazViMXBYUm10amVUbDBXVmRzZFUxRVowZERhWE5IUVZGUlFtYzNPSGRCVVc5RlMyZDNiMDVVVVROUFZGVXpDazFxVFhsYVZFVTBXWHBKTkUxVVp6Vk9la2w0VFZkUmVsbFVZM2hOVkVGNlRYcEpkMDVVWjNsWmFsVXlUbFJCWkVKbmIzSkNaMFZGUVZsUEwwMUJSVXdLUWtFNFRVUlhaSEJrUjJneFdXa3hiMkl6VGpCYVYxRjNVRUZaUzB0M1dVSkNRVWRFZG5wQlFrUkJVWFZFUTNodlpFaFNkMk42YjNaTU1tUndaRWRvTVFwWmFUVnFZakl3ZGxWdFZtdFNSemt3VlcwNWFtRXlWakJNTTA1d1dqTk9NR0l6U214TVYwVjVXVlJCTkVKbmIzSkNaMFZGUVZsUEwwMUJSVTVDUTI5TkNrdEVWVEJPZW1zeFRucEplazF0VlhoUFIwMTVUMFJGTkU5VVkzbE5WRVpyVFRKRk0wMVVSWGROZWsxNVRVUlZORTF0U1RGT2FsVjNTSGRaUzB0M1dVSUtRa0ZIUkhaNlFVSkVaMUZTUkVFNWVWcFhXbnBNTW1oc1dWZFNla3d5TVdoaFZ6UjNSMmRaUzB0M1dVSkNRVWRFZG5wQlFrUjNVVTFFUVc5NFRVUkZOUXBQUkVsM1RrUmpORTFET0VkRGFYTkhRVkZSUW1jM09IZEJVa0ZGU1ZGM1ptRklVakJqU0UwMlRIazVibUZZVW05a1YwbDFXVEk1ZEV3eFNteGFSVkoyQ21SR1NuWlpNblJzWkVSQldrSm5iM0pDWjBWRlFWbFBMMDFCUlZKQ1FYTk5RMVJKZUU1cVFYaE9SRkY1VGtSQ2JFSm5iM0pDWjBWRlFWbFBMMDFCUlZNS1FrWmpUVlpYYURCa1NFSjZUMms0ZGxveWJEQmhTRlpwVEcxT2RtSlRPVk5hVjFKRllqTlNVMkl5VG5KYVdGRjJZekpzYm1NelVuWmpiVlYwV1ZSS2FBcE1lVFZ1WVZoU2IyUlhTWFprTWpsNVlUSmFjMkl6WkhwTU1rNXdURzVzZEdKRlFubGFWMXA2VERKb2JGbFhVbnBNTWpGb1lWYzBkMDlCV1V0TGQxbENDa0pCUjBSMmVrRkNSWGRSY1VSRFp6Rk9SR00xVGxSamVVMTZTbXhOVkdocVRXcG5lRTlFYXpOTmFrVjRXa1JPYUU1NlJYaE5SRTE2VFdwQk1VOUVTbWtLVGxSWk1VMUNVVWREYVhOSFFWRlJRbWMzT0hkQlVsRkZRbWQzUldOSVZucGhSRUpuUW1kdmNrSm5SVVZCV1U4dlRVRkZWa0pHU1UxVlIyZ3daRWhDZWdwUGFUaDJXakpzTUdGSVZtbE1iVTUyWWxNNVUxcFhVa1ZpTTFKVFlqSk9jbHBZVVhaak1teHVZek5TZG1OdFZYUlpWRXBvVERKR2FtUkhiSFppYmsxMkNtTnVWblZqZVRoNFRtcFZNRTFxYXpSUFJHTjRUME01YUdSSVVteGlXRUl3WTNrNGVFMUNXVWREYVhOSFFWRlJRbWMzT0hkQlVsbEZRMEYzUjJOSVZta0tZa2RzYWsxSlIwdENaMjl5UW1kRlJVRmtXalZCWjFGRFFraDNSV1ZuUWpSQlNGbEJNMVF3ZDJGellraEZWRXBxUjFJMFkyMVhZek5CY1VwTFdISnFaUXBRU3pNdmFEUndlV2RET0hBM2J6UkJRVUZIV1ZORFVVUllkMEZCUWtGTlFWSjZRa1pCYVVKNlNuQkdVV05FYUZaU0syZzJaVzVNT1RaTFpHSkViamhUQ2xZck5TdGhOMlZqTjNNelFrSkRlbmg2UVVsb1FVOUJSalJxYTB0U2NYZGlUMjVFY3pKVFdYTldWMm8xTkRCWmVUZExPVFp4WTI1VU5sSXpZVlJrU0V3S1RVRnZSME5EY1VkVFRUUTVRa0ZOUkVFeVowRk5SMVZEVFVkcWJHRlFkMjg0V1ZCYVVtd3pWblJhY2xkTFYxRjRWVGhKVmk5R2VHSjZWelZMTmtSNmVRcE5WaXRVV1VKWlFVeExSWGR5UVZwUWRuZ3dVa05hT0dvMFowbDRRVXN4YVU0NWNHVjRWRXBzV1RaeGFsUTFiMXA2YjFobFVuVk1iekFyT1VJMVZETmlDbnAyV0Raa2NVSlVaalZMYlVsMldHTXdlbmxoU2tZdlRGaDJXREpCUVQwOUNpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwSyJ9XX19\"}], \"timestampVerificationData\": {}}, \"dsseEnvelope\": {\"payload\": \"eyJfdHlwZSI6Imh0dHBzOi8vaW4tdG90by5pby9TdGF0ZW1lbnQvdjEiLCJzdWJqZWN0IjpbeyJuYW1lIjoiR2VvU3BhdGlhbCBSb3V0ZSBQbGFubmVyIEFnZW50IiwiZGlnZXN0Ijp7InNoYTI1NiI6IjQ3NTM4MzJkZmEzNDMxOTdmYjA2NGEzYTVlZDA5ZWZhZTRlYzA4YWNhMWRjY2RkMTIwYjkzMjA2NWRmODA1ZmMifX1dLCJwcmVkaWNhdGVUeXBlIjoiaHR0cHM6Ly9hMmEub3BlbndhbGxldC5kZXYvYWdlbnRjYXJkL3YxIiwicHJlZGljYXRlIjp7InByb3RvY29sVmVyc2lvbiI6IjAuMi45IiwibmFtZSI6Ikdlb1NwYXRpYWwgUm91dGUgUGxhbm5lciBBZ2VudCIsImRlc2NyaXB0aW9uIjoiUHJvdmlkZXMgYWR2YW5jZWQgcm91dGUgcGxhbm5pbmcsIHRyYWZmaWMgYW5hbHlzaXMsIGFuZCBjdXN0b20gbWFwIGdlbmVyYXRpb24gc2VydmljZXMuIFRoaXMgYWdlbnQgY2FuIGNhbGN1bGF0ZSBvcHRpbWFsIHJvdXRlcywgZXN0aW1hdGUgdHJhdmVsIHRpbWVzIGNvbnNpZGVyaW5nIHJlYWwtdGltZSB0cmFmZmljLCBhbmQgY3JlYXRlIHBlcnNvbmFsaXplZCBtYXBzIHdpdGggcG9pbnRzIG9mIGludGVyZXN0LiIsInVybCI6Imh0dHBzOi8vZ2Vvcm91dGUtYWdlbnQuZXhhbXBsZS5jb20vYTJhL3YxIiwicHJlZmVycmVkVHJhbnNwb3J0IjoiSlNPTlJQQyIsImFkZGl0aW9uYWxJbnRlcmZhY2VzIjpbeyJ1cmwiOiJodHRwczovL2dlb3JvdXRlLWFnZW50LmV4YW1wbGUuY29tL2EyYS92MSIsInRyYW5zcG9ydCI6IkpTT05SUEMifSx7InVybCI6Imh0dHBzOi8vZ2Vvcm91dGUtYWdlbnQuZXhhbXBsZS5jb20vYTJhL2dycGMiLCJ0cmFuc3BvcnQiOiJHUlBDIn0seyJ1cmwiOiJodHRwczovL2dlb3JvdXRlLWFnZW50LmV4YW1wbGUuY29tL2EyYS9qc29uIiwidHJhbnNwb3J0IjoiSFRUUCtKU09OIn1dLCJwcm92aWRlciI6eyJvcmdhbml6YXRpb24iOiJFeGFtcGxlIEdlbyBTZXJ2aWNlcyBJbmMuIiwidXJsIjoiaHR0cHM6Ly93d3cuZXhhbXBsZWdlb3NlcnZpY2VzLmNvbSJ9LCJpY29uVXJsIjoiaHR0cHM6Ly9nZW9yb3V0ZS1hZ2VudC5leGFtcGxlLmNvbS9pY29uLnBuZyIsInZlcnNpb24iOiIxLjIuMCIsImRvY3VtZW50YXRpb25VcmwiOiJodHRwczovL2RvY3MuZXhhbXBsZWdlb3NlcnZpY2VzLmNvbS9nZW9yb3V0ZS1hZ2VudC9hcGkiLCJjYXBhYmlsaXRpZXMiOnsic3RyZWFtaW5nIjp0cnVlLCJwdXNoTm90aWZpY2F0aW9ucyI6dHJ1ZSwic3RhdGVUcmFuc2l0aW9uSGlzdG9yeSI6ZmFsc2V9LCJzZWN1cml0eVNjaGVtZXMiOnsiZ29vZ2xlIjp7InR5cGUiOiJvcGVuSWRDb25uZWN0Iiwib3BlbklkQ29ubmVjdFVybCI6Imh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS8ud2VsbC1rbm93bi9vcGVuaWQtY29uZmlndXJhdGlvbiJ9fSwic2VjdXJpdHkiOlt7Imdvb2dsZSI6WyJvcGVuaWQiLCJwcm9maWxlIiwiZW1haWwiXX1dLCJkZWZhdWx0SW5wdXRNb2RlcyI6WyJhcHBsaWNhdGlvbi9qc29uIiwidGV4dC9wbGFpbiJdLCJkZWZhdWx0T3V0cHV0TW9kZXMiOlsiYXBwbGljYXRpb24vanNvbiIsImltYWdlL3BuZyJdLCJza2lsbHMiOlt7ImlkIjoicm91dGUtb3B0aW1pemVyLXRyYWZmaWMiLCJuYW1lIjoiVHJhZmZpYy1Bd2FyZSBSb3V0ZSBPcHRpbWl6ZXIiLCJkZXNjcmlwdGlvbiI6IkNhbGN1bGF0ZXMgdGhlIG9wdGltYWwgZHJpdmluZyByb3V0ZSBiZXR3ZWVuIHR3byBvciBtb3JlIGxvY2F0aW9ucywgdGFraW5nIGludG8gYWNjb3VudCByZWFsLXRpbWUgdHJhZmZpYyBjb25kaXRpb25zLCByb2FkIGNsb3N1cmVzLCBhbmQgdXNlciBwcmVmZXJlbmNlcyAoZS5nLiwgYXZvaWQgdG9sbHMsIHByZWZlciBoaWdod2F5cykuIiwidGFncyI6WyJtYXBzIiwicm91dGluZyIsIm5hdmlnYXRpb24iLCJkaXJlY3Rpb25zIiwidHJhZmZpYyJdLCJleGFtcGxlcyI6WyJQbGFuIGEgcm91dGUgZnJvbSAnMTYwMCBBbXBoaXRoZWF0cmUgUGFya3dheSwgTW91bnRhaW4gVmlldywgQ0EnIHRvICdTYW4gRnJhbmNpc2NvIEludGVybmF0aW9uYWwgQWlycG9ydCcgYXZvaWRpbmcgdG9sbHMuIiwie1wib3JpZ2luXCI6IHtcImxhdFwiOiAzNy40MjIsIFwibG5nXCI6IC0xMjIuMDg0fSwgXCJkZXN0aW5hdGlvblwiOiB7XCJsYXRcIjogMzcuNzc0OSwgXCJsbmdcIjogLTEyMi40MTk0fSwgXCJwcmVmZXJlbmNlc1wiOiBbXCJhdm9pZF9mZXJyaWVzXCJdfSJdLCJpbnB1dE1vZGVzIjpbImFwcGxpY2F0aW9uL2pzb24iLCJ0ZXh0L3BsYWluIl0sIm91dHB1dE1vZGVzIjpbImFwcGxpY2F0aW9uL2pzb24iLCJhcHBsaWNhdGlvbi92bmQuZ2VvK2pzb24iLCJ0ZXh0L2h0bWwiXX0seyJpZCI6ImN1c3RvbS1tYXAtZ2VuZXJhdG9yIiwibmFtZSI6IlBlcnNvbmFsaXplZCBNYXAgR2VuZXJhdG9yIiwiZGVzY3JpcHRpb24iOiJDcmVhdGVzIGN1c3RvbSBtYXAgaW1hZ2VzIG9yIGludGVyYWN0aXZlIG1hcCB2aWV3cyBiYXNlZCBvbiB1c2VyLWRlZmluZWQgcG9pbnRzIG9mIGludGVyZXN0LCByb3V0ZXMsIGFuZCBzdHlsZSBwcmVmZXJlbmNlcy4gQ2FuIG92ZXJsYXkgZGF0YSBsYXllcnMuIiwidGFncyI6WyJtYXBzIiwiY3VzdG9taXphdGlvbiIsInZpc3VhbGl6YXRpb24iLCJjYXJ0b2dyYXBoeSJdLCJleGFtcGxlcyI6WyJHZW5lcmF0ZSBhIG1hcCBvZiBteSB1cGNvbWluZyByb2FkIHRyaXAgd2l0aCBhbGwgcGxhbm5lZCBzdG9wcyBoaWdobGlnaHRlZC4iLCJTaG93IG1lIGEgbWFwIHZpc3VhbGl6aW5nIGFsbCBjb2ZmZWUgc2hvcHMgd2l0aGluIGEgMS1taWxlIHJhZGl1cyBvZiBteSBjdXJyZW50IGxvY2F0aW9uLiJdLCJpbnB1dE1vZGVzIjpbImFwcGxpY2F0aW9uL2pzb24iXSwib3V0cHV0TW9kZXMiOlsiaW1hZ2UvcG5nIiwiaW1hZ2UvanBlZyIsImFwcGxpY2F0aW9uL2pzb24iLCJ0ZXh0L2h0bWwiXX1dLCJzdXBwb3J0c0F1dGhlbnRpY2F0ZWRFeHRlbmRlZENhcmQiOnRydWV9fQ==\", \"payloadType\": \"application/vnd.in-toto+json\", \"signatures\": [{\"sig\": \"MEYCIQCuaVk8IvGReWlTiPpYNrYnERi8a35rYbGeY5ZwWsregwIhAOnJ4/9lzsIX1FSmH0qHRAY0CWIab5ZZLbwIIWxOhpDm\"}]}}",
      "certificate": "",
      "certificateChain": null,
      "transparencyLogEntry": null,
      "timestamp": "2025-07-26 19:09:36.856912+00:00"
    },
    "provenanceBundle": {
      "_type": "application/vnd.in-toto+json",
      "subject": [
        {
          "name": "GeoSpatial Route Planner Agent-1.2.0",
          "digest": {
            "sha256": "4753832dfa343197fb064a3a5ed09efae4ec08aca1dccdd120b932065df805fc",
            "sha1": "1bb986f3f03575dca6a5d0c57ed15e17e8b7e046",
            "sha512": "16585b4a6b6cfacdb1293aabc48c55ff1d62b64ac742d1050242d2c496a4ee2b4c9baadc56aadb51aef9f8855e3609ce591b9dba8b190d84c8e9e45a405c4e44"
          }
        }
      ],
      "predicateType": "https://slsa.dev/provenance/v1",
      "runDetails": {
        "builder": {
          "id": "https://github.com/RedDotRocket/a2a-sigstore/actions",
          "version": {
            "github_actions": "1.0"
          }
        },
        "buildDefinition": {
          "buildType": "https://github.com/actions/workflow@v1",
          "externalParameters": {
            "source": {
              "repository": "RedDotRocket/a2a-sigstore",
              "ref": "refs/heads/main",
              "path": "/",
              "revision": "547957232e18c281897211d3a71103320582b565"
            },
            "config": null,
            "vars": null
          },
          "internalParameters": null,
          "resolvedDependencies": null
        },
        "invocation": {
          "configSource": {
            "source": {
              "repository": "RedDotRocket/a2a-sigstore",
              "ref": "refs/heads/main",
              "path": "/",
              "revision": "547957232e18c281897211d3a71103320582b565"
            }
          }
        },
        "metadata": {
          "buildInvocationId": "16542988718",
          "buildStartedOn": "2025-07-26T19:09:35.937621Z",
          "completeness": {
            "parameters": true,
            "environment": false,
            "materials": false
          },
          "reproducible": false
        }
      },
      "buildDefinition": {
        "buildType": "https://github.com/actions/workflow@v1",
        "externalParameters": {
          "source": {
            "repository": "RedDotRocket/a2a-sigstore",
            "ref": "refs/heads/main",
            "path": "/",
            "revision": "547957232e18c281897211d3a71103320582b565"
          },
          "config": null,
          "vars": null
        },
        "internalParameters": null,
        "resolvedDependencies": null
      }
    }
  }
}