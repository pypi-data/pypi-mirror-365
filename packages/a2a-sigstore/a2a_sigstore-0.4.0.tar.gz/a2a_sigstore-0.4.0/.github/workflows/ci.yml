name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  id-token: write  # Required for Sigstore OIDC

jobs:
  lint-and-format:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          make install-dev

      - name: Lint and type check
        run: |
          make lint
        continue-on-error: true  # Allow type check failures for now, until we nail down types

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          make install-dev

      - name: Run tests
        run: |
          make test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  test-cli:
    name: CLI Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          make install

      - name: Test CLI help
        run: |
          uv run a2a-sigstore --help
          uv run a2a-sigstore sign --help
          uv run a2a-sigstore verify --help


  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint-and-format, test, test-cli]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Build package
        run: |
          make build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  sign-agent-card:
    name: Sign Example Agent Card
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          make install

      - name: Sign example Agent Card
        run: |
          uv run a2a-sigstore sign example_agentcard.json \
            --output signed-example.json \
            --repository ${{ github.repository }}

      - name: Verify signed Agent Card
        run: |
          uv run a2a-sigstore verify signed-example.json \
            --repository ${{ github.repository }} \
            --workflow "${{ github.workflow }}"

      - name: Upload signed Agent Card
        uses: actions/upload-artifact@v4
        with:
          name: signed-agent-card
          path: signed-example.json
          retention-days: 30

      - name: Display signature info
        run: |
          echo "Successfully signed Agent Card!"
          echo "Repository: ${{ github.repository }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "SHA: ${{ github.sha }}"
          echo "Actor: ${{ github.actor }}"
          uv run a2a-sigstore --verbose verify signed-example.json \
            --repository ${{ github.repository }}