Metadata-Version: 2.4
Name: sagesim
Version: 0.4.0.dev1
Summary: Scalable Agent-based GPU Enabled Simulator.
Author-email: Chathika Gunaratne <chathikagunaratne@gmail.com>, Xi Zhang <cc.zhang1992@gmail.com>
Maintainer-email: Chathika Gunaratne <chathikagunaratne@gmail.com>, Xi Zhang <cc.zhang1992@gmail.com>
License: MIT License
        
        Copyright (c) 2024 Oak Ridge National Laboratory
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Repository, https://github.com/ornl/sagesim.git
Keywords: agent-based,hpc,gpu
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: awkward==2.7.4
Requires-Dist: networkx==3.4.2
Requires-Dist: numpy==2.2.3
Requires-Dist: ragged==0.2.0
Dynamic: license-file

![# SAGESim](SAGESim-inline-tag-color.png)


# Requirements

 - Python 3.11+
 - NVIDIA GPU with CUDA drivers or AMD GPU with ROCm 5.7.1+ 

# Installation
Your system might require specific steps to installing `mpi4py` and/or `cupy` depending on your hardware.
In that case use your systems recommended instructions to install `mpi4py` and `cupy` and execute:

`pip install sagesim` 

# Run Example

 - `git clone https://code.ornl.gov/sagesim/sagesim`
 - `cd /path/to/clone_repo/examples/sir`
 - `mpirun -n 4 python run.py --num_agents 10000 --percent_init_connections 0.1 --num_nodes 1`


# There are some unfortunate quirks to using CuPyx `jit.rawkernel`:
 - nan checked by inequality to self. Unfortunate limitation of cupyx.
 - Dicts and objects are unsupported.
 - *args and **kwargs are unsupported.
 - nested functions are unsupported.
 - Be sure to use `cupy` data types and array routines in favor of `numpy`: [https://docs.cupy.dev/en/stable/reference/routines.html]
 - `for` loops must use range iterator only. No 'for each' style loops.
 - `return` does not seem to work well either
 - `break` and `continue` are unsupported!
 - Cannot reassign variables within `if` or `for` statements. Must be assigned at top level of function or new variable declared under subscope.
 -  `-1` indexing does not necessarily work as expected, as it will access the last element of the memory block of the array instead of the logical array. Use `len(my_array) - 1` instead
