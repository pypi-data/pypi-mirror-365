# coding: utf-8

"""
    RCABench API

    RCABench - A comprehensive root cause analysis benchmarking platform for microservices This API provides endpoints for managing datasets, algorithms, evaluations, and fault injections for root cause analysis in distributed systems and microservices architectures.

    The version of the OpenAPI document: 1.0.1
    Contact: team@rcabench.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from rcabench.models.dto_create_role_request import DtoCreateRoleRequest

class TestDtoCreateRoleRequest(unittest.TestCase):
    """DtoCreateRoleRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DtoCreateRoleRequest:
        """Test DtoCreateRoleRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DtoCreateRoleRequest`
        """
        model = DtoCreateRoleRequest()
        if include_optional:
            return DtoCreateRoleRequest(
                description = 'Role for data analysis operations',
                display_name = 'Data Analyst',
                name = 'data_analyst',
                type = 'custom'
            )
        else:
            return DtoCreateRoleRequest(
                display_name = 'Data Analyst',
                name = 'data_analyst',
                type = 'custom',
        )
        """

    def testDtoCreateRoleRequest(self):
        """Test DtoCreateRoleRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
