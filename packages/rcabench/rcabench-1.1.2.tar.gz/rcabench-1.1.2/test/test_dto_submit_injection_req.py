# coding: utf-8

"""
    RCABench API

    RCABench - A comprehensive root cause analysis benchmarking platform for microservices This API provides endpoints for managing datasets, algorithms, evaluations, and fault injections for root cause analysis in distributed systems and microservices architectures.

    The version of the OpenAPI document: 1.0.1
    Contact: team@rcabench.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from rcabench.models.dto_submit_injection_req import DtoSubmitInjectionReq

class TestDtoSubmitInjectionReq(unittest.TestCase):
    """DtoSubmitInjectionReq unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DtoSubmitInjectionReq:
        """Test DtoSubmitInjectionReq
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DtoSubmitInjectionReq`
        """
        model = DtoSubmitInjectionReq()
        if include_optional:
            return DtoSubmitInjectionReq(
                algorithms = [
                    rcabench.models.dto/algorithm_item.dto.AlgorithmItem(
                        image = '', 
                        name = '', 
                        tag = '', )
                    ],
                benchmark = '',
                interval = 1,
                labels = [
                    rcabench.models.dto/label_item.dto.LabelItem(
                        key = 'env', 
                        value = '', )
                    ],
                pre_duration = 1,
                project_name = '',
                specs = [
                    rcabench.models.handler/node.handler.Node(
                        children = {
                            'key' : rcabench.models.handler/node.handler.Node(
                                description = '', 
                                name = '', 
                                range = [
                                    56
                                    ], 
                                value = 56, )
                            }, 
                        description = '', 
                        name = '', 
                        range = [
                            56
                            ], 
                        value = 56, )
                    ]
            )
        else:
            return DtoSubmitInjectionReq(
                benchmark = '',
                interval = 1,
                pre_duration = 1,
                project_name = '',
                specs = [
                    rcabench.models.handler/node.handler.Node(
                        children = {
                            'key' : rcabench.models.handler/node.handler.Node(
                                description = '', 
                                name = '', 
                                range = [
                                    56
                                    ], 
                                value = 56, )
                            }, 
                        description = '', 
                        name = '', 
                        range = [
                            56
                            ], 
                        value = 56, )
                    ],
        )
        """

    def testDtoSubmitInjectionReq(self):
        """Test DtoSubmitInjectionReq"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
