Metadata-Version: 2.4
Name: mcp-foxxy-bridge
Version: 1.0.1
Summary: A MCP Forward Proxy Bridge designed to be a one-to-many bridge allowing you to use a single MCP server to communicate with many MCP servers transparently.
Project-URL: Homepage, https://github.com/billyjbryant/mcp-foxxy-bridge
Project-URL: Source, https://github.com/billyjbryant/mcp-foxxy-bridge
Project-URL: Documentation, https://github.com/billyjbryant/mcp-foxxy-bridge
Project-URL: Changelog, https://github.com/billyjbryant/mcp-foxxy-bridge/releases
Author-email: Billy Bryant <billy@billyjbryant.com>
License: GNU AFFERO GENERAL PUBLIC LICENSE
        Version 3, 19 November 2007
        
        Copyright (C) 2024 Billy Bryant
        Copyright (C) 2024 Sergey Parfenyuk (original MIT-licensed author)
        
        This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
        
        This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
        
        You should have received a copy of the GNU Affero General Public License along with this program. If not, see <https://www.gnu.org/licenses/>.
        
        ---
        
        ## MIT License Attribution
        
        Portions of this software were originally licensed under the MIT License by Sergey Parfenyuk (2024). The original MIT license text is included below for attribution purposes only:
        
        MIT License
        
        Copyright (c) 2024 Sergey Parfenyuk
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
        ---
        
        ## Full AGPL-3.0-or-later License
        
        GNU AFFERO GENERAL PUBLIC LICENSE
        Version 3, 19 November 2007
        
        Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
        
        Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.
        
        Preamble
        
        The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.
        
        The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.
        
        When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.
        
        Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.
        
        A secondary benefit of defending all users' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate. Many developers of free software are heartened and encouraged by the resulting cooperation. However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.
        
        The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community. It requires the operator of a network server to provide the source code of the modified version running there to the users of that server. Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.
        
        An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals. This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.
        
        The precise terms and conditions for copying, distribution and modification follow.
        
        [...AGPL-3.0-or-later full text continues here, as found at https://www.gnu.org/licenses/agpl-3.0-standalone.html...]
License-File: LICENSE
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Classifier: Typing :: Typed
Requires-Python: >=3.11
Requires-Dist: jsonschema>=4.0.0
Requires-Dist: mcp<2.0.0,>=1.8.0
Requires-Dist: uvicorn>=0.34.0
Description-Content-Type: text/markdown

# MCP Foxxy Bridge

[![CI/CD Pipeline](https://github.com/billyjbryant/mcp-foxxy-bridge/workflows/CI/CD%20Pipeline/badge.svg)](https://github.com/billyjbryant/mcp-foxxy-bridge/actions)
[![Release](https://github.com/billyjbryant/mcp-foxxy-bridge/workflows/CI/CD%20Pipeline/badge.svg?branch=main&event=release)](https://github.com/billyjbryant/mcp-foxxy-bridge/releases)
[![PyPI version](https://badge.fury.io/py/mcp-foxxy-bridge.svg)](https://badge.fury.io/py/mcp-foxxy-bridge)
[![Python 3.11+](https://img.shields.io/badge/python-3.11+-blue.svg)](https://www.python.org/downloads/)
[![License: AGPL v3](https://img.shields.io/badge/License-AGPL%20v3-blue.svg)](https://www.gnu.org/licenses/agpl-3.0)

A **MCP Forward Proxy Bridge** designed to be a one-to-many bridge that allows you to use a single MCP server to communicate with many MCP servers transparently.

## Overview

The MCP Foxxy Bridge solves the problem of having to configure multiple MCP servers across different AI tools by providing a centralized proxy that:

- **Aggregates multiple MCP servers** into a single interface
- **Exposes all tools, resources, and prompts** from configured MCP servers
- **Routes requests transparently** to the appropriate underlying MCP server
- **Allows you to configure your MCPs in one place** for use across all AI tools

## Quick Start

### Installation

**Recommended: Install via uv**
```bash
uv tool install mcp-foxxy-bridge
```

**Alternative: Install via pipx**
```bash
pipx install mcp-foxxy-bridge
```

**Install latest from git**
```bash
uv tool install git+https://github.com/billyjbryant/mcp-foxxy-bridge
```

### Basic Usage

**Start bridge with multiple servers:**
```bash
mcp-foxxy-bridge --port 8080 \
  --named-server fetch 'uvx mcp-server-fetch' \
  --named-server github 'npx -y @modelcontextprotocol/server-github' \
  --named-server filesystem 'npx -y @modelcontextprotocol/server-filesystem'
```

**Start bridge with configuration file:**
```bash
mcp-foxxy-bridge --port 8080 --named-server-config ./servers.json
```

**Connect AI tools to the bridge:**
Your bridge will be available at `http://localhost:8080/sse`

### Claude Desktop Configuration

Add this to your Claude Desktop MCP configuration:

```json
{
  "mcpServers": {
    "foxxy-bridge": {
      "command": "mcp-foxxy-bridge",
      "args": ["http://localhost:8080/sse"]
    }
  }
}
```

## Architecture

```
AI Tools (Claude Desktop, VS Code, etc.)
    ↓ (SSE/stdio)
MCP Foxxy Bridge
    ↓ (stdio to multiple servers)
MCP Server 1, MCP Server 2, MCP Server N
```

The Foxxy Bridge acts as a transparent forward proxy between AI tools and multiple MCP servers, providing:

- **Tool Aggregation**: Unified access to tools from all connected servers
- **Resource Aggregation**: Access to resources across multiple servers
- **Namespace Management**: Automatic tool/resource namespacing to prevent conflicts
- **Request Routing**: Intelligent routing of requests to appropriate servers
- **Health Monitoring**: Built-in status endpoint for monitoring server health

## Key Features

- ✅ **One-to-Many Bridge**: Connect multiple MCP servers through a single endpoint
- ✅ **Tool Aggregation**: Unified access to tools from all connected servers
- ✅ **Resource Subscription**: Full support for resource subscriptions and forwarding
- ✅ **Logging Coordination**: Centralized logging level management across all servers
- ✅ **Progress Notifications**: Transparent progress forwarding from managed servers
- ✅ **Completion Aggregation**: Combined autocomplete suggestions from all servers
- ✅ **Namespace Management**: Automatic tool namespacing to prevent conflicts
- ✅ **Environment Variables**: Support for `${VAR_NAME}` expansion in configs
- ✅ **Multiple Deployment Options**: Local process, Docker container, or UV tool
- ✅ **Health Monitoring**: Built-in status endpoint for monitoring

## Documentation

📚 **[Complete Documentation](docs/README.md)**

- [Installation Guide](docs/installation.md) - Detailed installation instructions
- [Configuration Guide](docs/configuration.md) - Configuration options and examples
- [Deployment Guide](docs/deployment.md) - Docker, local, and UV deployment
- [API Reference](docs/api.md) - Endpoints and programmatic usage
- [Architecture Overview](docs/architecture.md) - Technical architecture and design
- [Troubleshooting Guide](docs/troubleshooting.md) - Common issues and solutions

## Development

### Requirements

- Python 3.11+
- uv package manager
- Node.js (for MCP servers that require it)

### Development Setup

```bash
# Clone the repository
git clone https://github.com/billyjbryant/mcp-foxxy-bridge.git
cd mcp-foxxy-bridge

# Install dependencies
uv sync --dev

# Run tests
uv run pytest

# Run linting
uv run ruff check

# Run type checking
uv run mypy src/

# Run the bridge in development
uv run -m mcp_foxxy_bridge --port 8080
```

### Docker Development

```bash
# Build Docker image
docker build -t mcp-foxxy-bridge .

# Run with Docker
docker run --rm -p 8080:8080 mcp-foxxy-bridge
```

## Contributing

We welcome contributions! Please see our [Contributing Guide](CONTRIBUTING.md) for details on:

- Development setup
- Code style and linting
- Testing requirements
- Pull request process

## License

This project is licensed under the GNU Affero General Public License v3.0 or later (AGPLv3+). See the [LICENSE](LICENSE) file for details.

## Support

- 📖 [Documentation](docs/README.md)
- 🐛 [Issue Tracker](https://github.com/billyjbryant/mcp-foxxy-bridge/issues)
- 💬 [Discussions](https://github.com/billyjbryant/mcp-foxxy-bridge/discussions)

---

**MCP Foxxy Bridge** - Bridging the gap between AI tools and multiple MCP servers.
