import{j as xt,m as bt,u as wt,k as kt,r as U,s as Ct,l as At,o as Pt,n as V,p as M,w as d,q as r,t as n,v as St,x as _,y as Ft,z as m,A as L,C as v,D as Ut,E as Tt,G as g,H as x,J as Bt,K as Rt,N as Et,O as z,P as Ot,_ as W,Q as Vt,R as Mt,T as $t,X as Z,Y as It,Z as Dt,$ as Nt,a0 as jt,a1 as Lt,a2 as zt,a3 as Wt,a4 as Zt,a5 as qt}from"./index-xnC9K_Hj.js";import{loader as Gt,VueMonacoEditor as Jt}from"@guolao/vue-monaco-editor";import*as Ht from"monaco-editor";import Kt from"monaco-editor/esm/vs/editor/editor.worker?worker";import Qt from"monaco-editor/esm/vs/language/json/json.worker?worker";import Xt from"monaco-editor/esm/vs/language/css/css.worker?worker";import Yt from"monaco-editor/esm/vs/language/html/html.worker?worker";import te from"monaco-editor/esm/vs/language/typescript/ts.worker?worker";import{newPyodideWorker as ee}from"./frontend/tools/pyodide-worker-api.ts";import{version as oe}from"pyodide";self.MonacoEnvironment={getWorker(t,e){return e==="json"?new Qt:e==="css"||e==="scss"||e==="less"?new Xt:e==="html"||e==="handlebars"||e==="razor"?new Yt:e==="typescript"||e==="javascript"?new te:new Kt}};function ne(){Gt.config({monaco:Ht})}const X="3.7.7",ae=X,k=typeof Buffer=="function",q=typeof TextDecoder=="function"?new TextDecoder:void 0,G=typeof TextEncoder=="function"?new TextEncoder:void 0,re="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",P=Array.prototype.slice.call(re),T=(t=>{let e={};return t.forEach((s,f)=>e[s]=f),e})(P),ie=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,u=String.fromCharCode.bind(String),J=typeof Uint8Array.from=="function"?Uint8Array.from.bind(Uint8Array):t=>new Uint8Array(Array.prototype.slice.call(t,0)),Y=t=>t.replace(/=/g,"").replace(/[+\/]/g,e=>e=="+"?"-":"_"),tt=t=>t.replace(/[^A-Za-z0-9\+\/]/g,""),et=t=>{let e,s,f,p,i="";const C=t.length%3;for(let b=0;b<t.length;){if((s=t.charCodeAt(b++))>255||(f=t.charCodeAt(b++))>255||(p=t.charCodeAt(b++))>255)throw new TypeError("invalid character found");e=s<<16|f<<8|p,i+=P[e>>18&63]+P[e>>12&63]+P[e>>6&63]+P[e&63]}return C?i.slice(0,C-3)+"===".substring(C):i},D=typeof btoa=="function"?t=>btoa(t):k?t=>Buffer.from(t,"binary").toString("base64"):et,$=k?t=>Buffer.from(t).toString("base64"):t=>{let s=[];for(let f=0,p=t.length;f<p;f+=4096)s.push(u.apply(null,t.subarray(f,f+4096)));return D(s.join(""))},B=(t,e=!1)=>e?Y($(t)):$(t),se=t=>{if(t.length<2){var e=t.charCodeAt(0);return e<128?t:e<2048?u(192|e>>>6)+u(128|e&63):u(224|e>>>12&15)+u(128|e>>>6&63)+u(128|e&63)}else{var e=65536+(t.charCodeAt(0)-55296)*1024+(t.charCodeAt(1)-56320);return u(240|e>>>18&7)+u(128|e>>>12&63)+u(128|e>>>6&63)+u(128|e&63)}},le=/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,ot=t=>t.replace(le,se),H=k?t=>Buffer.from(t,"utf8").toString("base64"):G?t=>$(G.encode(t)):t=>D(ot(t)),w=(t,e=!1)=>e?Y(H(t)):H(t),K=t=>w(t,!0),de=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,ue=t=>{switch(t.length){case 4:var e=(7&t.charCodeAt(0))<<18|(63&t.charCodeAt(1))<<12|(63&t.charCodeAt(2))<<6|63&t.charCodeAt(3),s=e-65536;return u((s>>>10)+55296)+u((s&1023)+56320);case 3:return u((15&t.charCodeAt(0))<<12|(63&t.charCodeAt(1))<<6|63&t.charCodeAt(2));default:return u((31&t.charCodeAt(0))<<6|63&t.charCodeAt(1))}},nt=t=>t.replace(de,ue),at=t=>{if(t=t.replace(/\s+/g,""),!ie.test(t))throw new TypeError("malformed base64.");t+="==".slice(2-(t.length&3));let e,s="",f,p;for(let i=0;i<t.length;)e=T[t.charAt(i++)]<<18|T[t.charAt(i++)]<<12|(f=T[t.charAt(i++)])<<6|(p=T[t.charAt(i++)]),s+=f===64?u(e>>16&255):p===64?u(e>>16&255,e>>8&255):u(e>>16&255,e>>8&255,e&255);return s},N=typeof atob=="function"?t=>atob(tt(t)):k?t=>Buffer.from(t,"base64").toString("binary"):at,rt=k?t=>J(Buffer.from(t,"base64")):t=>J(N(t).split("").map(e=>e.charCodeAt(0))),it=t=>rt(st(t)),fe=k?t=>Buffer.from(t,"base64").toString("utf8"):q?t=>q.decode(rt(t)):t=>nt(N(t)),st=t=>tt(t.replace(/[-_]/g,e=>e=="-"?"+":"/")),I=t=>fe(st(t)),pe=t=>{if(typeof t!="string")return!1;const e=t.replace(/\s+/g,"").replace(/={0,2}$/,"");return!/[^\s0-9a-zA-Z\+/]/.test(e)||!/[^\s0-9a-zA-Z\-_]/.test(e)},lt=t=>({value:t,enumerable:!1,writable:!0,configurable:!0}),dt=function(){const t=(e,s)=>Object.defineProperty(String.prototype,e,lt(s));t("fromBase64",function(){return I(this)}),t("toBase64",function(e){return w(this,e)}),t("toBase64URI",function(){return w(this,!0)}),t("toBase64URL",function(){return w(this,!0)}),t("toUint8Array",function(){return it(this)})},ut=function(){const t=(e,s)=>Object.defineProperty(Uint8Array.prototype,e,lt(s));t("toBase64",function(e){return B(this,e)}),t("toBase64URI",function(){return B(this,!0)}),t("toBase64URL",function(){return B(this,!0)})},ce=()=>{dt(),ut()},me={version:X,VERSION:ae,atob:N,atobPolyfill:at,btoa:D,btoaPolyfill:et,fromBase64:I,toBase64:w,encode:w,encodeURI:K,encodeURL:K,utob:ot,btou:nt,decode:I,isValid:pe,fromUint8Array:B,toUint8Array:it,extendString:dt,extendUint8Array:ut,extendBuiltins:ce},ye=`import micropip

# Prioritize the OCP.wasm package repository for finding the ported dependencies.
micropip.set_index_urls(["https://yeicor.github.io/OCP.wasm", "https://pypi.org/simple"])

# For build123d < 0.10.0, we need to install the mock the py-lib3mf package (before the main install).
await micropip.install("lib3mf")
micropip.add_mock_package("py-lib3mf", "2.4.1", modules={"py_lib3mf": 'from lib3mf import *'})

# Install the yacv_server package, which is the main server for the OCP.wasm playground; and also preinstalls build123d.
await micropip.install("yacv_server", pre=True)

# Preimport the yacv_server package to ensure it is available in the global scope, and mock the ocp_vscode package.
from yacv_server import *
micropip.add_mock_package("ocp-vscode", "2.8.9", modules={"ocp_vscode": 'from yacv_server import *'})
show_object = show

# Preinstall a font to avoid issues with no font being available.
async def install_font_to_ocp(font_url, font_name=None):
    # noinspection PyUnresolvedReferences
    from pyodide.http import pyfetch
    from OCP.Font import Font_FontMgr, Font_SystemFont, Font_FA_Regular
    from OCP.TCollection import TCollection_AsciiString
    import os

    # Prepare the font path and name
    font_name = font_name if font_name is not None else font_url.split("/")[-1]
    font_path = os.path.join("/tmp", font_name)
    os.makedirs(os.path.dirname(font_path), exist_ok=True)

    # Download the font using pyfetch
    response = await pyfetch(font_url)
    font_data = await response.bytes()

    # Save it to the system-like folder
    with open(font_path, "wb") as f:
        f.write(font_data)

    mgr = Font_FontMgr.GetInstance_s()
    font_t = Font_SystemFont(TCollection_AsciiString(font_path))
    font_t.SetFontPath(Font_FA_Regular, TCollection_AsciiString(font_path))
    assert mgr.RegisterFont(font_t, False)
    #print(f"âœ… Font installed at: {font_path}")
    return font_path


# Make sure there is at least one font installed, so that the tests can run
await install_font_to_ocp("https://raw.githubusercontent.com/xbmc/xbmc/d3a7f95f3f017b8e861d5d95cc4b33eef4286ce2/media/Fonts/arial.ttf")
`,he={style:{display:"inline-flex","margin-right":"16px"}},_e={style:{"margin-right":"-8px"}},ve={style:{"margin-left":"-8px"}},ge={class:"playground-container"},xe={class:"playground-console"},be={style:{display:"flex","align-items":"center","justify-content":"space-between",margin:"0"}},Q="yacv_server://model/",we=xt({__name:"PlaygroundDialogContent",props:{modelValue:{required:!0},modelModifiers:{}},emits:bt(["close","updateModel"],["update:modelValue"]),setup(t,{emit:e}){wt(a=>({"2da2f359":c.value}));const s=kt(t,"modelValue"),f=e;ne();const p=U("");function i(a){p.value+=a;let o=1e4;p.value.length>o&&(p.value=p.value.slice(-o)),console.log(a),Zt(()=>{const l=document.querySelector(".playground-console");l&&(l.scrollTop=l.scrollHeight)})}const C={automaticLayout:!0,formatOnType:!0,formatOnPaste:!0},b=window.matchMedia("(prefers-color-scheme: dark)").matches?"vs-dark":"vs",ft=Ct(),pt=a=>ft.value=a,c=U(.9);let y=null;const h=U(!0);async function j(a,o=void 0){h.value=!0,c.value==0&&!a&&(c.value=.9),y===null?(i(`Creating new Pyodide worker...
`),y=ee(Object.assign({indexURL:`https://cdn.jsdelivr.net/pyodide/v${oe}/full/`,packages:["micropip","sqlite3"]},o?{_loadSnapshot:o}:{}))):i(`Reusing existing Pyodide instance...
`),i(`Preloading packages...
`),await y.asyncRun(ye,i,i),h.value=!1,i(`Pyodide worker ready.
`)}async function R(){if(y===null){i(`Pyodide worker is not initialized. Please wait...
`);return}if(h.value){i(`Pyodide is already running. Please wait...
`);return}i(`Running code...
`);try{h.value=!0,await y.asyncRun(s.value.code,i,a=>{if(a.startsWith(Q)){const o=a.slice(Q.length);ct(o)}else i(a)})}catch(a){i(`Error running code: ${a}
`)}finally{h.value=!1}}function ct(a){i(`Model data detected... ${a.length}B
`);let o=0,l=0;for(;o<a.length&&(a[o]==="{"?l++:a[o]==="}"&&l--,l!==0);o++);if(l!==0)throw`Error: Invalid model data received: ${a}
`;const S=a.slice(0,o+1);let A=JSON.parse(S);const F=new jt(A.name,"",A.hash,A.is_remove);if(i(`Model metadata: ${JSON.stringify(F)}
`),!F.isRemove){const O=me.toUint8Array(a.slice(o+1));console.assert(O.slice(0,4).toString()=="103,108,84,70","Invalid GLTF binary data received: "+O.slice(0,4).toString());const gt=new Blob([O],{type:"model/gltf-binary"});F.url=URL.createObjectURL(gt)}let vt=new Lt([F],()=>{});f("updateModel",vt)}function mt(a=void 0){y&&(y.terminate(),y=null),p.value="",j(!1,a)}function yt(){const a=window.location,o=new URLSearchParams(a.search);o.delete("pg_code_url"),o.delete("pg_code");const l=new URLSearchParams(a.hash.slice(1));l.delete("pg_code_url"),l.set("pg_code",zt(Wt(s.value.code,{level:9})));const S=`${a.origin}${a.pathname}?${o}#${l}`;if(i(`Share link ready: ${S}
`),navigator.clipboard?.writeText===void 0){i(`Clipboard API not available. Please copy the link manually.
`);return}else navigator.clipboard.writeText(S).then(()=>i(`Link copied to clipboard!
`)).catch(A=>i(`Failed to copy link: ${A}
`))}function ht(){throw new Error("Not implemented yet!")}function _t(){throw new Error("Not implemented yet!")}(async()=>{const a=await At;s.value.firstTime&&(c.value=a.pg_opacity_loading),await j(!0),s.value.firstTime&&(await R(),c.value=a.pg_opacity_loaded,s.value.firstTime=!1)})();const E=U(null);return Pt(()=>{E.value&&E.value.addEventListener("keydown",a=>{a instanceof KeyboardEvent&&(a.key==="F10"?(a.preventDefault(),R()):a.key==="Escape"&&f("close"))})}),(a,o)=>(M(),V(n(Nt),{class:"popup-card",style:Z(c.value==0?"position: absolute; top: calc(-50vh + 24px); width: calc(100vw - 64px);":"")},{default:d(()=>[r(n(St),{class:"popup"},{default:d(()=>[r(n(Ft),{style:{flex:"0 1 auto"}},{default:d(()=>o[9]||(o[9]=[m("Playground",-1)])),_:1,__:[9]}),r(n(L)),_("span",he,[r(n(v),{path:n(Ut),type:"mdi",style:{height:"32px"}},null,8,["path"]),r(n(Tt),{modelValue:c.value,"onUpdate:modelValue":o[0]||(o[0]=l=>c.value=l),max:1,min:0,step:.1,style:{width:"100px",height:"32px"}},null,8,["modelValue"]),r(n(g),{activator:"parent",location:"bottom"},{default:d(()=>o[10]||(o[10]=[m("Opacity of the editor (0 = hidden, 1 = fully visible)",-1)])),_:1,__:[10]})]),_("span",_e,[r(n(x),{icon:"",disabled:"",onClick:o[1]||(o[1]=l=>ht())},{default:d(()=>[r(n(v),{path:n(Bt),type:"mdi"},null,8,["path"])]),_:1}),r(n(g),{activator:"parent",location:"bottom"},{default:d(()=>o[11]||(o[11]=[m("Save current state to a snapshot for fast startup (WIP)",-1)])),_:1,__:[11]})]),_("span",ve,[r(n(x),{icon:"",disabled:"",onClick:o[2]||(o[2]=l=>_t())},{default:d(()=>[r(n(v),{path:n(Rt),type:"mdi"},null,8,["path"])]),_:1}),r(n(g),{activator:"parent",location:"bottom"},{default:d(()=>o[12]||(o[12]=[m("Load snapshot for fast startup (WIP)",-1)])),_:1,__:[12]})]),r(n(x),{icon:"",onClick:o[3]||(o[3]=l=>mt())},{default:d(()=>[r(n(v),{path:n(Et),type:"mdi"},null,8,["path"]),r(n(g),{activator:"parent",location:"bottom"},{default:d(()=>o[13]||(o[13]=[m("Reset Pyodide worker (this forgets all previous state and will take a little while) ",-1)])),_:1,__:[13]})]),_:1}),r(n(x),{icon:"",onClick:o[4]||(o[4]=l=>R()),disabled:h.value},{default:d(()=>[r(n(v),{path:n(Ot),type:"mdi"},null,8,["path"]),h.value?(M(),V(W,{key:0,style:{position:"absolute",top:"-16%",left:"-16%"}})):z("",!0),r(n(g),{activator:"parent",location:"bottom"},{default:d(()=>o[14]||(o[14]=[m("Run code",-1)])),_:1,__:[14]})]),_:1},8,["disabled"]),r(n(x),{icon:"",onClick:o[5]||(o[5]=l=>yt())},{default:d(()=>[r(n(v),{path:n(Vt),type:"mdi"},null,8,["path"]),r(n(g),{activator:"parent",location:"bottom"},{default:d(()=>o[15]||(o[15]=[m("Share link that auto-runs the code",-1)])),_:1,__:[15]})]),_:1}),r(n(x),{icon:"",onClick:o[6]||(o[6]=l=>f("close"))},{default:d(()=>[r(n(v),{path:n(Mt),type:"mdi"},null,8,["path"]),r(n(g),{activator:"parent",location:"bottom"},{default:d(()=>o[16]||(o[16]=[m("Close (Pyodide remains loaded)",-1)])),_:1,__:[16]})]),_:1})]),_:1}),r(n($t),{class:"popup-card-text",style:Z(c.value==0?"display: none":"")},{default:d(()=>[_("div",ge,[_("div",{class:"playground-editor",ref_key:"editorRef",ref:E},[r(n(Jt),{value:s.value.code,"onUpdate:value":o[7]||(o[7]=l=>s.value.code=l),theme:n(b),options:C,language:"python",onMount:pt},null,8,["value","theme"])],512),_("div",xe,[_("h3",be,[o[17]||(o[17]=m(" Console Output ",-1)),r(n(L)),r(n(x),{onClick:o[8]||(o[8]=l=>p.value="")},{default:d(()=>[r(n(v),{path:n(It),type:"mdi",class:"h-"},null,8,["path"])]),_:1})]),_("pre",null,Dt(p.value),1),h.value?(M(),V(W,{key:0})):z("",!0)])])]),_:1},8,["style"])]),_:1},8,["style"]))}}),Re=qt(we,[["__scopeId","data-v-157a227e"]]);export{Re as default};
//# sourceMappingURL=PlaygroundDialogContent-D4HHGDC8.js.map
