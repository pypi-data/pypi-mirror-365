Metadata-Version: 2.1
Name: icecomet
Version: 4.0.0
Summary: debug
Home-page: https://github.com/yourusername/my_library
Author: icecomet
Author-email: icecomet634@gmail.com
License: MIT
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# icecomet project

## สารบัญ
- [มีอะไรในไลบราลี่นี้](#มีอะไรในไลบราลี่นี้)
  - [icolor คืออะไร](#icolor-คืออะไร)
  - [iprint คืออะไร](#iprint-คืออะไร)
- [ประวัติการอัพเดต](#ประวัติการอัพเดต)
- [รายละเอียดผู้พัฒนา](#รายละเอียดผู้พัฒนา)

## มีอะไรในไลบราลี่นี้

`icecomet project` คือไลบราลี่ที่รวมโมดูลของคำสั่งที่ใช้งานบ่อย โดยประกอบด้วย 5 โมดูล ดังนี้:

### 1) icolor
`icolor` เป็นโมดูลที่ช่วยในการจัดการสีของข้อความในเทอร์มินัล (เช่น การทำข้อความเป็นสีแดง, เขียว, หรือสีอื่น ๆ) เพื่อช่วยในการสร้างข้อความที่ดูน่าสนใจหรือเพื่อเน้นความสำคัญ. โดยรวมแท็กพิเศษสำหรับหรับเปลี่ยนสีตัวอักษรไว้ในออบเจค color_text หรือ ct เช่น `ct.red` จะเก็บค่าของ `'\033[91m'` ซึ่งทำให้ข้อความเป็นสีแดง

ใช้ `ct.set` เพื่อใช้ค่าสีเริ่มต้นของเครื่อง
```python
from icolor import ct

# ตัวอย่างการใช้ icolor
print(ct.red,"ข้อความสีแดง")
print(ct.green,"ข้อความสีเขียว")
print(ct.set,"ข้อความนี้เป็นสีตามค่าเริ่มต้นของเครื่อง")
```


### 2) iprint
`iprint` คือคำสั่งปริ้นสำหรับการดีบั๊ก โดยสามารถเช็คค่า จำนวน ชนิด ของข้อมูล และจำนวนครั้งที่ฟังก์ชั่น `ij()`ถูกรัน
```python
ij(*arg,m='v',c='default',end='\n',sep=' | ',tag='')
```
มีพารามิเตอร์ที่สำคัญอยู่ 3 ตัว ได้แก่ m tag c 
#### m (mode)
ใช้สำหรับกำหนดสิ่งที่จะแสดง มี 4 ตัวเลือก ได้แก่
| ตัวอักษร   | สิ่งที่แสดง | การแสดงผล    |
|--------|------|----------|
| v  | ค่าของอากิวเมนต์แต่ละตัว   | ข้อมูลแต่ละตัวเรียงกัน |
| l | len() ของอากิวเมนต์แต่ละตัว   | this_list : 4 |
| t | type() ของอากิวเมนต์แต่ละตัว   | this_list : list |
| c | จำนวนครั้งที่ฟังก์ชั่นนี้ ที่มี tag นี้ถูกรัน   | this_list : list |

#### c (color)
กำหนดสีของข้อความนั้น ด้วย ANSI escape code โดยสีเริ่มต้นจะเป็นสีเขียว

#### end
ในการเรียกใช้คำสั่ง 1 ครั้ง สามารถกำหนด m (mode) ได้หลายตัว โดย end จะกำหนดว่าข้อมูลที่ได้จากแต่ละ mode จะต่อกันด้วยอะไร โดยค่าเริ่มต้นคือการเว้นบรรทัด
```python
ij('name',[1],m='vt')
print()
ij('name1',[2],m='vt',end='-')
```
```ans
name | [1]
name : <class 'str'> | [1] : <class 'list'> 

name | [2]-name : <class 'str'> | [2] : <class 'list'> 
```
#### sep
ในการเรียกใช้คำสั่ง 1 ครั้ง สามารถกำหนด m (mode) ได้หลายตัว โดย sep จะกำหนดว่าข้อมูลที่ได้จากแต่ละ mode จะต่อกันด้วยอะไร โดยค่าเริ่มต้นคือ ' | '
```python
ij('name',[1],m='vt')
print()
ij('name1',[2],m='vt',sep='-')
```
```ans
name-[1]
name : <class 'str'>-[1] : <class 'list'> 

name-[2]
name : <class 'str'>-[2] : <class 'list'> 
```
#### tag
การตั้ง tag จะเป็นการกำหนดการตั้งค่าลักษณะให้ tag นั้น ๆ มีค่าลักษณะ 4 อย่าง ได้แก่ m (mode),c (color),end,sep เมื่อเรียกใช้ฟังก์ชั่นอีกครั้งและกำหนดแท็กให้เหมือนเดิม ก็จะเรียกใช้ค่าเดิมโดยอัตโนมัติ

## ประวัติการอัพเดต
- From version 1.2.0 |||| It subport for variable type : opject, as [pandas:DataFrame] [array:numpy]
- From version 1.2.1 |||| 1.2.1 that error
- For  version 2.0.0 is restore code from version 1.3.5 becouse 1.4 is broke
- From version 3.0.0 |||| add ibot module >> use for shot function of pyperclip and pynput
- From version 3.1.0 |||| add cursor_control
- From version 4.0.0 |||| รื้อทำใหม่หมด เหลือแค่ icolor ที่มี ct และ iprint ที่มี ij แบบใหม่

## ประวัติผู้พัฒนา
ขี้เกียจใส่ ขอดองไว้ก่อน
