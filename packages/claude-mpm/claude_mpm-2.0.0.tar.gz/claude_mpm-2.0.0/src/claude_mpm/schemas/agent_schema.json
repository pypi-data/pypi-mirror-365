{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Claude MPM Agent Schema",
  "description": "Schema definition for Claude MPM agent templates",
  "type": "object",
  "required": ["id", "version", "metadata", "capabilities", "instructions"],
  "properties": {
    "id": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9_]*$",
      "description": "Unique agent identifier (lowercase, alphanumeric with underscores)",
      "examples": ["research", "engineer", "qa", "security"]
    },
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Semantic version of the agent template",
      "examples": ["1.0.0", "2.1.3"]
    },
    "metadata": {
      "type": "object",
      "required": ["name", "description", "category", "tags"],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 50,
          "description": "Human-readable agent name"
        },
        "description": {
          "type": "string",
          "minLength": 10,
          "maxLength": 200,
          "description": "Brief description of agent purpose"
        },
        "category": {
          "type": "string",
          "enum": ["engineering", "research", "quality", "operations", "specialized"],
          "description": "Agent category for organization"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*$"
          },
          "minItems": 1,
          "maxItems": 10,
          "uniqueItems": true,
          "description": "Tags for agent discovery"
        },
        "author": {
          "type": "string",
          "description": "Agent template author"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp"
        }
      }
    },
    "capabilities": {
      "type": "object",
      "required": ["model", "tools", "resource_tier"],
      "properties": {
        "model": {
          "type": "string",
          "enum": [
            "claude-3-haiku-20240307",
            "claude-3-5-haiku-20241022",
            "claude-3-sonnet-20240229",
            "claude-3-5-sonnet-20241022",
            "claude-3-opus-20240229",
            "claude-3-5-sonnet-20240620",
            "claude-sonnet-4-20250514",
            "claude-4-sonnet-20250514",
            "claude-opus-4-20250514",
            "claude-4-opus-20250514"
          ],
          "description": "Claude model to use for this agent"
        },
        "tools": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Read", "Write", "Edit", "MultiEdit",
              "Grep", "Glob", "LS", "Bash",
              "WebSearch", "WebFetch",
              "NotebookRead", "NotebookEdit",
              "TodoWrite", "ExitPlanMode",
              "git", "docker", "kubectl", "terraform",
              "aws", "gcloud", "azure"
            ]
          },
          "uniqueItems": true,
          "description": "Available tools for the agent"
        },
        "resource_tier": {
          "type": "string",
          "enum": ["intensive", "standard", "lightweight"],
          "description": "Resource allocation tier"
        },
        "max_tokens": {
          "type": "integer",
          "minimum": 1000,
          "maximum": 200000,
          "default": 8192,
          "description": "Maximum tokens for response"
        },
        "temperature": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "default": 0.7,
          "description": "Model temperature setting"
        },
        "timeout": {
          "type": "integer",
          "minimum": 30,
          "maximum": 3600,
          "default": 300,
          "description": "Operation timeout in seconds"
        },
        "memory_limit": {
          "type": "integer",
          "minimum": 512,
          "maximum": 8192,
          "description": "Memory limit in MB (for resource tier)"
        },
        "cpu_limit": {
          "type": "integer",
          "minimum": 10,
          "maximum": 100,
          "description": "CPU limit percentage (for resource tier)"
        },
        "network_access": {
          "type": "boolean",
          "default": false,
          "description": "Whether agent needs network access"
        },
        "file_access": {
          "type": "object",
          "properties": {
            "read_paths": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Allowed read paths"
            },
            "write_paths": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Allowed write paths"
            }
          }
        }
      }
    },
    "instructions": {
      "type": "string",
      "minLength": 100,
      "maxLength": 8000,
      "description": "Agent system instructions (8000 character limit)"
    },
    "knowledge": {
      "type": "object",
      "description": "Agent-specific knowledge and context",
      "properties": {
        "domain_expertise": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Areas of expertise"
        },
        "best_practices": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Best practices the agent follows"
        },
        "constraints": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Operating constraints"
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "scenario": {"type": "string"},
              "approach": {"type": "string"}
            }
          },
          "description": "Example scenarios and approaches"
        }
      }
    },
    "interactions": {
      "type": "object",
      "description": "Agent interaction patterns",
      "properties": {
        "input_format": {
          "type": "object",
          "properties": {
            "required_fields": {
              "type": "array",
              "items": {"type": "string"}
            },
            "optional_fields": {
              "type": "array",
              "items": {"type": "string"}
            }
          }
        },
        "output_format": {
          "type": "object",
          "properties": {
            "structure": {
              "type": "string",
              "enum": ["markdown", "json", "structured", "free-form"]
            },
            "includes": {
              "type": "array",
              "items": {"type": "string"}
            }
          }
        },
        "handoff_agents": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Agents this agent can hand off to"
        },
        "triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "condition": {"type": "string"},
              "action": {"type": "string"}
            }
          },
          "description": "Conditions that trigger specific actions"
        }
      }
    },
    "testing": {
      "type": "object",
      "description": "Testing configuration for the agent",
      "properties": {
        "test_cases": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["input", "expected_behavior"],
            "properties": {
              "name": {"type": "string"},
              "input": {"type": "string"},
              "expected_behavior": {"type": "string"},
              "validation_criteria": {
                "type": "array",
                "items": {"type": "string"}
              }
            }
          }
        },
        "performance_benchmarks": {
          "type": "object",
          "properties": {
            "response_time": {"type": "integer"},
            "token_usage": {"type": "integer"},
            "success_rate": {"type": "number"}
          }
        }
      }
    },
    "hooks": {
      "type": "object",
      "description": "Hook configurations for extensibility",
      "properties": {
        "pre_execution": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {"type": "string"},
              "enabled": {"type": "boolean"}
            }
          }
        },
        "post_execution": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {"type": "string"},
              "enabled": {"type": "boolean"}
            }
          }
        }
      }
    }
  },
  "additionalProperties": false,
  "definitions": {
    "resource_tier_limits": {
      "intensive": {
        "memory_limit": {"min": 4096, "max": 8192},
        "cpu_limit": {"min": 60, "max": 100},
        "timeout": {"min": 600, "max": 3600}
      },
      "standard": {
        "memory_limit": {"min": 2048, "max": 4096},
        "cpu_limit": {"min": 30, "max": 60},
        "timeout": {"min": 300, "max": 1200}
      },
      "lightweight": {
        "memory_limit": {"min": 512, "max": 2048},
        "cpu_limit": {"min": 10, "max": 30},
        "timeout": {"min": 30, "max": 600}
      }
    }
  }
}