import pytest
from hypothesis import given
from hypothesis_jsonschema import from_schema

from vexipy import Vulnerability

from conftest import UPSTREAM_SCHEMA_REFS


@pytest.mark.parametrize("version", UPSTREAM_SCHEMA_REFS.keys())
def test_vulnerability_instantiation_with_schema(external_schemas, version):
    schema = external_schemas[version]["$defs"]["vulnerability"]

    @given(from_schema(schema))
    def test_instantiation(data):
        assert Vulnerability(**data)

    test_instantiation()


def test_vulnerability_with_invalid_iri_using_obj():
    with pytest.raises(ValueError, match='Invalid IRI: "foo"'):
        assert Vulnerability(**{"@id": "foo", "name": "bar"})


def test_vulnerability_with_invalid_iri_using_kwargs():
    with pytest.raises(ValueError, match='Invalid IRI: "foo"'):
        assert Vulnerability(id="foo", name="bar")


def test_update_vulnerability():
    v = Vulnerability(name="CVE-2014-123456")
    v = v.update(description="A very bad CVE")
    assert v.name == "CVE-2014-123456"
    assert v.description == "A very bad CVE"
