[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "openintel"
version = "1.0.0"
description = "A comprehensive tool to detect technology stacks used by websites"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "Devanshu Singh", email = "devanshukumar45@gmail.com" },
]
keywords = ["web-scraping", "technology-detection", "competitive-intelligence", "mixrank"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "requests>=2.28.0",
    "beautifulsoup4>=4.11.0",
    "dnspython>=2.2.0",
    "aiohttp>=3.8.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "coverage>=7.0.0",
]

[project.urls]
Homepage = "https://github.com/Devanshusisodiya/openintel"
Repository = "https://github.com/Devanshusisodiya/openintel"
Issues = "https://github.com/Devanshusisodiya/openintel/issues"

[project.scripts]
openintel = "openintel.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["openintel"]

[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["openintel"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[dependency-groups]
dev = [
    "mypy>=1.14.1",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.12.5",
]
