from ..core import File
from .generic import GenericAnalysis
from io import BytesIO
from typing import Any, BinaryIO

__all__ = ['convert_geometry_to_glb', 'DynamoAnalysis', 'DynamoFile', 'get_dynamo_result']

class DynamoAnalysis(GenericAnalysis):
    def __init__(self, files: list[tuple[str, BytesIO | File]] | None = None, executable_key: str = 'dynamo', output_filenames: list[str] = None) -> None: ...

class DynamoFile:
    def __init__(self, file: File) -> None: ...
    def generate(self) -> File: ...
    def update(self, name: str, value: Any) -> None: ...
    def get_node_id(self, name: str) -> str: ...

def get_dynamo_result(file: BinaryIO, id_: str) -> str: ...
def convert_geometry_to_glb(file: File, filter: list[str] = None) -> File: ...
