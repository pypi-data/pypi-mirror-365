[project]
name = "magnitude"
version = "1.1.1"
description = "Python library for computing with numbers with units"
readme = "README.md"
authors = [
    { name = "Juan Reyero", email = "juan@juanreyero.com" }
]
license = { text = "MIT" }
homepage = "http://juanreyero.com/open/magnitude/"
repository = "https://github.com/juanre/magnitude"
keywords = ["units", "measurement", "physics", "SI", "conversion"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
    "Operating System :: OS Independent",
]
requires-python = ">=3.9"
dependencies = []

[project.urls]
Homepage = "http://juanreyero.com/open/magnitude/"
Documentation = "http://juanreyero.com/open/magnitude/"
Repository = "https://github.com/juanre/magnitude"
Issues = "https://github.com/juanre/magnitude/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
only-include = ["src"]

[dependency-groups]
dev = [
    "black>=24.8.0",
    "isort>=5.13.2",
    "mypy>=1.14.1",
    "pre-commit>=3.5.0",
    "pytest>=8.3.5",
    "ruff>=0.12.5",
]

[tool.hatch.build]
sources = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests", "src"]
addopts = "--doctest-modules"
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.isort]
profile = "black"
line_length = 99

[tool.black]
line-length = 99
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']

[tool.ruff]
line-length = 99
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C90", # mccabe complexity
    "S",  # flake8-bandit security
]
ignore = [
    "E501",  # line too long (handled by black)
    "S101",  # use of assert (needed for tests)
    "C901",  # complexity
]

[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
check_untyped_defs = false
no_implicit_optional = true
