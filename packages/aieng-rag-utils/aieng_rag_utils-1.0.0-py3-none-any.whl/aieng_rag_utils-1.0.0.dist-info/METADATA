Metadata-Version: 2.4
Name: aieng-rag-utils
Version: 1.0.0
Summary: Helper modules for AI Engineering RAG Bootcamp reference implementations
Author-email: Vector AI Engineering <ai_engineering@vectorinstitute.ai>
License-Expression: MIT
Requires-Python: >=3.10
Requires-Dist: beautifulsoup4==4.12.3
Requires-Dist: datasets>=3.5.0
Requires-Dist: faiss-cpu==1.11.0
Requires-Dist: googlesearch-python>=1.3.0
Requires-Dist: json5>=0.12.0
Requires-Dist: langchain-cohere>=0.4.4
Requires-Dist: langchain-huggingface>=0.2.0
Requires-Dist: langchain-openai>=0.3.8
Requires-Dist: langchain>=0.3.7
Requires-Dist: llama-index-core>=0.12.37
Requires-Dist: llama-index-llms-huggingface>=0.5.0
Requires-Dist: llama-index-llms-openai-like>=0.1.3
Requires-Dist: llama-index-readers-json>=0.3.0
Requires-Dist: llama-index-readers-s3>=0.4.0
Requires-Dist: llama-index-retrievers-bm25>=0.5.2
Requires-Dist: llama-index-vector-stores-faiss>=0.1.2
Requires-Dist: llama-index-vector-stores-weaviate>=1.3.1
Requires-Dist: llama-index>=0.12.37
Requires-Dist: ragas>=0.2.15
Requires-Dist: rapidfuzz>=3.13.0
Requires-Dist: torch==2.1.2
Requires-Dist: weaviate-client==4.9.3
Description-Content-Type: text/markdown

# aieng-rag-utils

`aieng-rag-utils` is a Python library providing utility functions and tools to streamline Retrieval-Augmented Generation (RAG) workflows. It is designed to help AI engineers build, evaluate, and deploy RAG-based applications efficiently.

## Features

- Document loaders, chunkers and pretty-print
- Web Search
- Vector store integrations
- Query and retrieval helpers
- Evaluation and benchmarking tools

## Installation

```bash
pip3 install aieng-rag-utils
```

## Sample Usage

```python
from aieng.rag.utils import get_device_name
from aieng.rag.utils.search import DocumentReader
from aieng.rag.utils.pubmed import RAGLLM

device = get_device_name()

doc_reader = DocumentReader(directory_path="./source_documents")
docs, chunks = doc_reader.load()

llm = RAGLLM(
    llm_type="openai",
    llm_name="gpt-4o",
    api_base=OPENAI_BASE_URL,
    api_key=OPENAI_API_KEY,
).load_model(**rag_cfg) # RAG Configuration

```
