[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "coptic"
version = "0.1.0"
authors = [
    {name = "Coptic Team", email = "contact@coptic-forecasting.com"},
]
description = "Advanced time series forecasting library with multiple algorithms"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
keywords = [
    "time-series", "forecasting", "machine-learning", 
    "prophet", "arima", "xgboost", "random-forest"
]
dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.2.0",
    "scikit-learn>=0.24.0",
    "matplotlib>=3.3.0",
    "xgboost>=1.3.0",
    "prophet>=1.0.0",
    "pmdarima>=1.8.0",
    "statsmodels>=0.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.9",
    "sphinx>=4.0",
    "mypy>=0.900",
    "jupyter>=1.0",
    "notebook>=6.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=0.5.0",
    "sphinxcontrib-napoleon>=0.7",
]
examples = [
    "jupyter>=1.0",
    "seaborn>=0.11.0",
    "plotly>=5.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/coptic"
Documentation = "https://coptic.readthedocs.io"
Repository = "https://github.com/yourusername/coptic.git"
"Bug Tracker" = "https://github.com/yourusername/coptic/issues"

[tool.setuptools]
packages = ["coptic"]

[tool.setuptools.package-data]
coptic = ["*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=coptic",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
