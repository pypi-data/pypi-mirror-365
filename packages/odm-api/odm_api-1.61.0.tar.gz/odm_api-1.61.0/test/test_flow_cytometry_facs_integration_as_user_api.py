# coding: utf-8

"""
    ODM API

    This swagger page describes the variantUser API endpoints for ODM. These are typically used to find and retrieve variant data and metadata.  Before carrying out any API calls you will need an API token. API tokens can be obtained under your profile within the Genestack software.  To try out calls in this swagger page:  1.  Click the 'Authorize' button below to enter your API token 2.  Scroll to the 'Parameters' section for the method you wish to try out and click the 'Try it out' button 3.  Enter parameter values that you wish to try 4.  Scroll to the bottom of the Parameters section and click the 'Execute' bar that appears    The server response will be in the section that follows.

    The version of the OpenAPI document: default-released
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from odm_api.api.flow_cytometry_facs_integration_as_user_api import FlowCytometryFACSIntegrationAsUserApi


class TestFlowCytometryFACSIntegrationAsUserApi(unittest.TestCase):
    """FlowCytometryFACSIntegrationAsUserApi unit test stubs"""

    def setUp(self) -> None:
        self.api = FlowCytometryFACSIntegrationAsUserApi()

    def tearDown(self) -> None:
        pass

    def test_get_flow_cytometry_by_sample_as_user(self) -> None:
        """Test case for get_flow_cytometry_by_sample_as_user

        Retrieve flow cytometry run-level data by querying related sample ID (accession)
        """
        pass

    def test_get_flow_cytometry_groups_by_study_as_user(self) -> None:
        """Test case for get_flow_cytometry_groups_by_study_as_user

        Retrieve group metadata by querying study ID (accession)
        """
        pass

    def test_get_flow_cytometry_run_to_sample_pairs_as_user(self) -> None:
        """Test case for get_flow_cytometry_run_to_sample_pairs_as_user

        Retrieve run-sample pairs by group id. Pagination is based on unique runs, not unique pairs.
        """
        pass


if __name__ == '__main__':
    unittest.main()
