# coding: utf-8

"""
    ODM API

    This swagger page describes the variantUser API endpoints for ODM. These are typically used to find and retrieve variant data and metadata.  Before carrying out any API calls you will need an API token. API tokens can be obtained under your profile within the Genestack software.  To try out calls in this swagger page:  1.  Click the 'Authorize' button below to enter your API token 2.  Scroll to the 'Parameters' section for the method you wish to try out and click the 'Try it out' button 3.  Enter parameter values that you wish to try 4.  Scroll to the bottom of the Parameters section and click the 'Execute' bar that appears    The server response will be in the section that follows.

    The version of the OpenAPI document: default-released
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from odm_api.api.expression_spo_tas_curator_api import ExpressionSPoTAsCuratorApi


class TestExpressionSPoTAsCuratorApi(unittest.TestCase):
    """ExpressionSPoTAsCuratorApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ExpressionSPoTAsCuratorApi()

    def tearDown(self) -> None:
        pass

    def test_get_expression_as_curator(self) -> None:
        """Test case for get_expression_as_curator

        Retrieve a single expression object by ID (itemId)
        """
        pass

    def test_get_expression_by_version_as_curator(self) -> None:
        """Test case for get_expression_by_version_as_curator

        Retrieve a single expression object by run ID and its version
        """
        pass

    def test_get_expression_data_as_curator(self) -> None:
        """Test case for get_expression_data_as_curator

        Retrieve multiple expression data and metadata objects
        """
        pass

    def test_get_expression_group_as_curator(self) -> None:
        """Test case for get_expression_group_as_curator

        Retrieve a single expression group by ID (groupId)
        """
        pass

    def test_get_expression_group_by_run_as_curator(self) -> None:
        """Test case for get_expression_group_by_run_as_curator

        Retrieve a single group object by run ID (runId)
        """
        pass

    def test_get_expression_versions_as_curator(self) -> None:
        """Test case for get_expression_versions_as_curator

        Retrieve a list of expression object versions by run ID (runId)
        """
        pass

    def test_search_expression_groups_as_curator(self) -> None:
        """Test case for search_expression_groups_as_curator

        Retrieve groups that match a query
        """
        pass

    def test_search_expression_runs_as_curator(self) -> None:
        """Test case for search_expression_runs_as_curator

        Retrieve run objects related to the given group
        """
        pass

    def test_update_expression_run_as_curator(self) -> None:
        """Test case for update_expression_run_as_curator

        Update metadata object by expression object run ID (runId)
        """
        pass


if __name__ == '__main__':
    unittest.main()
