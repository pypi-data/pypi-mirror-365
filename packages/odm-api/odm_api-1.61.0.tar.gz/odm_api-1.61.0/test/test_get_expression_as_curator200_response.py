# coding: utf-8

"""
    ODM API

    This swagger page describes the variantUser API endpoints for ODM. These are typically used to find and retrieve variant data and metadata.  Before carrying out any API calls you will need an API token. API tokens can be obtained under your profile within the Genestack software.  To try out calls in this swagger page:  1.  Click the 'Authorize' button below to enter your API token 2.  Scroll to the 'Parameters' section for the method you wish to try out and click the 'Try it out' button 3.  Enter parameter values that you wish to try 4.  Scroll to the bottom of the Parameters section and click the 'Execute' bar that appears    The server response will be in the section that follows.

    The version of the OpenAPI document: default-released
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from odm_api.models.get_expression_as_curator200_response import GetExpressionAsCurator200Response

class TestGetExpressionAsCurator200Response(unittest.TestCase):
    """GetExpressionAsCurator200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetExpressionAsCurator200Response:
        """Test GetExpressionAsCurator200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetExpressionAsCurator200Response`
        """
        model = GetExpressionAsCurator200Response()
        if include_optional:
            return GetExpressionAsCurator200Response(
                item_id = '',
                item_origin = odm_api.models.get_expression_as_curator_200_response_item_origin.getExpressionAsCurator_200_response_itemOrigin(
                    run_source_id = '', 
                    run_id = '', 
                    group_id = '', ),
                metadata = None,
                gene = '',
                expression = 1.82,
                feature = {genes=MYO9A,, groupingKey=VRSLGGISPSEDRR},
                value = {value=1.82},
                description = ''
            )
        else:
            return GetExpressionAsCurator200Response(
        )
        """

    def testGetExpressionAsCurator200Response(self):
        """Test GetExpressionAsCurator200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
