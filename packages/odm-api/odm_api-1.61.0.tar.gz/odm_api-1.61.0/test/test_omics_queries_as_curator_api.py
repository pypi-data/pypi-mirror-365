# coding: utf-8

"""
    ODM API

    This swagger page describes the variantUser API endpoints for ODM. These are typically used to find and retrieve variant data and metadata.  Before carrying out any API calls you will need an API token. API tokens can be obtained under your profile within the Genestack software.  To try out calls in this swagger page:  1.  Click the 'Authorize' button below to enter your API token 2.  Scroll to the 'Parameters' section for the method you wish to try out and click the 'Try it out' button 3.  Enter parameter values that you wish to try 4.  Scroll to the bottom of the Parameters section and click the 'Execute' bar that appears    The server response will be in the section that follows.

    The version of the OpenAPI document: default-released
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from odm_api.api.omics_queries_as_curator_api import OmicsQueriesAsCuratorApi


class TestOmicsQueriesAsCuratorApi(unittest.TestCase):
    """OmicsQueriesAsCuratorApi unit test stubs"""

    def setUp(self) -> None:
        self.api = OmicsQueriesAsCuratorApi()

    def tearDown(self) -> None:
        pass

    def test_omics_search_expression_data_as_curator(self) -> None:
        """Test case for omics_search_expression_data_as_curator

        Retrieve data objects by searching across multiple data types
        """
        pass

    def test_omics_search_expression_groups_as_curator(self) -> None:
        """Test case for omics_search_expression_groups_as_curator

        Retrieve group objects by searching across multiple data types
        """
        pass

    def test_omics_search_flow_cytometry_data_as_curator(self) -> None:
        """Test case for omics_search_flow_cytometry_data_as_curator

        Retrieve flow cytometry data objects by searching across multiple data types
        """
        pass

    def test_omics_search_flow_cytometry_groups_as_curator(self) -> None:
        """Test case for omics_search_flow_cytometry_groups_as_curator

        Retrieve group objects by searching across multiple data types
        """
        pass

    def test_omics_search_samples_as_curator(self) -> None:
        """Test case for omics_search_samples_as_curator

        Retrieve sample metadata objects by searching across multiple data types
        """
        pass

    def test_omics_search_streamed_expression_data_as_curator(self) -> None:
        """Test case for omics_search_streamed_expression_data_as_curator

        Stream data from a given tabular file
        """
        pass

    def test_omics_search_streamed_variant_data_as_curator(self) -> None:
        """Test case for omics_search_streamed_variant_data_as_curator

        Stream data from a given VCF file
        """
        pass

    def test_omics_search_variant_data_as_curator(self) -> None:
        """Test case for omics_search_variant_data_as_curator

        Retrieve variant data objects by searching across multiple data types
        """
        pass

    def test_omics_search_variant_groups_as_curator(self) -> None:
        """Test case for omics_search_variant_groups_as_curator

        Retrieve group objects by searching across multiple data types
        """
        pass


if __name__ == '__main__':
    unittest.main()
