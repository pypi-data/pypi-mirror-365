# coding: utf-8

"""
    result-analysis-service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from dhicn_result_analysis_service.configuration import Configuration


class ModelResultRiverWQsOutput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'time': 'list[str]',
        'i_ds': 'list[str]',
        'wq_item': 'str',
        'concentration': 'list[list[float]]'
    }

    attribute_map = {
        'time': 'time',
        'i_ds': 'iDs',
        'wq_item': 'wqItem',
        'concentration': 'concentration'
    }

    def __init__(self, time=None, i_ds=None, wq_item=None, concentration=None, local_vars_configuration=None):  # noqa: E501
        """ModelResultRiverWQsOutput - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._time = None
        self._i_ds = None
        self._wq_item = None
        self._concentration = None
        self.discriminator = None

        self.time = time
        self.i_ds = i_ds
        self.wq_item = wq_item
        self.concentration = concentration

    @property
    def time(self):
        """Gets the time of this ModelResultRiverWQsOutput.  # noqa: E501

        时间 time  # noqa: E501

        :return: The time of this ModelResultRiverWQsOutput.  # noqa: E501
        :rtype: list[str]
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this ModelResultRiverWQsOutput.

        时间 time  # noqa: E501

        :param time: The time of this ModelResultRiverWQsOutput.  # noqa: E501
        :type: list[str]
        """

        self._time = time

    @property
    def i_ds(self):
        """Gets the i_ds of this ModelResultRiverWQsOutput.  # noqa: E501

        河道名,里程 river,chainage  # noqa: E501

        :return: The i_ds of this ModelResultRiverWQsOutput.  # noqa: E501
        :rtype: list[str]
        """
        return self._i_ds

    @i_ds.setter
    def i_ds(self, i_ds):
        """Sets the i_ds of this ModelResultRiverWQsOutput.

        河道名,里程 river,chainage  # noqa: E501

        :param i_ds: The i_ds of this ModelResultRiverWQsOutput.  # noqa: E501
        :type: list[str]
        """

        self._i_ds = i_ds

    @property
    def wq_item(self):
        """Gets the wq_item of this ModelResultRiverWQsOutput.  # noqa: E501

        水质 water quality item  # noqa: E501

        :return: The wq_item of this ModelResultRiverWQsOutput.  # noqa: E501
        :rtype: str
        """
        return self._wq_item

    @wq_item.setter
    def wq_item(self, wq_item):
        """Sets the wq_item of this ModelResultRiverWQsOutput.

        水质 water quality item  # noqa: E501

        :param wq_item: The wq_item of this ModelResultRiverWQsOutput.  # noqa: E501
        :type: str
        """

        self._wq_item = wq_item

    @property
    def concentration(self):
        """Gets the concentration of this ModelResultRiverWQsOutput.  # noqa: E501

        浓度 concentration  # noqa: E501

        :return: The concentration of this ModelResultRiverWQsOutput.  # noqa: E501
        :rtype: list[list[float]]
        """
        return self._concentration

    @concentration.setter
    def concentration(self, concentration):
        """Sets the concentration of this ModelResultRiverWQsOutput.

        浓度 concentration  # noqa: E501

        :param concentration: The concentration of this ModelResultRiverWQsOutput.  # noqa: E501
        :type: list[list[float]]
        """

        self._concentration = concentration

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ModelResultRiverWQsOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ModelResultRiverWQsOutput):
            return True

        return self.to_dict() != other.to_dict()
