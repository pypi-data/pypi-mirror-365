# coding: utf-8

"""
    竹园污水项目

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from dhicn_zyws_service.configuration import Configuration


class MutilpleTenantBatchDataInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'asset_code': 'str',
        'device_code': 'str',
        'indicator': 'str',
        'time_range': 'int',
        'data_type_enum': 'int',
        'model_node': 'str',
        'start_time': 'datetime',
        'end_time': 'datetime'
    }

    attribute_map = {
        'asset_code': 'assetCode',
        'device_code': 'deviceCode',
        'indicator': 'indicator',
        'time_range': 'timeRange',
        'data_type_enum': 'dataTypeEnum',
        'model_node': 'modelNode',
        'start_time': 'startTime',
        'end_time': 'endTime'
    }

    def __init__(self, asset_code=None, device_code=None, indicator=None, time_range=None, data_type_enum=None, model_node=None, start_time=None, end_time=None, local_vars_configuration=None):  # noqa: E501
        """MutilpleTenantBatchDataInput - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._asset_code = None
        self._device_code = None
        self._indicator = None
        self._time_range = None
        self._data_type_enum = None
        self._model_node = None
        self._start_time = None
        self._end_time = None
        self.discriminator = None

        self.asset_code = asset_code
        self.device_code = device_code
        self.indicator = indicator
        if time_range is not None:
            self.time_range = time_range
        if data_type_enum is not None:
            self.data_type_enum = data_type_enum
        self.model_node = model_node
        if start_time is not None:
            self.start_time = start_time
        if end_time is not None:
            self.end_time = end_time

    @property
    def asset_code(self):
        """Gets the asset_code of this MutilpleTenantBatchDataInput.  # noqa: E501

        资产编码 asset code  # noqa: E501

        :return: The asset_code of this MutilpleTenantBatchDataInput.  # noqa: E501
        :rtype: str
        """
        return self._asset_code

    @asset_code.setter
    def asset_code(self, asset_code):
        """Sets the asset_code of this MutilpleTenantBatchDataInput.

        资产编码 asset code  # noqa: E501

        :param asset_code: The asset_code of this MutilpleTenantBatchDataInput.  # noqa: E501
        :type: str
        """

        self._asset_code = asset_code

    @property
    def device_code(self):
        """Gets the device_code of this MutilpleTenantBatchDataInput.  # noqa: E501

        设备编码 device code  # noqa: E501

        :return: The device_code of this MutilpleTenantBatchDataInput.  # noqa: E501
        :rtype: str
        """
        return self._device_code

    @device_code.setter
    def device_code(self, device_code):
        """Sets the device_code of this MutilpleTenantBatchDataInput.

        设备编码 device code  # noqa: E501

        :param device_code: The device_code of this MutilpleTenantBatchDataInput.  # noqa: E501
        :type: str
        """

        self._device_code = device_code

    @property
    def indicator(self):
        """Gets the indicator of this MutilpleTenantBatchDataInput.  # noqa: E501

        指标 indicators  # noqa: E501

        :return: The indicator of this MutilpleTenantBatchDataInput.  # noqa: E501
        :rtype: str
        """
        return self._indicator

    @indicator.setter
    def indicator(self, indicator):
        """Sets the indicator of this MutilpleTenantBatchDataInput.

        指标 indicators  # noqa: E501

        :param indicator: The indicator of this MutilpleTenantBatchDataInput.  # noqa: E501
        :type: str
        """

        self._indicator = indicator

    @property
    def time_range(self):
        """Gets the time_range of this MutilpleTenantBatchDataInput.  # noqa: E501

        判断当前指标是否有最新数据的时间范围  to determine the time range for the latest data of the current indicator  # noqa: E501

        :return: The time_range of this MutilpleTenantBatchDataInput.  # noqa: E501
        :rtype: int
        """
        return self._time_range

    @time_range.setter
    def time_range(self, time_range):
        """Sets the time_range of this MutilpleTenantBatchDataInput.

        判断当前指标是否有最新数据的时间范围  to determine the time range for the latest data of the current indicator  # noqa: E501

        :param time_range: The time_range of this MutilpleTenantBatchDataInput.  # noqa: E501
        :type: int
        """

        self._time_range = time_range

    @property
    def data_type_enum(self):
        """Gets the data_type_enum of this MutilpleTenantBatchDataInput.  # noqa: E501

        0-None 1-Online 2-MikePlusResult 3-WestResult   # noqa: E501

        :return: The data_type_enum of this MutilpleTenantBatchDataInput.  # noqa: E501
        :rtype: int
        """
        return self._data_type_enum

    @data_type_enum.setter
    def data_type_enum(self, data_type_enum):
        """Sets the data_type_enum of this MutilpleTenantBatchDataInput.

        0-None 1-Online 2-MikePlusResult 3-WestResult   # noqa: E501

        :param data_type_enum: The data_type_enum of this MutilpleTenantBatchDataInput.  # noqa: E501
        :type: int
        """
        allowed_values = [0, 1, 2, 3]  # noqa: E501
        if self.local_vars_configuration.client_side_validation and data_type_enum not in allowed_values:  # noqa: E501
            raise ValueError(
                "Invalid value for `data_type_enum` ({0}), must be one of {1}"  # noqa: E501
                .format(data_type_enum, allowed_values)
            )

        self._data_type_enum = data_type_enum

    @property
    def model_node(self):
        """Gets the model_node of this MutilpleTenantBatchDataInput.  # noqa: E501

        模型点位  # noqa: E501

        :return: The model_node of this MutilpleTenantBatchDataInput.  # noqa: E501
        :rtype: str
        """
        return self._model_node

    @model_node.setter
    def model_node(self, model_node):
        """Sets the model_node of this MutilpleTenantBatchDataInput.

        模型点位  # noqa: E501

        :param model_node: The model_node of this MutilpleTenantBatchDataInput.  # noqa: E501
        :type: str
        """

        self._model_node = model_node

    @property
    def start_time(self):
        """Gets the start_time of this MutilpleTenantBatchDataInput.  # noqa: E501

        开始时间  # noqa: E501

        :return: The start_time of this MutilpleTenantBatchDataInput.  # noqa: E501
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this MutilpleTenantBatchDataInput.

        开始时间  # noqa: E501

        :param start_time: The start_time of this MutilpleTenantBatchDataInput.  # noqa: E501
        :type: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this MutilpleTenantBatchDataInput.  # noqa: E501

        结束时间  # noqa: E501

        :return: The end_time of this MutilpleTenantBatchDataInput.  # noqa: E501
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this MutilpleTenantBatchDataInput.

        结束时间  # noqa: E501

        :param end_time: The end_time of this MutilpleTenantBatchDataInput.  # noqa: E501
        :type: datetime
        """

        self._end_time = end_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MutilpleTenantBatchDataInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, MutilpleTenantBatchDataInput):
            return True

        return self.to_dict() != other.to_dict()
