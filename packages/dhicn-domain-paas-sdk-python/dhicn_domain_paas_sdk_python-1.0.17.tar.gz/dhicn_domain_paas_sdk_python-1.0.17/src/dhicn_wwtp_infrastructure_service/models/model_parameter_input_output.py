# coding: utf-8

"""
    wwtp-paas-infrastructure-service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from dhicn_wwtp_infrastructure_service.configuration import Configuration


class ModelParameterInputOutput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'scenario_name': 'str',
        'para_code': 'str',
        'value': 'float'
    }

    attribute_map = {
        'id': 'id',
        'scenario_name': 'scenarioName',
        'para_code': 'paraCode',
        'value': 'value'
    }

    def __init__(self, id=None, scenario_name=None, para_code=None, value=None, local_vars_configuration=None):  # noqa: E501
        """ModelParameterInputOutput - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._scenario_name = None
        self._para_code = None
        self._value = None
        self.discriminator = None

        if id is not None:
            self.id = id
        self.scenario_name = scenario_name
        self.para_code = para_code
        if value is not None:
            self.value = value

    @property
    def id(self):
        """Gets the id of this ModelParameterInputOutput.  # noqa: E501


        :return: The id of this ModelParameterInputOutput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ModelParameterInputOutput.


        :param id: The id of this ModelParameterInputOutput.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def scenario_name(self):
        """Gets the scenario_name of this ModelParameterInputOutput.  # noqa: E501

        方案名称 scenario name  # noqa: E501

        :return: The scenario_name of this ModelParameterInputOutput.  # noqa: E501
        :rtype: str
        """
        return self._scenario_name

    @scenario_name.setter
    def scenario_name(self, scenario_name):
        """Sets the scenario_name of this ModelParameterInputOutput.

        方案名称 scenario name  # noqa: E501

        :param scenario_name: The scenario_name of this ModelParameterInputOutput.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and scenario_name is None:  # noqa: E501
            raise ValueError("Invalid value for `scenario_name`, must not be `None`")  # noqa: E501

        self._scenario_name = scenario_name

    @property
    def para_code(self):
        """Gets the para_code of this ModelParameterInputOutput.  # noqa: E501

        模型参数节点 parameter code  # noqa: E501

        :return: The para_code of this ModelParameterInputOutput.  # noqa: E501
        :rtype: str
        """
        return self._para_code

    @para_code.setter
    def para_code(self, para_code):
        """Sets the para_code of this ModelParameterInputOutput.

        模型参数节点 parameter code  # noqa: E501

        :param para_code: The para_code of this ModelParameterInputOutput.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and para_code is None:  # noqa: E501
            raise ValueError("Invalid value for `para_code`, must not be `None`")  # noqa: E501

        self._para_code = para_code

    @property
    def value(self):
        """Gets the value of this ModelParameterInputOutput.  # noqa: E501

        参数配置值 parameter value  # noqa: E501

        :return: The value of this ModelParameterInputOutput.  # noqa: E501
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ModelParameterInputOutput.

        参数配置值 parameter value  # noqa: E501

        :param value: The value of this ModelParameterInputOutput.  # noqa: E501
        :type: float
        """

        self._value = value

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ModelParameterInputOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ModelParameterInputOutput):
            return True

        return self.to_dict() != other.to_dict()
