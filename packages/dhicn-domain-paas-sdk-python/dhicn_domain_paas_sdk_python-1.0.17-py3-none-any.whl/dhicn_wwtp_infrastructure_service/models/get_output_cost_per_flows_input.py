# coding: utf-8

"""
    wwtp-paas-infrastructure-service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from dhicn_wwtp_infrastructure_service.configuration import Configuration


class GetOutputCostPerFlowsInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'node_codes': 'list[str]',
        's_time': 'datetime',
        'e_time': 'datetime'
    }

    attribute_map = {
        'node_codes': 'nodeCodes',
        's_time': 'sTime',
        'e_time': 'eTime'
    }

    def __init__(self, node_codes=None, s_time=None, e_time=None, local_vars_configuration=None):  # noqa: E501
        """GetOutputCostPerFlowsInput - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._node_codes = None
        self._s_time = None
        self._e_time = None
        self.discriminator = None

        self.node_codes = node_codes
        self.s_time = s_time
        self.e_time = e_time

    @property
    def node_codes(self):
        """Gets the node_codes of this GetOutputCostPerFlowsInput.  # noqa: E501

        模型点位编码 model node codes  # noqa: E501

        :return: The node_codes of this GetOutputCostPerFlowsInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._node_codes

    @node_codes.setter
    def node_codes(self, node_codes):
        """Sets the node_codes of this GetOutputCostPerFlowsInput.

        模型点位编码 model node codes  # noqa: E501

        :param node_codes: The node_codes of this GetOutputCostPerFlowsInput.  # noqa: E501
        :type: list[str]
        """
        if self.local_vars_configuration.client_side_validation and node_codes is None:  # noqa: E501
            raise ValueError("Invalid value for `node_codes`, must not be `None`")  # noqa: E501

        self._node_codes = node_codes

    @property
    def s_time(self):
        """Gets the s_time of this GetOutputCostPerFlowsInput.  # noqa: E501

        开始时间 start time  # noqa: E501

        :return: The s_time of this GetOutputCostPerFlowsInput.  # noqa: E501
        :rtype: datetime
        """
        return self._s_time

    @s_time.setter
    def s_time(self, s_time):
        """Sets the s_time of this GetOutputCostPerFlowsInput.

        开始时间 start time  # noqa: E501

        :param s_time: The s_time of this GetOutputCostPerFlowsInput.  # noqa: E501
        :type: datetime
        """
        if self.local_vars_configuration.client_side_validation and s_time is None:  # noqa: E501
            raise ValueError("Invalid value for `s_time`, must not be `None`")  # noqa: E501

        self._s_time = s_time

    @property
    def e_time(self):
        """Gets the e_time of this GetOutputCostPerFlowsInput.  # noqa: E501

        结束时间 end time  # noqa: E501

        :return: The e_time of this GetOutputCostPerFlowsInput.  # noqa: E501
        :rtype: datetime
        """
        return self._e_time

    @e_time.setter
    def e_time(self, e_time):
        """Sets the e_time of this GetOutputCostPerFlowsInput.

        结束时间 end time  # noqa: E501

        :param e_time: The e_time of this GetOutputCostPerFlowsInput.  # noqa: E501
        :type: datetime
        """
        if self.local_vars_configuration.client_side_validation and e_time is None:  # noqa: E501
            raise ValueError("Invalid value for `e_time`, must not be `None`")  # noqa: E501

        self._e_time = e_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetOutputCostPerFlowsInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GetOutputCostPerFlowsInput):
            return True

        return self.to_dict() != other.to_dict()
