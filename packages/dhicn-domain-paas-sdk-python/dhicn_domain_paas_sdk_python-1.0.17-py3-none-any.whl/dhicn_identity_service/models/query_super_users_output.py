# coding: utf-8

"""
    identity-service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from dhicn_identity_service.configuration import Configuration


class QuerySuperUsersOutput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'status': 'int',
        'user_name': 'str',
        'surname': 'str',
        'email': 'str',
        'department': 'str',
        'extra_properties': 'str',
        'creation_time': 'datetime',
        'tenant_id': 'str',
        'user_roles': 'list[GuidStringKeyValue]',
        'is_trial_user': 'bool',
        'trial_deadline': 'datetime',
        'phone_number': 'str',
        'tenants': 'list[TenantBelongSystemDto]'
    }

    attribute_map = {
        'id': 'id',
        'status': 'status',
        'user_name': 'userName',
        'surname': 'surname',
        'email': 'email',
        'department': 'department',
        'extra_properties': 'extraProperties',
        'creation_time': 'creationTime',
        'tenant_id': 'tenantId',
        'user_roles': 'userRoles',
        'is_trial_user': 'isTrialUser',
        'trial_deadline': 'trialDeadline',
        'phone_number': 'phoneNumber',
        'tenants': 'tenants'
    }

    def __init__(self, id=None, status=None, user_name=None, surname=None, email=None, department=None, extra_properties=None, creation_time=None, tenant_id=None, user_roles=None, is_trial_user=None, trial_deadline=None, phone_number=None, tenants=None, local_vars_configuration=None):  # noqa: E501
        """QuerySuperUsersOutput - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._status = None
        self._user_name = None
        self._surname = None
        self._email = None
        self._department = None
        self._extra_properties = None
        self._creation_time = None
        self._tenant_id = None
        self._user_roles = None
        self._is_trial_user = None
        self._trial_deadline = None
        self._phone_number = None
        self._tenants = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if status is not None:
            self.status = status
        self.user_name = user_name
        self.surname = surname
        self.email = email
        self.department = department
        self.extra_properties = extra_properties
        if creation_time is not None:
            self.creation_time = creation_time
        self.tenant_id = tenant_id
        self.user_roles = user_roles
        if is_trial_user is not None:
            self.is_trial_user = is_trial_user
        self.trial_deadline = trial_deadline
        self.phone_number = phone_number
        self.tenants = tenants

    @property
    def id(self):
        """Gets the id of this QuerySuperUsersOutput.  # noqa: E501

        用户ID user id  # noqa: E501

        :return: The id of this QuerySuperUsersOutput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this QuerySuperUsersOutput.

        用户ID user id  # noqa: E501

        :param id: The id of this QuerySuperUsersOutput.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def status(self):
        """Gets the status of this QuerySuperUsersOutput.  # noqa: E501

        0-Normal(normal user) 1-Frozen(frozen user) 2-Cancelled(cancelled user)   # noqa: E501

        :return: The status of this QuerySuperUsersOutput.  # noqa: E501
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this QuerySuperUsersOutput.

        0-Normal(normal user) 1-Frozen(frozen user) 2-Cancelled(cancelled user)   # noqa: E501

        :param status: The status of this QuerySuperUsersOutput.  # noqa: E501
        :type: int
        """
        allowed_values = [0, 1, 2]  # noqa: E501
        if self.local_vars_configuration.client_side_validation and status not in allowed_values:  # noqa: E501
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"  # noqa: E501
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def user_name(self):
        """Gets the user_name of this QuerySuperUsersOutput.  # noqa: E501

        用户名 user name  # noqa: E501

        :return: The user_name of this QuerySuperUsersOutput.  # noqa: E501
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this QuerySuperUsersOutput.

        用户名 user name  # noqa: E501

        :param user_name: The user_name of this QuerySuperUsersOutput.  # noqa: E501
        :type: str
        """

        self._user_name = user_name

    @property
    def surname(self):
        """Gets the surname of this QuerySuperUsersOutput.  # noqa: E501

        姓氏 surname  # noqa: E501

        :return: The surname of this QuerySuperUsersOutput.  # noqa: E501
        :rtype: str
        """
        return self._surname

    @surname.setter
    def surname(self, surname):
        """Sets the surname of this QuerySuperUsersOutput.

        姓氏 surname  # noqa: E501

        :param surname: The surname of this QuerySuperUsersOutput.  # noqa: E501
        :type: str
        """

        self._surname = surname

    @property
    def email(self):
        """Gets the email of this QuerySuperUsersOutput.  # noqa: E501

        邮箱 email address  # noqa: E501

        :return: The email of this QuerySuperUsersOutput.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this QuerySuperUsersOutput.

        邮箱 email address  # noqa: E501

        :param email: The email of this QuerySuperUsersOutput.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def department(self):
        """Gets the department of this QuerySuperUsersOutput.  # noqa: E501

        所属单位 working department  # noqa: E501

        :return: The department of this QuerySuperUsersOutput.  # noqa: E501
        :rtype: str
        """
        return self._department

    @department.setter
    def department(self, department):
        """Sets the department of this QuerySuperUsersOutput.

        所属单位 working department  # noqa: E501

        :param department: The department of this QuerySuperUsersOutput.  # noqa: E501
        :type: str
        """

        self._department = department

    @property
    def extra_properties(self):
        """Gets the extra_properties of this QuerySuperUsersOutput.  # noqa: E501

        额外属性 extra properties  # noqa: E501

        :return: The extra_properties of this QuerySuperUsersOutput.  # noqa: E501
        :rtype: str
        """
        return self._extra_properties

    @extra_properties.setter
    def extra_properties(self, extra_properties):
        """Sets the extra_properties of this QuerySuperUsersOutput.

        额外属性 extra properties  # noqa: E501

        :param extra_properties: The extra_properties of this QuerySuperUsersOutput.  # noqa: E501
        :type: str
        """

        self._extra_properties = extra_properties

    @property
    def creation_time(self):
        """Gets the creation_time of this QuerySuperUsersOutput.  # noqa: E501

        创建时间 create time  # noqa: E501

        :return: The creation_time of this QuerySuperUsersOutput.  # noqa: E501
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this QuerySuperUsersOutput.

        创建时间 create time  # noqa: E501

        :param creation_time: The creation_time of this QuerySuperUsersOutput.  # noqa: E501
        :type: datetime
        """

        self._creation_time = creation_time

    @property
    def tenant_id(self):
        """Gets the tenant_id of this QuerySuperUsersOutput.  # noqa: E501

        租户ID tenant id  # noqa: E501

        :return: The tenant_id of this QuerySuperUsersOutput.  # noqa: E501
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this QuerySuperUsersOutput.

        租户ID tenant id  # noqa: E501

        :param tenant_id: The tenant_id of this QuerySuperUsersOutput.  # noqa: E501
        :type: str
        """

        self._tenant_id = tenant_id

    @property
    def user_roles(self):
        """Gets the user_roles of this QuerySuperUsersOutput.  # noqa: E501

        用户角色 user roles  # noqa: E501

        :return: The user_roles of this QuerySuperUsersOutput.  # noqa: E501
        :rtype: list[GuidStringKeyValue]
        """
        return self._user_roles

    @user_roles.setter
    def user_roles(self, user_roles):
        """Sets the user_roles of this QuerySuperUsersOutput.

        用户角色 user roles  # noqa: E501

        :param user_roles: The user_roles of this QuerySuperUsersOutput.  # noqa: E501
        :type: list[GuidStringKeyValue]
        """

        self._user_roles = user_roles

    @property
    def is_trial_user(self):
        """Gets the is_trial_user of this QuerySuperUsersOutput.  # noqa: E501

        是否试用用户 if it is a trial user  # noqa: E501

        :return: The is_trial_user of this QuerySuperUsersOutput.  # noqa: E501
        :rtype: bool
        """
        return self._is_trial_user

    @is_trial_user.setter
    def is_trial_user(self, is_trial_user):
        """Sets the is_trial_user of this QuerySuperUsersOutput.

        是否试用用户 if it is a trial user  # noqa: E501

        :param is_trial_user: The is_trial_user of this QuerySuperUsersOutput.  # noqa: E501
        :type: bool
        """

        self._is_trial_user = is_trial_user

    @property
    def trial_deadline(self):
        """Gets the trial_deadline of this QuerySuperUsersOutput.  # noqa: E501

        试用截止日期 trial deadline  # noqa: E501

        :return: The trial_deadline of this QuerySuperUsersOutput.  # noqa: E501
        :rtype: datetime
        """
        return self._trial_deadline

    @trial_deadline.setter
    def trial_deadline(self, trial_deadline):
        """Sets the trial_deadline of this QuerySuperUsersOutput.

        试用截止日期 trial deadline  # noqa: E501

        :param trial_deadline: The trial_deadline of this QuerySuperUsersOutput.  # noqa: E501
        :type: datetime
        """

        self._trial_deadline = trial_deadline

    @property
    def phone_number(self):
        """Gets the phone_number of this QuerySuperUsersOutput.  # noqa: E501

        电话号码 phonenumber  # noqa: E501

        :return: The phone_number of this QuerySuperUsersOutput.  # noqa: E501
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this QuerySuperUsersOutput.

        电话号码 phonenumber  # noqa: E501

        :param phone_number: The phone_number of this QuerySuperUsersOutput.  # noqa: E501
        :type: str
        """

        self._phone_number = phone_number

    @property
    def tenants(self):
        """Gets the tenants of this QuerySuperUsersOutput.  # noqa: E501

        租户信息列表 tenants  # noqa: E501

        :return: The tenants of this QuerySuperUsersOutput.  # noqa: E501
        :rtype: list[TenantBelongSystemDto]
        """
        return self._tenants

    @tenants.setter
    def tenants(self, tenants):
        """Sets the tenants of this QuerySuperUsersOutput.

        租户信息列表 tenants  # noqa: E501

        :param tenants: The tenants of this QuerySuperUsersOutput.  # noqa: E501
        :type: list[TenantBelongSystemDto]
        """

        self._tenants = tenants

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QuerySuperUsersOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QuerySuperUsersOutput):
            return True

        return self.to_dict() != other.to_dict()
