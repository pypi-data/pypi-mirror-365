# coding: utf-8

"""
    scenario-compute-service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from dhicn_scenario_compute_service.configuration import Configuration


class DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'schedule_scenario_id': 'str',
        'flood_storage_area_id': 'str',
        'name': 'str',
        'initial_wl': 'float',
        'description': 'str'
    }

    attribute_map = {
        'schedule_scenario_id': 'scheduleScenarioId',
        'flood_storage_area_id': 'floodStorageAreaId',
        'name': 'name',
        'initial_wl': 'initialWL',
        'description': 'description'
    }

    def __init__(self, schedule_scenario_id=None, flood_storage_area_id=None, name=None, initial_wl=None, description=None, local_vars_configuration=None):  # noqa: E501
        """DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._schedule_scenario_id = None
        self._flood_storage_area_id = None
        self._name = None
        self._initial_wl = None
        self._description = None
        self.discriminator = None

        if schedule_scenario_id is not None:
            self.schedule_scenario_id = schedule_scenario_id
        if flood_storage_area_id is not None:
            self.flood_storage_area_id = flood_storage_area_id
        self.name = name
        if initial_wl is not None:
            self.initial_wl = initial_wl
        self.description = description

    @property
    def schedule_scenario_id(self):
        """Gets the schedule_scenario_id of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501

        River flood schedule scenario id  # noqa: E501

        :return: The schedule_scenario_id of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501
        :rtype: str
        """
        return self._schedule_scenario_id

    @schedule_scenario_id.setter
    def schedule_scenario_id(self, schedule_scenario_id):
        """Sets the schedule_scenario_id of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.

        River flood schedule scenario id  # noqa: E501

        :param schedule_scenario_id: The schedule_scenario_id of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501
        :type: str
        """

        self._schedule_scenario_id = schedule_scenario_id

    @property
    def flood_storage_area_id(self):
        """Gets the flood_storage_area_id of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501

        Flood storage area id  # noqa: E501

        :return: The flood_storage_area_id of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501
        :rtype: str
        """
        return self._flood_storage_area_id

    @flood_storage_area_id.setter
    def flood_storage_area_id(self, flood_storage_area_id):
        """Sets the flood_storage_area_id of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.

        Flood storage area id  # noqa: E501

        :param flood_storage_area_id: The flood_storage_area_id of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501
        :type: str
        """

        self._flood_storage_area_id = flood_storage_area_id

    @property
    def name(self):
        """Gets the name of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501

        Scenario name  # noqa: E501

        :return: The name of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.

        Scenario name  # noqa: E501

        :param name: The name of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def initial_wl(self):
        """Gets the initial_wl of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501

        Initial water level of the flood storage area  # noqa: E501

        :return: The initial_wl of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501
        :rtype: float
        """
        return self._initial_wl

    @initial_wl.setter
    def initial_wl(self, initial_wl):
        """Sets the initial_wl of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.

        Initial water level of the flood storage area  # noqa: E501

        :param initial_wl: The initial_wl of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501
        :type: float
        """

        self._initial_wl = initial_wl

    @property
    def description(self):
        """Gets the description of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501

        Scenario description  # noqa: E501

        :return: The description of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.

        Scenario description  # noqa: E501

        :param description: The description of this DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput.  # noqa: E501
        :type: str
        """

        self._description = description

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DhiDssScenarioComputeRfDtosCreateFloodStorageAreaScenarioInput):
            return True

        return self.to_dict() != other.to_dict()
