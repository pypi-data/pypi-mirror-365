# coding: utf-8

"""
    model-information-service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from dhicn_model_information_service.configuration import Configuration


class GetControlRuleByScenarioOutput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'cs_pumps': 'list[CsPump]',
        'cs_valves': 'list[CsValve]',
        'river_pumps': 'list[RiverPump]',
        'river_gates': 'list[RiverGate]'
    }

    attribute_map = {
        'cs_pumps': 'csPumps',
        'cs_valves': 'csValves',
        'river_pumps': 'riverPumps',
        'river_gates': 'riverGates'
    }

    def __init__(self, cs_pumps=None, cs_valves=None, river_pumps=None, river_gates=None, local_vars_configuration=None):  # noqa: E501
        """GetControlRuleByScenarioOutput - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._cs_pumps = None
        self._cs_valves = None
        self._river_pumps = None
        self._river_gates = None
        self.discriminator = None

        self.cs_pumps = cs_pumps
        self.cs_valves = cs_valves
        self.river_pumps = river_pumps
        self.river_gates = river_gates

    @property
    def cs_pumps(self):
        """Gets the cs_pumps of this GetControlRuleByScenarioOutput.  # noqa: E501

        管网泵站调度规则数据  # noqa: E501

        :return: The cs_pumps of this GetControlRuleByScenarioOutput.  # noqa: E501
        :rtype: list[CsPump]
        """
        return self._cs_pumps

    @cs_pumps.setter
    def cs_pumps(self, cs_pumps):
        """Sets the cs_pumps of this GetControlRuleByScenarioOutput.

        管网泵站调度规则数据  # noqa: E501

        :param cs_pumps: The cs_pumps of this GetControlRuleByScenarioOutput.  # noqa: E501
        :type: list[CsPump]
        """

        self._cs_pumps = cs_pumps

    @property
    def cs_valves(self):
        """Gets the cs_valves of this GetControlRuleByScenarioOutput.  # noqa: E501

        管网阀门调度规则数据  # noqa: E501

        :return: The cs_valves of this GetControlRuleByScenarioOutput.  # noqa: E501
        :rtype: list[CsValve]
        """
        return self._cs_valves

    @cs_valves.setter
    def cs_valves(self, cs_valves):
        """Sets the cs_valves of this GetControlRuleByScenarioOutput.

        管网阀门调度规则数据  # noqa: E501

        :param cs_valves: The cs_valves of this GetControlRuleByScenarioOutput.  # noqa: E501
        :type: list[CsValve]
        """

        self._cs_valves = cs_valves

    @property
    def river_pumps(self):
        """Gets the river_pumps of this GetControlRuleByScenarioOutput.  # noqa: E501

        河道泵站调度规则数据  # noqa: E501

        :return: The river_pumps of this GetControlRuleByScenarioOutput.  # noqa: E501
        :rtype: list[RiverPump]
        """
        return self._river_pumps

    @river_pumps.setter
    def river_pumps(self, river_pumps):
        """Sets the river_pumps of this GetControlRuleByScenarioOutput.

        河道泵站调度规则数据  # noqa: E501

        :param river_pumps: The river_pumps of this GetControlRuleByScenarioOutput.  # noqa: E501
        :type: list[RiverPump]
        """

        self._river_pumps = river_pumps

    @property
    def river_gates(self):
        """Gets the river_gates of this GetControlRuleByScenarioOutput.  # noqa: E501

        河道闸门调度规则数据  # noqa: E501

        :return: The river_gates of this GetControlRuleByScenarioOutput.  # noqa: E501
        :rtype: list[RiverGate]
        """
        return self._river_gates

    @river_gates.setter
    def river_gates(self, river_gates):
        """Sets the river_gates of this GetControlRuleByScenarioOutput.

        河道闸门调度规则数据  # noqa: E501

        :param river_gates: The river_gates of this GetControlRuleByScenarioOutput.  # noqa: E501
        :type: list[RiverGate]
        """

        self._river_gates = river_gates

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetControlRuleByScenarioOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GetControlRuleByScenarioOutput):
            return True

        return self.to_dict() != other.to_dict()
