[metadata]
name = amber-embeddings
version = attr: amber.__version__
author = Saiyam Jain
author_email = saiyam.sandhir.jain@gmail.com
maintainer = Saiyam Jain
maintainer_email = saiyam.sandhir.jain@gmail.com
description = Attention-based Multi-head Bidirectional Enhanced Representations for contextual word embeddings
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/Saiyam-Sandhir-Jain/AMBER
project_urls = 
	Bug Tracker = https://github.com/Saiyam-Sandhir-Jain/AMBER/issues
	Documentation = https://amber-embeddings.readthedocs.io/
	Source Code = https://github.com/Saiyam-Sandhir-Jain/AMBER
classifiers = 
	Development Status :: 4 - Beta
	Intended Audience :: Developers
	Intended Audience :: Science/Research
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
	Topic :: Scientific/Engineering :: Artificial Intelligence
	Topic :: Text Processing :: Linguistic
	Topic :: Software Development :: Libraries :: Python Modules
keywords = 
	nlp
	word-embeddings
	attention
	context-aware
	word-sense-disambiguation
	semantic-search
	tfidf
	word2vec
	machine-learning
	natural-language-processing

[options]
packages = find:
python_requires = >=3.7
install_requires = 
	numpy>=1.19.0
	scipy>=1.5.0
	scikit-learn>=0.24.0
	gensim>=4.0.0
	pandas>=1.2.0
	matplotlib>=3.3.0
	seaborn>=0.11.0
include_package_data = True
zip_safe = False

[options.packages.find]
exclude = 
	tests*
	docs*
	examples*

[options.extras_require]
dev = 
	pytest>=6.0.0
	pytest-cov>=2.10.0
	black>=21.0.0
	flake8>=3.8.0
	isort>=5.0.0
	mypy>=0.800
docs = 
	sphinx>=4.0.0
	sphinx-rtd-theme>=0.5.0
	sphinx-autodoc-typehints>=1.12.0
test = 
	pytest>=6.0.0
	pytest-cov>=2.10.0
	pytest-mock>=3.6.0
all = 
	%(dev)s
	%(docs)s
	%(test)s

[options.package_data]
amber = 
	*.json
	*.yaml
	*.yml

[bdist_wheel]
universal = 0

[sdist]
formats = gztar

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
	--strict-markers
	--strict-config
	--verbose
	--tb=short
	--cov=amber
	--cov-report=term-missing
	--cov-report=html
	--cov-report=xml
filterwarnings = 
	ignore::UserWarning
	ignore::FutureWarning
	ignore::DeprecationWarning
markers = 
	slow: marks tests as slow (deselect with '-m "not slow"')
	integration: marks tests as integration tests
	unit: marks tests as unit tests

[coverage:run]
source = amber
omit = 
	*/tests/*
	*/test_*
	setup.py
	*/venv/*
	*/virtualenv/*
	*/site-packages/*

[coverage:report]
exclude_lines = 
	pragma: no cover
	def __repr__
	if self.debug:
	if settings.DEBUG
	raise AssertionError
	raise NotImplementedError
	if 0:
	if __name__ == .__main__.:
	class .*\bProtocol\):
	@(abc\.)?abstractmethod

[flake8]
max-line-length = 88
extend-ignore = 
	E203,  # whitespace before ':'
	E501,  # line too long
	W503,  # line break before binary operator
exclude = 
	.git,
	__pycache__,
	docs/source/conf.py,
	old,
	build,
	dist,
	.venv,
	venv,
	.eggs,
	*.egg

[isort]
profile = black
multi_line_output = 3
line_length = 88
known_first_party = amber
known_third_party = 
	numpy,
	scipy,
	sklearn,
	gensim,
	pandas,
	matplotlib,
	seaborn,
	pytest

[mypy]
python_version = 3.7
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = True
disallow_untyped_decorators = False
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

[mypy-gensim.*]
ignore_missing_imports = True

[mypy-sklearn.*]
ignore_missing_imports = True

[mypy-matplotlib.*]
ignore_missing_imports = True

[mypy-seaborn.*]
ignore_missing_imports = True

[mypy-pytest.*]
ignore_missing_imports = True

[egg_info]
tag_build = 
tag_date = 0

