[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "python3-etcd3"
dynamic = ["version"]
description = "Python client for etcd v3"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "Louis Taylor", email = "louis@kragniz.eu"}
]
maintainers = [
    {name = "VimT", email = "me@vimt.me"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: System :: Distributed Computing",
]
keywords = ["etcd", "etcd3", "distributed", "key-value", "database"]
requires-python = ">=3.8"
dependencies = [
    "grpcio>=1.27.0",
    "protobuf>=3.6.1",
]

[project.urls]
Homepage = "https://github.com/vimt/python3-etcd"
Documentation = "https://github.com/vimt/python3-etcd"
Repository = "https://github.com/vimt/python3-etcd"
Issues = "https://github.com/vimt/python3-etcd/issues"
"Original Project" = "https://github.com/kragniz/python-etcd3"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "mypy",
    "ruff",
]

[tool.setuptools.dynamic]
version = {attr = "etcd3.__version__"}

[tool.setuptools.packages.find]
where = ["."]
include = ["etcd3*"]
[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]