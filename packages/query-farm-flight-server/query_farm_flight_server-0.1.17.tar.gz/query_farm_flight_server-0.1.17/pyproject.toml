[project]
name = "query-farm-flight-server"
version = "0.1.17"
description = "A framework for building Arrow Flight servers for the DuckDB Airport extension with robust authentication, schema management, and data handling capabilities."
authors = [{ name = "Rusty Conover", email = "hello@query.farm" }]
dependencies = [
    "structlog>=24.4.0",
    "pydantic>=2.9.2",
    "mypy-boto3-dynamodb>=1.35.24",
    "boto3>=1.35.0",
    "cache3>=0.4.3",
    "click>=8.1.7",
    "prettytable>=3.11.0",
    "pyarrow>=19.0.0",
    "sentry-sdk>=2.16.0",
    "zstandard>=0.23.0",
    "fuzzywuzzy>=0.18.0",
    "python-levenshtein>=0.26.0",
    "mypy-boto3-s3>=1.35.42",
    "msgpack>=1.1.0",
]
readme = "README.md"
requires-python = ">= 3.12"
keywords = ["duckdb", "arrow", "arrow flight", "airport", "duckdb airport", "predicate pushdown", "sql", "predicates", "flight", "sql parsing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Database",
    "Topic :: Database :: Database Engines/Servers",
    "Programming Language :: Python :: 3.12"
]



[project.urls]
Repository = "https://github.com/query-farm/python-flight-server.git"
Issues = "https://github.com/query-farm/python-flight-server/issues"

[build-system]
requires = ["hatchling==1.26.3", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "moto>=5.0.16",
    "pytest>=8.3.2",
    "pytest-mypy>=0.10.3",
    "pytest-env>=1.1.3",
    "pytest-cov>=5.0.0",
    "ruff>=0.6.2",
    "moto>=5.1.4",
    "mypy-boto3-s3>=1.38.44",
]

[tool.rye.include]
files = ["py.typed"]


[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/query_farm_flight_server"]


[tool.pytest]

[tool.pytest.ini_options]
markers = ["moto: conflicting with boto3 based tests"]


[tool.mypy]
ignore_missing_imports = true
plugins = ["pydantic.mypy"]


follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true


[tool.pydantic.mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = ['E501']
