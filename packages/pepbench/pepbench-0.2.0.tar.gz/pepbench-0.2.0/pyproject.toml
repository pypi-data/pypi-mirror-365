[project]
name = "pepbench"
version = "0.2.0"
description = "A python package to benchmark different pre-ejection period (PEP) extraction algorithms."
authors = [{ name = "Robert Richer", email = "robert.richer@fau.de" }]
requires-python = ">=3.10,<4.0"
readme = "README.md"
license = "MIT"
dependencies = [
    "biopsykit>=0.13.1",
    "tpcp>=2",
    "jinja2>=3.1.4,<4",
    "pooch>=1.8.2",
    "pywavelets>=1.8.0",
]

[dependency-groups]
dev = [
    "ruff>=0,<1",
    "ipython>=8.26.0,<9",
    "ipywidgets>=8.1.3,<9",
    "ipympl>=0.9.4,<0.10",
    "ipykernel>=6.29.5,<7",
    "pytest>=8.3.4,<9",
    "pytest-cov>=6.0.0",
    "numpydoc>=1.8.0,<2",
    "poethepoet>=0.33.0",
    "toml>=0.10.2",
    "sphinx-gallery>=0.19.0",
    "recommonmark>=0.7.1",
    "memory-profiler>=0.61.0",
    "pydata-sphinx-theme>=0.16.1",
    "sphinx-copybutton>=0.5.2",
    "nbsphinx>=0.9.7",
]

[tool.uv.sources]
#biopsykit = { git = "https://github.com/mad-lab-fau/BioPsyKit.git", branch = "main" }
#biopsykit = { path = "/Users/richer/Documents/PhD/Code_Repositories/BioPsyKit/BioPsyKit", editable = true }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = ["src/pepbench"]

[tool.hatch.build.targets.wheel]
include = ["src/pepbench"]

[tool.hatch.build.targets.wheel.sources]
"src/pepbench" = "pepbench"

[tool.black]
line-length = 120
target-version = ['py310']
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | docs
    | build
    | dist
    | \.virtual_documents
  )/
)
'''

[tool.poe.tasks]
_format = "ruff format ."
_auto_fix = "ruff check . --fix-only --show-fixes --exit-zero"
_auto_fix_unsafe = "ruff check . --fix-only --show-fixes --exit-zero --unsafe-fixes"
format = ["_auto_fix", "_format"]
format_unsafe = ["_auto_fix_unsafe", "_format"]
lint = { cmd = "ruff check src --fix", help = "Lint all files with ruff." }
_lint_ci = "ruff check src --output-format=github"
_check_format = "ruff format . --check"
ci_check = { sequence = ["_check_format", "_lint_ci"], help = "Check all potential format and linting issues." }
test = { cmd = "pytest --cov=pepbench --cov-report=term-missing --cov-report=xml", help = "Run Pytest with coverage." }
docs = { "script" = "_tasks:task_docs()",  help = "Build the html docs using Sphinx." }
docs_clean = { "script" = "_tasks:task_docs(clean=True)",  help = "Remove all old build files and build a clean version of the docs." }
docs_preview = { cmd = "python -m http.server --directory docs/_build/html", help = "Preview the built html docs." }
version = { "script" = "_tasks:task_update_version" }
conf_jupyter = { cmd = "python -m ipykernel install --user --name pepbench --display-name pepbench", help = "Add a new jupyter kernel for the project."}
remove_jupyter = { cmd = "jupyter kernelspec uninstall pepbench", help = "Remove the project specific jupyter kernel."}
update_example_data = { script="_tasks:task_update_example_data", help = "Update the example data registry."}
