#!/bin/bash
# DmDSLab PyPI Publishing Script (Bash version)
# –í–µ—Ä—Å–∏—è: 2.0
# –ê–≤—Ç–æ—Ä: DmDSLab Team

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
TEST_REPO=false
SKIP_VERSION_CHECK=false
DRY_RUN=false

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
    case $1 in
        --test-repo)
            TEST_REPO=true
            shift
            ;;
        --skip-version-check)
            SKIP_VERSION_CHECK=true
            shift
            ;;
        --dry-run)
            DRY_RUN=true
            shift
            ;;
        -h|--help)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [OPTIONS]"
            echo "OPTIONS:"
            echo "  --test-repo              –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ TestPyPI"
            echo "  --skip-version-check     –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –≤–µ—Ä—Å–∏–∏"
            echo "  --dry-run                –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–µ–∑ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
            echo "  -h, --help               –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            exit 0
            ;;
        *)
            echo -e "${RED}–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1${NC}"
            exit 1
            ;;
    esac
done

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
PACKAGE_NAME="DmDSLab"
if [ "$TEST_REPO" = true ]; then
    PYPI_REPO="testpypi"
    PYPI_TOKEN="$TEST_PYPI_TOKEN"
    API_BASE="https://test.pypi.org"
else
    PYPI_REPO="pypi"
    PYPI_TOKEN="$PYPI_TOKEN"
    API_BASE="https://pypi.org"
fi

echo -e "${GREEN}DmDSLab PyPI Publishing Script${NC}"
echo -e "${GREEN}===============================${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
if [ -z "$PYPI_TOKEN" ]; then
    TOKEN_VAR=$([ "$TEST_REPO" = true ] && echo "TEST_PYPI_TOKEN" || echo "PYPI_TOKEN")
    echo -e "${RED}–û–®–ò–ë–ö–ê: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è $TOKEN_VAR –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!${NC}"
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω: export $TOKEN_VAR='your-token-here'${NC}"
    exit 1
fi

echo -e "${GREEN}‚úì –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω${NC}"
echo -e "${GREEN}‚úì –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $PYPI_REPO${NC}"

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫
echo -e "\n${YELLOW}–û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫...${NC}"
rm -rf build/ dist/ *.egg-info/

# –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏
echo -e "${YELLOW}–ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –ø–∞–∫–µ—Ç–∞...${NC}"
if ! VERSION=$(python -c "import $PACKAGE_NAME; print($PACKAGE_NAME.__version__)" 2>/dev/null); then
    echo -e "${RED}–û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é –ø–∞–∫–µ—Ç–∞!${NC}"
    echo -e "${YELLOW}–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞–∫–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: pip install -e .${NC}"
    exit 1
fi
echo -e "${GREEN}‚úì –í–µ—Ä—Å–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: $VERSION${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏
if [ "$SKIP_VERSION_CHECK" = false ]; then
    echo -e "\n${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –≤–µ—Ä—Å–∏–∏ –Ω–∞ PyPI...${NC}"
    API_URL="$API_BASE/pypi/$PACKAGE_NAME/$VERSION/json"
    
    if curl -s -f "$API_URL" > /dev/null 2>&1; then
        echo -e "${RED}–û–®–ò–ë–ö–ê: –í–µ—Ä—Å–∏—è $VERSION —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ $PYPI_REPO!${NC}"
        echo -e "${YELLOW}–û–±–Ω–æ–≤–∏—Ç–µ –≤–µ—Ä—Å–∏—é –≤ setup.py –∏ __init__.py${NC}"
        exit 1
    else
        echo -e "${GREEN}‚úì –í–µ—Ä—Å–∏—è $VERSION –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ $PYPI_REPO - –º–æ–∂–Ω–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å${NC}"
    fi
else
    echo -e "\n${YELLOW}‚ö† –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–µ—Ä—Å–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É${NC}"
fi

if [ "$DRY_RUN" = true ]; then
    echo -e "\n${CYAN}üîç –†–ï–ñ–ò–ú DRY RUN - –ø—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞${NC}"
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å–±–æ—Ä–∫–∏
echo -e "\n${YELLOW}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å–±–æ—Ä–∫–∏...${NC}"
python -m pip install --upgrade pip build twine

# –°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞
echo -e "\n${YELLOW}–°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞...${NC}"
python -m build
echo -e "${GREEN}‚úì –ü–∞–∫–µ—Ç —Å–æ–±—Ä–∞–Ω${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞
echo -e "\n${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞...${NC}"
twine check dist/*
echo -e "${GREEN}‚úì –ü–∞–∫–µ—Ç –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É${NC}"

# –ü—É–±–ª–∏–∫–∞—Ü–∏—è
if [ "$DRY_RUN" = false ]; then
    echo -e "\n${YELLOW}–ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ $PYPI_REPO...${NC}"
    
    twine upload \
        --repository "$PYPI_REPO" \
        --username "__token__" \
        --password "$PYPI_TOKEN" \
        dist/*
    
    echo -e "\n${GREEN}üéâ –£–°–ü–ï–®–ù–û –û–ü–£–ë–õ–ò–ö–û–í–ê–ù–û!${NC}"
    PROJECT_URL="$API_BASE/project/$PACKAGE_NAME/$VERSION"
    echo -e "${GREEN}üì¶ –°—Å—ã–ª–∫–∞: $PROJECT_URL${NC}"
    
    if [ "$TEST_REPO" = false ]; then
        echo -e "\n${CYAN}üìã –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:${NC}"
        echo -e "${NC}pip install $PACKAGE_NAME==$VERSION${NC}"
    fi
else
    echo -e "\n${CYAN}‚úì DRY RUN –∑–∞–≤–µ—Ä—à–µ–Ω - –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã${NC}"
    echo -e "${YELLOW}–î–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–µ–∑ —Ñ–ª–∞–≥–∞ --dry-run${NC}"
fi

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo -e "\n${YELLOW}–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...${NC}"
rm -rf build/ *.egg-info/
echo -e "${GREEN}‚úì –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"

echo -e "\n${GREEN}‚ú® –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!${NC}"