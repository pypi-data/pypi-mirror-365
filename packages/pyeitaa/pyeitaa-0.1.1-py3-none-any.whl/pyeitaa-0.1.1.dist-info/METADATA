Metadata-Version: 2.4
Name: pyeitaa
Version: 0.1.1
Summary: Elegant, modern and asynchronous Eitaa MTProto API framework in Python for users.
Author-email: MSDanesh <msdanesh48@gmail.com>
License-Expression: Apache-2.0
Project-URL: Homepage, https://github.com/MSDanesh/pyeitaa
Project-URL: Repository, https://github.com/MSDanesh/pyeitaa
Project-URL: Issues, https://github.com/MSDanesh/pyeitaa/issues
Keywords: eitaa,pyeitaa,chat,messenger,mtproto,api,client,library,python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: aiohttp
Requires-Dist: base36
Dynamic: license-file

# کتابخانه pyeitaa 🚀

**کتابخانهٔ مدرن، همگام‌سازی‌نشده (asynchronous) و حرفه‌ای برای اتصال به حساب کاربری ایتا (userbot) با استفاده از پروتکل MTProto، بدون استفاده از API رسمی.**

> ⚠️ توجه: این کتابخانه از API رسمی ایتا استفاده نمی‌کند. اتصال به سرورهای MTProto ایتا به‌طور مستقیم و با استفاده از ترسنپورتر اختصاصی انجام می‌شود.

---

## 📦 نصب

```bash
pip install pyeitaa
```

نیازمند **پایتون نسخه ۳.۱۰ یا بالاتر** است.

---

## ⚙️ معرفی

کتابخانهٔ `pyeitaa` به شما این امکان را می‌دهد تا به عنوان یک کاربر واقعی (نه ربات) به پیام‌رسان ایتا متصل شوید و با اکانت خود با هسته MTProto در ارتباط باشید.

کاربردهای معمول:

- ساخت یوزربات برای یک اتوماسیون پیشرفته
- پردازش پیام‌ها به صورت بلادرنگ
- ساخت ابزارهایی با دسترسی واقعی به امکانات کاربر

---

## 🚀 شروع سریع

```python
import asyncio
from pyeitaa import Client

async def main():
    client = Client(
        "eitaa",
        phone_number="+98XXXXXXXXXX",
    )

    async with client:
        print(client.me)

loop = asyncio.get_event_loop()
loop.run_until_complete(main())
loop.close()
```

---

## 🧰 امکانات

- ✅ طراحی‌شده با async/await برای کارایی بالا
- ✅ پشتیبانی کامل از اتصال MTProto
- ✅ ارسال و دریافت پیام
- ✅ پشتیبانی از فایل و رسانه
- ✅ مدیریت نشست (session) و اتصال مجدد
- ✅ امکان دیباگ و لاگ‌گیری


---

## 🔐 نکات امنیتی

- این ابزار به عنوان کاربر واقعی متصل می‌شود؛ در استفاده از آن دقت کنید.
- فایل نشست (session) خود را به‌صورت امن ذخیره کنید زیرا دسترسی کامل به حساب شما را فراهم می‌کند.
- ممکن است با تغییر در پروتکل MTProto ایتا، عملکرد کتابخانه دچار اختلال شود.

---

## 🔍 مقایسه با دیگر کتابخانه‌ها

کتابخانه‌های موجود مثل `eitaa` یا `eitaa-pykit` از API غیراستاندارد HTTP استفاده می‌کنند که بسیار محدود است (مثلاً فقط ارسال پیام ساده).

در مقابل، `pyeitaa`:

- اتصال مستقیم به MTProto ایتا (مثل تلگرام)
- پشتیبانی از همه قابلیت‌های اکانت واقعی
- عدم وابستگی به توکن یا REST API
- مناسب برای ساخت سیستم‌های پیچیده‌تر

---

## 🧪 چه زمانی از pyeitaa استفاده کنیم؟

اگر می‌خواهید:

- با اکانت واقعی خود پیام‌ها را بررسی یا ارسال کنید
- به فایل‌ها، مدیا، کانال‌ها و چت‌ها دسترسی کامل داشته باشید
- عملکردی فراتر از ربات‌های ایتا پیاده‌سازی کنید

کتابخانه `pyeitaa` انتخاب مناسبی است.

---

## 📝 نکات مهم

- درحال حاضر این کتابخانه فقط روی حساب هایی قابل استفاده هست که تایید دومرحله ای ندارند.
- درصورتی که از قبل با شماره تلفنی حسابی ایجاد نشده حتما باید از قبل حسابی ایجاد شود.
- این پروژه هیچ ارتباط مستقیمی با شرکت محترم ایتا ندارد و کاملا مستقل نوشته و توسعه داده شده است.

---

## 🤝 مشارکت

پروژه متن‌باز است. خوشحال می‌شویم اگر گزارش باگ، پیشنهاد یا Pull Request ثبت کنید:

[GitHub: MSDanesh/pyeitaa](https://github.com/MSDanesh/pyeitaa)

---

## 📜 مجوز

- [ Apache-2.0 license](https://github.com/MSDanesh/pyeitaa/blob/master/LICENSE)

---

## 📚 منابع

- PyPI: [https://pypi.org/project/pyeitaa](https://pypi.org/project/pyeitaa)
- GitHub: [https://github.com/MSDanesh/pyeitaa](https://github.com/MSDanesh/pyeitaa)
