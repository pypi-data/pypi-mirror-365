[build-system]
requires = [
    "setuptools>=64.0.0",
    "wheel"
]
build-backend = "setuptools.build_meta" 

[project]
name = "agent-enforcer"
version = "0.9.0"
description = "Agent Enforcer: A modular code quality checking tool"
readme = { file = "README.md", content-type = "text/markdown" }
license = "MIT"
authors = [
    { name = "Artemonim", email = "artemonim@yandex.ru" },
]
requires-python = ">=3.7"
dependencies = [
    "gitignore-parser",
    "black",
    "isort",
    "flake8",
    "mypy",
    "pyright",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "fastmcp",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-asyncio>=1.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.950",
    "isort>=5.0",
]

[project.urls]
"Homepage" = "https://github.com/Artemonim/AgentEnforcer"
"Source" = "https://github.com/Artemonim/AgentEnforcer"
"Tracker" = "https://github.com/Artemonim/AgentEnforcer/issues"
"Documentation" = "https://github.com/Artemonim/AgentEnforcer#readme"
"Changelog" = "https://github.com/Artemonim/AgentEnforcer/blob/master/CHANGELOG.md"

[project.scripts]
agent-enforcer = "enforcer.main:main"
agent-enforcer-cli = "enforcer.cli:main"
agent-enforcer-mcp = "enforcer.mcp_server:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["enforcer*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
enforcer = [] 

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = []
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["enforcer"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/venv/*/*",
    "*/build/*",
    "*/dist/*",
    "*/agent_enforcer.egg-info/*",
    "*/temporary/*",
    "*/Doc/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 

[tool.coverage.paths]
source = [
    "enforcer",
    "**/site-packages/enforcer",
] 