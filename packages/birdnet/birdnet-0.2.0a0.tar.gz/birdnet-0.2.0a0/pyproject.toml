[project]
name = "birdnet"
version = "0.2.0a0"
description = "A Python library for identifying bird species by their sounds."
readme = "README.md"
requires-python = ">=3.11, <3.12"
license = { text = "MIT" }
authors = [{ name = "Stefan Taubert" }]
maintainers = [{ name = "Stefan Taubert" }]
keywords = [
  "birds",
  "deep-learning",
  "birdsong",
  "acoustic-monitoring",
  "bioacoustics",
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Operating System :: OS Independent",
  "Operating System :: MacOS",
  "Operating System :: POSIX",
  "Operating System :: POSIX :: BSD",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
]
dependencies = [
  "resampy==0.4.3",
  "soundfile==0.12.1",
  "scipy==1.9.3",
  "ordered-set==4.1.0",
  "tqdm==4.64.1",
  "numpy==1.23.5",
  "pandas==2.3.0",
  "psutil==7.0.0",
  "pyarrow==20.0.0",
  "tensorflow==2.15.1",
]

[project.optional-dependencies]
litert = ["ai_edge_litert==1.4.0"]
and-cuda = ["tensorflow[and-cuda]==2.15.1"]
dev = ["pytest", "pytest-cov", "pytest-xdist", "tox", "ruff", "mypy", "rope", "build", "twine", "scipy-stubs", "tuna", "pyarrow-stubs", "types-tqdm", "types-requests", "pandas-stubs", "types-tensorflow"]

[project.urls]
Homepage = "https://github.com/birdnet-team/birdnet"
Issues = "https://github.com/birdnet-team/birdnet/issues"

[project.scripts]
birdnet-benchmark = "birdnet.benchmark_script:run_benchmark"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
packages = ["birdnet"]

[tool.setuptools.packages.find]
where = ["src"]
include = ["birdnet", "birdnet.*"]
exclude = ["birdnet_tests", "birdnet_tests.*"]
namespaces = true

[tool.pytest.ini_options]
log_cli = true
log_level = "DEBUG"
testpaths = ["src/birdnet_tests"]
norecursedirs = ["src/birdnet_v1_tests"]

[tool.ruff]
src = ["src/birdnet"]
line-length = 88
indent-width = 2

[tool.ruff.format]
indent-style = "space"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    "C4",
    "T20",
    "PERF",
    "ANN",
    "TID",
    "EXE", 
    "W",
    # "D",
]

[tool.ruff.lint.isort]
known-first-party = ["birdnet*"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{311}
isolated_build = True

[testenv]
setenv =
  COVERAGE_FILE = .coverage.{envname}

deps = 
  pytest
  pytest-cov
  pytest-xdist
  mypy
  ruff
  .[litert]
commands = 
  # ruff check src/birdnet
  # ruff check src/birdnet_tests
  pytest -n auto \
    --cov=src/birdnet \
    --cov-append \
    --cov-report=
"""

[build-system]
requires = ["setuptools >= 47.0.0", "wheel"]
build-backend = "setuptools.build_meta"
