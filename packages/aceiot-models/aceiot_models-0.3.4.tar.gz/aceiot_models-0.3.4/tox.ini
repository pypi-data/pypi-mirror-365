[tox]
requires = tox-uv
envlist = py{310,311,312,313}, lint, type, coverage
minversion = 4.0
isolated_build = True
skip_missing_interpreters = True

[testenv]
description = Run tests with pytest under {basepython}
deps =
    pytest>=8.4.1
    pytest-cov>=6.2.1
extras = upload-progress
commands =
    pytest {posargs:-v}

[testenv:lint]
description = Run linting with ruff
deps = ruff>=0.12.5
skip_install = True
commands =
    ruff check {posargs:.}
    ruff format --check {posargs:.}

[testenv:format]
description = Auto-format code with ruff
deps = ruff>=0.12.5
skip_install = True
commands =
    ruff check --fix {posargs:.}
    ruff format {posargs:.}

[testenv:type]
description = Run type checking with pyrefly
deps = 
    pyrefly>=0.25.0
commands =
    # Prefix with - to allow tox to continue even if type checking finds errors
    -pyrefly check {posargs:.}

[testenv:coverage]
description = Run tests with coverage
deps =
    pytest>=8.4.1
    pytest-cov>=6.2.1
extras = upload-progress
commands =
    pytest --cov=aceiot_models --cov-report=term-missing --cov-report=html --cov-report=xml {posargs}

[testenv:pre-commit]
description = Run pre-commit hooks
deps = pre-commit>=3.6.0
skip_install = True
commands =
    pre-commit run --all-files

# Quick test for specific Python version
[testenv:quick]
description = Quick test with current Python
commands = pytest -x {posargs}

# Test all versions in parallel
[testenv:all]
description = Run tests on all Python versions
deps = 
    pytest>=8.4.1
    pytest-cov>=6.2.1
extras = upload-progress
commands = 
    tox -p auto -e py310,py311,py312,py313