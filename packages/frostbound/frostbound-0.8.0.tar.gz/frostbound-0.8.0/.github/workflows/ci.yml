name: CI

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request: {}

env:
  COLUMNS: 120
  UV_FROZEN: true
  FORCE_COLOR: 1
  PACKAGE_NAME: frostbound

jobs:
  lint:
    name: Lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.12', '3.13']
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: true
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: |
          uv sync --group dev
          uv pip install pip

      - name: Run linting
        run: |
          uv run ruff check $PACKAGE_NAME
          uv run ruff format --check $PACKAGE_NAME

  typecheck:
    name: Type Check
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.12', '3.13']
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: true
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: uv sync --group dev

      - name: Run mypy
        run: uv run mypy $PACKAGE_NAME

      - name: Run pyright
        run: uv run pyright $PACKAGE_NAME

  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12', '3.13']
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: true
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: uv sync --group dev

      - name: Run tests
        run: uv run pytest tests

  coverage:
    name: Coverage Report
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.12', '3.13']
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: true
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: uv sync --group dev

      - name: Generate coverage report
        run: |
          uv run coverage run -m pytest tests
          uv run coverage report
          uv run coverage xml

      - name: Archive coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            htmlcov/
            coverage.xml
          retention-days: 7