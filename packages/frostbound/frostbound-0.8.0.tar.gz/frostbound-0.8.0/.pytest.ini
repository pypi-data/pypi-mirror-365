[pytest]
# Minimum version
minversion = 7.0

# Test paths
testpaths = tests

# Python files
python_files = test_*.py *_test.py

# Python classes
python_classes = Test* *Tests

# Python functions
python_functions = test_*

# Output options
addopts =
    --strict-markers
    --cov=frostbound
    --cov-report=term-missing
    --cov-report=xml
    --cov-report=html
    --cov-fail-under=80
    --color=yes

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    smoke: marks tests as smoke tests
    regression: marks tests as regression tests
    e2e: marks tests as end-to-end tests
    performance: marks tests as performance tests
    security: marks tests as security tests
    requires_network: marks tests that require network access
    requires_database: marks tests that require database access
    requires_docker: marks tests that require Docker
    skip_on_ci: marks tests to skip on CI
    flaky: marks tests as flaky (might fail intermittently)
    wip: marks tests as work in progress

# Test discovery
norecursedirs =
    .git
    .github
    .tox
    .nox
    .eggs
    *.egg
    dist
    build
    docs
    node_modules
    venv
    .venv
    __pycache__
    .pytest_cache
    .mypy_cache
    .ruff_cache
    htmlcov
    .coverage
    .cache

# Console output
console_output_style = progress

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] [%(name)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] [%(name)s:%(lineno)d] %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Capture settings
capture = no

# Assertions
enable_assertion_pass_hook = true

# Doctest
doctest_optionflags = NORMALIZE_WHITESPACE ELLIPSIS

# Coverage paths
[coverage:paths]
source =
    frostbound/
    */site-packages/


# xfail behavior
xfail_strict = true

# Filter warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning
    # Ignore specific warnings from third-party libraries
    ignore::pytest.PytestUnraisableExceptionWarning

# Asyncio
asyncio_mode = auto

# Required plugins
required_plugins =
    pytest-cov>=4.0.0
    pytest-xdist>=3.0.0
    pytest-timeout>=2.0.0
    pytest-mock>=3.0.0

# Environment variables for tests
[pytest:env]
TESTING = true
LOG_LEVEL = DEBUG