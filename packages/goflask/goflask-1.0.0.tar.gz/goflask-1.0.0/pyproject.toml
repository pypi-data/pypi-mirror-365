[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-golang"]
build-backend = "setuptools.build_meta"

[project]
name = "goflask"
version = "1.0.0"
description = "High-performance Flask-compatible web framework powered by Go"
readme = "README.md"
requires-python = ">=3.7"
license = {text = "MIT"}
authors = [
    {name = "GoFlask Team", email = "team@goflask.org"}
]
maintainers = [
    {name = "GoFlask Team", email = "team@goflask.org"}
]
keywords = [
    "web", "framework", "flask", "go", "performance", 
    "api", "rest", "microservice", "wsgi", "asgi"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Go",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: Flask",
    "Environment :: Web Environment",
    "Typing :: Typed"
]
dependencies = [
    "typing-extensions>=4.0.0; python_version<'3.10'"
]

[project.optional-dependencies]
cli = ["click>=8.0.0"]
dev = ["werkzeug>=2.0.0"]
redis = ["redis>=4.0.0"]
logging = ["structlog>=22.0.0"]
fast-json = ["orjson>=3.8.0"]
all = [
    "click>=8.0.0",
    "werkzeug>=2.0.0", 
    "redis>=4.0.0",
    "structlog>=22.0.0",
    "orjson>=3.8.0"
]

[project.urls]
Homepage = "https://github.com/goflask/goflask"
Documentation = "https://goflask.readthedocs.io"
Repository = "https://github.com/goflask/goflask"
"Bug Tracker" = "https://github.com/goflask/goflask/issues"
Changelog = "https://github.com/goflask/goflask/blob/main/CHANGELOG.md"
Funding = "https://github.com/sponsors/goflask"

[project.scripts]
goflask = "goflask.cli:main"

[tool.setuptools]
packages = ["goflask"]
include-package-data = true

[tool.setuptools.package-data]
goflask = ["*.dll", "*.so", "*.dylib"]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["goflask"]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance benchmarks"
]

[tool.coverage.run]
source = ["goflask"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-instance-attributes",
    "too-many-locals",
    "too-many-branches",
    "too-many-statements"
]

[tool.pylint.format]
max-line-length = "88"
