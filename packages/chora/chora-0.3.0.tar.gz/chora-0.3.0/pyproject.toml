[project]
name = "chora"
description = "Deploy a mock server for use in testing."
dynamic = ["readme"]
version = "0.3.0"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "pbhandari", email = "pbhandari@pbhandari.ca"}
]
keywords = ["server", "mock", ]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed"
]
dependencies = []

[project.scripts]
chora = "chora:main"

[project.optional-dependencies]
dev = [
    "ruff",
    "mypy",
    "twine",
    "pip-tools",
    "pytest",
    "pytest-sugar",
    "pytest-cov",
]

[project.urls]
Homepage = "https://github.com/pbhandari/chora"
Releases = "https://github.com/pbhandari/chora/releases"
Issues = "https://github.com/pbhandari/chora/issues"

[tool.setuptools.dynamic]
readme = {file = ["README.md", ], content-type = "text/markdown"}

[tool.setuptools.package-data]
chora = ["py.typed"]

[tool.chora]
# Default configuration for chora server
root = "./example"
port = 8000
host = "localhost"

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.coverage.run]
source = ["src", "test"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.poetry]
package-mode = false
