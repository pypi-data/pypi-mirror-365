# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from ..core.serialization import FieldMetadata
from .service_execution import ServiceExecution


class ServiceExecutionTokenPrincipal(UniversalBaseModel):
    service_execution: typing_extensions.Annotated[
        typing.Optional[ServiceExecution], FieldMetadata(alias="serviceExecution")
    ] = None
    service_provider: typing_extensions.Annotated[
        typing.Optional["UserContext"], FieldMetadata(alias="serviceProvider")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .user_context import UserContext  # noqa: E402, F401, I001

update_forward_refs(ServiceExecutionTokenPrincipal)
