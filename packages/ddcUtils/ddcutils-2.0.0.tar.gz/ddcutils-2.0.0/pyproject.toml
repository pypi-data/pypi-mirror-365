[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ddcUtils"
version = "2.0.0"
description = "Few File Utilities and some OS Functions"
license = "MIT"
readme = "README.md"
authors = ["Daniel Costa <danieldcsta@gmail.com>"]
maintainers = ["Daniel Costa"]
repository = "https://github.com/ddc/ddcUtils"
homepage = "https://pypi.org/project/ddcUtils"
packages = [{include = "ddcUtils"}]
package-mode = true
keywords = [
    "python3", "python-3", "python",
    "tools", "utility", "utilities",
    "utils", "utility-library", "utils-library",
    "utilities-library"
]
classifiers = [
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: OS Independent",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Natural Language :: English",
]

[tool.poetry.build]
script = "build.py"
generate-setup-file = false

[tool.poetry.group.test]
optional = true

[tool.poetry.dependencies]
python = "^3.12"
requests = "^2.32.4"

[tool.poetry.group.test.dependencies]
poethepoet = "^0.36.0"
pytest = "^8.4.1"
pytest-cov = "^6.2.1"

[tool.poe.tasks]
_test = "python -m pytest -v --cov --cov-report=term --cov-report=xml --junitxml=junit.xml -o junit_family=legacy"
tests = ["_test"]
test = ["tests"]

[tool.coverage.run]
omit = [
    "build.py",
    "tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = false
skip_covered = false

[tool.black]
line-length = 120
skip-string-normalization = true
