stages:
  - dockerhub-build-publish
  - gitlab-docker-build-publish
#  - pypi-build-publish

variables:
  DOCKER_IMAGE_TAG: "26.1"
  PYTHON_IMAGE_TAG: "3.12"


dockerhub-build-publish-latest:
  stage: dockerhub-build-publish

  image:
    name: docker:${DOCKER_IMAGE_TAG}
    
  variables:
    IMAGE_TAG: index.docker.io/holado/python:latest

  script:
    - docker build -t ${IMAGE_TAG} .
    - echo "$DOCKERHUB_TOKEN" | docker login docker.io -u holado --password-stdin
    - docker push ${IMAGE_TAG}
  
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == "main"


dockerhub-build-publish-tag:
  stage: dockerhub-build-publish

  image:
    name: docker:${DOCKER_IMAGE_TAG}
    
  variables:
    IMAGE_TAG: index.docker.io/holado/python:$CI_COMMIT_TAG

  script:
    - docker build -t ${IMAGE_TAG} .
    - echo "$DOCKERHUB_TOKEN" | docker login docker.io -u holado --password-stdin
    - docker push ${IMAGE_TAG}
  
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG


gitlab-docker-build-publish:
  stage: gitlab-docker-build-publish

  image:
    name: docker:${DOCKER_IMAGE_TAG}

  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - docker build -t ${IMAGE_TAG} .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push ${IMAGE_TAG}
    

# pypi-build-publish:
#   stage: pypi-build-publish
# 
#   image:
#     name: python:${PYTHON_IMAGE_TAG}
# 
#   script:
#     - apt-get update -q -y
#     - apt-get install -y python-pip
#     - shopt -s expand_aliases
#     - alias python=python3
# #     - echo "$CI_COMMIT_TAG" > ./packaging/VERSION
#     - ./packaging/generate_distribution_archive.sh
#     - TWINE_PASSWORD=${PYPI_TOKEN} TWINE_USERNAME=__token__ ./packaging/publish_distribution_archive.sh
#     
#  rules:
#    - if: $CI_COMMIT_TAG =~ /\d+\.\d+\.\d+.*/


  