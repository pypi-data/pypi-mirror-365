# coding: utf-8

"""
    Fastify Template API

    API documentation using Swagger

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from keplar_api.models.api_invite_code_code_start_get302_response_project_config import ApiInviteCodeCodeStartGet302ResponseProjectConfig

class TestApiInviteCodeCodeStartGet302ResponseProjectConfig(unittest.TestCase):
    """ApiInviteCodeCodeStartGet302ResponseProjectConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiInviteCodeCodeStartGet302ResponseProjectConfig:
        """Test ApiInviteCodeCodeStartGet302ResponseProjectConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiInviteCodeCodeStartGet302ResponseProjectConfig`
        """
        model = ApiInviteCodeCodeStartGet302ResponseProjectConfig()
        if include_optional:
            return ApiInviteCodeCodeStartGet302ResponseProjectConfig(
                max_duration_seconds = 1.337,
                collect_email = True,
                screener_questions = [
                    keplar_api.models.project_screener_question_choose_one_public.ProjectScreenerQuestionChooseOnePublic(
                        type = 'chooseOne', 
                        question = '', 
                        options = [
                            ''
                            ], )
                    ]
            )
        else:
            return ApiInviteCodeCodeStartGet302ResponseProjectConfig(
                max_duration_seconds = 1.337,
        )
        """

    def testApiInviteCodeCodeStartGet302ResponseProjectConfig(self):
        """Test ApiInviteCodeCodeStartGet302ResponseProjectConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
