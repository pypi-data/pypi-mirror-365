import numpy as np

from hpc.indexing import get_indices2, get_pixels2, locate_values


class TestGetIndices2:
    def test_with_mask(
        self,
        arr: np.ndarray,
    ):
        no_data_value = arr[0, 0]
        indices = get_indices2(arr, [no_data_value])

        inds = [
            (1, 5),
            (1, 6),
            (1, 7),
            (2, 5),
            (2, 6),
            (2, 7),
            (3, 3),
            (3, 4),
            (3, 5),
            (3, 6),
            (3, 7),
            (3, 8),
            (3, 9),
            (4, 3),
            (4, 4),
            (4, 5),
            (4, 6),
            (4, 7),
            (4, 8),
            (4, 9),
            (5, 3),
            (5, 4),
            (5, 5),
            (5, 6),
            (5, 7),
            (5, 8),
            (5, 9),
            (6, 2),
            (6, 3),
            (6, 4),
            (6, 5),
            (6, 6),
            (6, 7),
            (6, 8),
            (6, 9),
            (7, 1),
            (7, 2),
            (7, 3),
            (7, 4),
            (7, 5),
            (7, 6),
            (7, 7),
            (7, 8),
            (7, 9),
            (8, 1),
            (8, 2),
            (8, 3),
            (8, 4),
            (8, 5),
            (8, 6),
            (8, 7),
            (8, 8),
            (8, 9),
            (8, 10),
            (8, 11),
            (8, 12),
            (9, 1),
            (9, 2),
            (9, 3),
            (9, 4),
            (9, 5),
            (9, 6),
            (9, 7),
            (9, 8),
            (9, 9),
            (9, 10),
            (9, 11),
            (9, 12),
            (10, 0),
            (10, 1),
            (10, 2),
            (10, 3),
            (10, 4),
            (10, 5),
            (10, 7),
            (10, 8),
            (10, 9),
            (10, 10),
            (10, 11),
            (10, 12),
            (10, 13),
            (11, 0),
            (11, 1),
            (11, 2),
            (11, 9),
            (11, 10),
            (11, 11),
            (12, 1),
            (12, 2),
        ]

        assert indices == inds

    def test_without_mask(
        self,
        arr: np.ndarray,
    ):
        indices = get_indices2(arr, mask=None)

        inds = [
            (0, 0),
            (0, 1),
            (0, 2),
            (0, 3),
            (0, 4),
            (0, 5),
            (0, 6),
            (0, 7),
            (0, 8),
            (0, 9),
            (0, 10),
            (0, 11),
            (0, 12),
            (0, 13),
            (1, 0),
            (1, 1),
            (1, 2),
            (1, 3),
            (1, 4),
            (1, 5),
            (1, 6),
            (1, 7),
            (1, 8),
            (1, 9),
            (1, 10),
            (1, 11),
            (1, 12),
            (1, 13),
            (2, 0),
            (2, 1),
            (2, 2),
            (2, 3),
            (2, 4),
            (2, 5),
            (2, 6),
            (2, 7),
            (2, 8),
            (2, 9),
            (2, 10),
            (2, 11),
            (2, 12),
            (2, 13),
            (3, 0),
            (3, 1),
            (3, 2),
            (3, 3),
            (3, 4),
            (3, 5),
            (3, 6),
            (3, 7),
            (3, 8),
            (3, 9),
            (3, 10),
            (3, 11),
            (3, 12),
            (3, 13),
            (4, 0),
            (4, 1),
            (4, 2),
            (4, 3),
            (4, 4),
            (4, 5),
            (4, 6),
            (4, 7),
            (4, 8),
            (4, 9),
            (4, 10),
            (4, 11),
            (4, 12),
            (4, 13),
            (5, 0),
            (5, 1),
            (5, 2),
            (5, 3),
            (5, 4),
            (5, 5),
            (5, 6),
            (5, 7),
            (5, 8),
            (5, 9),
            (5, 10),
            (5, 11),
            (5, 12),
            (5, 13),
            (6, 0),
            (6, 1),
            (6, 2),
            (6, 3),
            (6, 4),
            (6, 5),
            (6, 6),
            (6, 7),
            (6, 8),
            (6, 9),
            (6, 10),
            (6, 11),
            (6, 12),
            (6, 13),
            (7, 0),
            (7, 1),
            (7, 2),
            (7, 3),
            (7, 4),
            (7, 5),
            (7, 6),
            (7, 7),
            (7, 8),
            (7, 9),
            (7, 10),
            (7, 11),
            (7, 12),
            (7, 13),
            (8, 0),
            (8, 1),
            (8, 2),
            (8, 3),
            (8, 4),
            (8, 5),
            (8, 6),
            (8, 7),
            (8, 8),
            (8, 9),
            (8, 10),
            (8, 11),
            (8, 12),
            (8, 13),
            (9, 0),
            (9, 1),
            (9, 2),
            (9, 3),
            (9, 4),
            (9, 5),
            (9, 6),
            (9, 7),
            (9, 8),
            (9, 9),
            (9, 10),
            (9, 11),
            (9, 12),
            (9, 13),
            (10, 0),
            (10, 1),
            (10, 2),
            (10, 3),
            (10, 4),
            (10, 5),
            (10, 6),
            (10, 7),
            (10, 8),
            (10, 9),
            (10, 10),
            (10, 11),
            (10, 12),
            (10, 13),
            (11, 0),
            (11, 1),
            (11, 2),
            (11, 3),
            (11, 4),
            (11, 5),
            (11, 6),
            (11, 7),
            (11, 8),
            (11, 9),
            (11, 10),
            (11, 11),
            (11, 12),
            (11, 13),
            (12, 0),
            (12, 1),
            (12, 2),
            (12, 3),
            (12, 4),
            (12, 5),
            (12, 6),
            (12, 7),
            (12, 8),
            (12, 9),
            (12, 10),
            (12, 11),
            (12, 12),
            (12, 13),
        ]

        assert indices == inds


def test_locate_values():
    grid = np.array(
        [
            [434968, 518007],
            [438968, 514007],
            [442968, 510007],
            [446968, 506007],
            [450968, 502007],
            [454968, 498007],
            [458968, 494007],
            [462968, 490007],
            [466968, 486007],
            [470968, 482007],
            [474968, 478007],
            [478968, 474007],
            [482968, 470007],
            [486968, 466007],
        ]
    )

    points = np.array([[454795, 503143], [443847, 481850], [454044, 481189]])
    right_indices = np.array([[5, 4], [2, 9], [5, 9]])
    index = locate_values(points, grid[:, 0], grid[:, 1])
    assert np.array_equal(index, right_indices)


class TestGetPixels:
    def test_without_mask(
        self,
        arr: np.ndarray,
    ):
        values = get_pixels2(arr, mask=None)
        assert np.array_equal(values, arr.flatten())

    def test_with_mask(
        self,
        arr: np.ndarray,
        arr_vals: np.ndarray,
    ):
        mask = arr[0, 0]
        values = get_pixels2(arr, mask=[mask])
        assert np.array_equal(values, arr_vals)

    def test_3d(
        self,
        arr_3d: np.ndarray,
    ):
        values = get_pixels2(arr_3d)
        vals = np.array(values)
        vals = vals.transpose()
        arr_validate = arr_3d.reshape(
            (arr_3d.shape[0], arr_3d.shape[1] * arr_3d.shape[2])
        )
        np.array_equal(vals, arr_validate)
