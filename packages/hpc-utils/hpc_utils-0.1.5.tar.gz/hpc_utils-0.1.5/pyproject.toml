[project]
name = "hpc-utils"
version = "0.1.5"
description = "numpy utility package"
authors = [{name = "Mostafa Farrag", email = "moah.farag@gmail.com"}]
readme = {file = "README.md", content-type = "text/markdown"}
license = {text = "GNU General Public License v3"}
requires-python = ">= 3.11"
keywords = ["numpy", "computation"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: GIS",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
]


dependencies = [
    "numpy>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/MAfarrag/hpc"
Repository = "https://github.com/MAfarrag/hpc"
Documentation = "https://hpc-utils.readthedocs.io/"


[project.optional-dependencies]
dev = [
    "nbval >=0.11.0",
    "pre-commit >=3.7.1",
    "pre-commit-hooks >=4.6.0",
    "pytest >=8.2.2",
    "pytest-cov >= 5.0.0",
    "coverage",
    "build>=1.0.0",
    "twine>=5.0.0",
]
docs = [
    "mkdocs >=1.5.3",
    "mkdocs-material >=9.5.3",
    "mkdocstrings >=0.24.0",
    "mkdocstrings-python >=1.7.5",
    "mike >=2.1.3",
    "mkdocs-jupyter >=0.25.1",
    "mkdocs-autorefs  >=1.2",
    "mkdocs-macros-plugin  >=1.3.7",
    "mkdocs-table-reader-plugin  >=3.1.0",
    "mkdocs-mermaid2-plugin  >=1.2.1",
    "jupyter-contrib-nbextensions  >=0.7.0",
    "notebook<7.0",
    "jupyter"
]


[build-system]
requires = ["setuptools>=70.1.1", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64"]

[tool.pixi.pypi-dependencies]
hpc-utils = { path = ".", editable = true }

[tool.setuptools]

[tool.flake8]
ignore = ["E731", "E501", "E203", "F821", "E722", "B001", "D401", "B006", "D202", "W503"]
max-line-length = 88

[tool.black]
profile = "flake8"
line-length = 88
skip-string-normalization = true

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3


[tool.pixi.tasks]
test = { cmd = "pytest -vvv --cov=hpc --cov-report=xml", description = "Run test suite" }
build-dist = { cmd = "python -m build", description = "Build sdist and wheel for PyPI" }
publish-pypi = { cmd = "twine upload --non-interactive --repository pypi dist/*", depends-on = ["build-dist"], description = "Build and upload package to PyPI" }


[tool.pixi.environments]
default = { features = ["dev"], solve-group = "default" }
docs = { features = ["docs"], solve-group = "default" }
py311 = { features = ["py311", "dev"], solve-group = "py311" }
py312 = { features = ["py312", "dev"], solve-group = "py312" }
py313 = { features = ["py313", "dev"], solve-group = "py313" }

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]


[tool.pixi.feature.py311.dependencies]
python = "3.11.*"
[tool.pixi.feature.py312.dependencies]
python = "3.12.*"
[tool.pixi.feature.py313.dependencies]
python = "3.13.*"
