[build-system]
requires = ["hatchling>=1.24"]
build-backend = "hatchling.build"

[project]
name = "napari-chatgpt"
description = "A napari plugin that brings an LLM-powered agent (Omega) to interactive image analysis."
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Loic A. Royer", email = "royerloic@gmail.com" }]
requires-python = ">=3.9"
dynamic = ["version"]

# --- runtime deps (unchanged) ---
dependencies = [
    "litemind[documents,rag,tables]>=2025.07.28.1",
    "numpy",
    "magicgui",
    "scikit-image",
    "qtpy",
    "QtAwesome",
    "fastapi",
    "uvicorn",
    "websockets",
    "lxml",
    "matplotlib",
    "xarray",
    "arbol",
    "ddgs>=9.4.3",
    "ome-zarr",
    "cryptography",
    "tabulate",
    "numba",
    "imageio[ffmpeg,pyav]",
    "notebook",
    "nbformat",
    "jedi",
    "httpx",
    "lxml_html_clean",
    "black"
]

[project.optional-dependencies]
testing = ["tox", "pytest", "pytest-cov", "pytest-qt", "napari", "pyqt5"]

[project.entry-points]
"napari.manifest" = { "napari-chatgpt" = "napari_chatgpt:napari.yaml" }

[project.urls]
Homepage = "https://github.com/royerlab/napari-chatgpt"
Issues = "https://github.com/royerlab/napari-chatgpt/issues"

# -------------------------------------------------------------------------
# Hatch specifics
# -------------------------------------------------------------------------
[tool.hatch.version]
path = "src/napari_chatgpt/__init__.py"

# Ship code from the src/ layout
[tool.hatch.build]
sources = ["src"]

# Control *what* is included in each artefact
[tool.hatch.build.targets.sdist]
ignore-vcs = true                     # ignore .gitignore patterns :contentReference[oaicite:0]{index=0}
exclude = [
    # developer & CI auxiliaries
    ".github/**",
    ".napari-hub/**",
    "recipe/**",
    # generated or heavy artefacts
    "dist/**",
    "**/*.egg-info",
    # documentation / non-runtime assets
    "art/**",
    "manuscript/**",
    # tests and local junk
    "**/tests/**",
    "**/.DS_Store",
    "sandbox/**",
    # plugin-internal resources that shouldnâ€™t be in wheels
    "src/napari_chatgpt/resources/**",
]

[tool.hatch.build.targets.wheel]
packages = ["src/napari_chatgpt"]     # wheel only contains code; others auto-excluded :contentReference[oaicite:1]{index=1}

[tool.hatch.envs.hatch-test]
extra-dependencies = ["tox", "pytest", "pytest-cov", "pytest-qt", "napari", "pyqt5", "black"]
default-args = ["src/"]
