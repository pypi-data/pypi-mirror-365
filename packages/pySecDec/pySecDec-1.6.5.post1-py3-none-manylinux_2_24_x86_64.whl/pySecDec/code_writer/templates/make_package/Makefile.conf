# Defines variables needed to build the library.
# ----------------------------------------------

# enables debugging flags
# export DEBUG = 1

# set name of the integral
NAME = %(name)s

# common .PHONY variables
.PHONY : static dynamic pylink source disteval clean very-clean

# disable builtin rules
.SUFFIXES:

# set global default goal
.DEFAULT_GOAL = pylink

# define file-aliasing .PHONY targets
static : lib$(NAME).a
dynamic : lib$(NAME).so
pylink : $(NAME)_pylink.so

# get path to the top level directory
TOPDIR = $(dir $(abspath $(lastword $(MAKEFILE_LIST))))

# python executable
PYTHON ?= %(python_executable)s

# pySecDecContrib directory
SECDEC_CONTRIB = %(contrib_dirname)s

# number of threads when using tform
FORMTHREADS ?= %(form_threads)i

# FORM executable
ifeq "${FORMTHREADS}" "1"
FORM ?= "$(SECDEC_CONTRIB)/bin/form"
else
FORM ?= "$(SECDEC_CONTRIB)/bin/tform"
endif

# FORM code optimization level
FORMOPT ?= %(form_optimization_level)i

# call to FORM
FORMCALL = $(FORM) -M -w$(FORMTHREADS) -D optimizationLevel=$(FORMOPT) -p '$(SECDEC_CONTRIB)/lib'

# C++ compiler
CXX ?= g++

# CUDA compiler
NVCC ?= nvcc

# Maintain old behaviour of SECDEC_WITH_CUDA if SECDEC_WITH_CUDA
# is defined and SECDEC_WITH_CUDA_FLAGS is not defined
ifdef SECDEC_WITH_CUDA
SECDEC_WITH_CUDA_FLAGS ?= -arch=$(SECDEC_WITH_CUDA)
endif

# Compiler and linker flags
ifdef SECDEC_WITH_CUDA_FLAGS
XCC = $(NVCC)
XCCFLAGS = -x cu -DSECDEC_WITH_CUDA
XLDFLAGS =
else
XCC = $(CXX)
XCCFLAGS =
XLDFLAGS = -pthread
endif
XCCFLAGS += -std=c++17 -I. -I$(TOPDIR) -I"$(SECDEC_CONTRIB)/include" -DSECDEC_CONTRIB=\"$(SECDEC_CONTRIB)\"
XLDFLAGS += -L$(TOPDIR) -L"$(SECDEC_CONTRIB)/lib" -lgsl -lgslcblas -lcuba -lgmp -lm

# Optimization flags
ifeq ($(DEBUG),1)
ifdef SECDEC_WITH_CUDA_FLAGS
XCCFLAGS += -Xcompiler "-O0 -ggdb3 -fsanitize=address -fno-omit-frame-pointer"
else
XCCFLAGS += -O0 -ggdb3 -fsanitize=address -fno-omit-frame-pointer
endif
XLDFLAGS += -g -fsanitize=address
else
XCCFLAGS += -O2
endif

# User-supplied flags
ifdef SECDEC_WITH_CUDA_FLAGS
XCCFLAGS += $(SECDEC_WITH_CUDA_FLAGS) $(NVCCFLAGS)
XLDFLAGS += $(SECDEC_WITH_CUDA_FLAGS) $(NVCCFLAGS)
else
XCCFLAGS += $(CXXFLAGS)
XLDFLAGS += $(LDFLAGS)
endif
