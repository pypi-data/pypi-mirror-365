[project]
name = "neuronbridge-python"
version = "3.3.0"
description = "Python API for NeuronBridge"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Konrad Rokicki", email = "rokickik@janelia.hhmi.org"}
]
urls = {Homepage = "https://github.com/JaneliaSciComp/neuronbridge-python/"}
keywords = ["neuroscience", "neuron", "similarity", "search", "api"]
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "pydantic~=2.9.1",
    "python-rapidjson~=1.20",
    "ray[default]~=2.39.0",
    "memray",
    "tqdm",
]

[project.optional-dependencies]
notebooks = [
    "jupyter",
    "ipython-sql",
    "pandas",
    "pillow",
    "blend-modes"
]
test = [
    "pytest~=7.1.3",
    "coverage"
]
release = [
    "build",
    "twine"
]

[tool.setuptools.packages.find]
exclude = ["docker"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "osx-64", "linux-64"]

[tool.pixi.tasks]
dev-install = "pip install -e ."

[tool.pixi.feature.test.tasks]
test-install = "pip install -e ."
test = { cmd = "pytest tests", depends-on = ["test-install"] }

[tool.pixi.feature.release.tasks]
pypi-build = "python -m build"
pypi-upload = "twine upload dist/*"

[tool.pixi.environments]
default = {features = [], solve-group = "default"}
test = {features = ["test"], solve-group = "default"}
release = {features = ["release"], solve-group = "default"}
notebooks = {features = ["notebooks"], solve-group = "default"}

[tool.pixi.dependencies]
python = "3.9.*"
pip = "*"
ipykernel = "*"
