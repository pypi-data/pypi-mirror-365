[tool.poetry]
name = "valguard"
version = "1.0.1"
description = "valguard: A lightweight framework for defining and validating values in data pipelines."
authors = ["Jonathan Manton <j.manton@ieee.org>"]
readme = "README.md"

license = "Apache-2.0"
homepage = "https://github.com/jhmanton/valguard"
repository = "https://github.com/jhmanton/valguard"
keywords = ["data", "validation", "values", "constraints", "pipelines"]

classifiers = [
  "License :: OSI Approved :: Apache Software License",
]

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
sphinx = "^8.2.3"
myst-parser = "^4.0.1"
ruff = "^0.12.2"
black = "^25.1.0"
mypy = "^1.16.1"
sphinx-autodoc-typehints = "^3.2.0"
pydata-sphinx-theme = "^0.16.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py312"]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D102","D103","D105","D107","PLR2004","TD002","TD003","FIX002"]
exclude = ["docs/*"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "S101", "ANN201", "SLF001", "FBT001"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.12"
strict = true
files = ["valguard", "tests"]
exclude = ["^docs/"]

[tool.pytest.ini_options]
testpaths = ["tests"]
