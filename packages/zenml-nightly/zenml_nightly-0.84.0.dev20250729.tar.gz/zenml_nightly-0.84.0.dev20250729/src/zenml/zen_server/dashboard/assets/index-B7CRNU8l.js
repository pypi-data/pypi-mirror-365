import{i as y,q as i}from"./@tanstack-C0SeHZng.js";import{y as l,E as c,X as p,v as u,Y as f,F as h}from"./index-BacoJBEQ.js";async function o(t){const a=l(c.flavors.all)+(t?`?${p(t)}`:""),e=await u(a,{method:"GET",headers:{"Content-Type":"application/json"}});if(e.status===404&&f(),!e.ok){const s=await e.json().then(r=>Array.isArray(r.detail)?r.detail[1]:r.detail).catch(()=>"Error while fetching flavors");throw new h({status:e.status,statusText:e.statusText,message:s})}return e.json()}async function v(t){const a=l(c.flavors.detail(t)),e=await u(a,{method:"GET",headers:{"Content-Type":"application/json"}});if(e.status===404&&f(),!e.ok){const s=await e.json().then(r=>Array.isArray(r.detail)?r.detail[1]:r.detail).catch(()=>`Error while fetching flavor ${t}`);throw new h({status:e.status,statusText:e.statusText,message:s})}return e.json()}const n={all:["flavors"],flavorList:t=>i({queryKey:[...n.all,t],queryFn:async()=>o(t)}),flavorDetail:t=>i({queryKey:[...n.all,t],queryFn:async()=>v(t)}),flavorListInfinite:t=>y({queryKey:[...n.all,t,"infinite"],queryFn:({pageParam:a})=>o({...t,page:a}),getNextPageParam:a=>a.index<a.total_pages?a.index+1:null,initialPageParam:1})};export{n as f};
