[tool.poetry]
name = "fabiplus"
version = "1.0.0"
description = "FABI+ Framework - Production-ready, modular, extensible API-only Python framework"
authors = ["FABI+ Development Team <team@fabiplus.dev>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/Helevon-Technologies-LTD/fabiplus"
repository = "https://github.com/Helevon-Technologies-LTD/fabiplus"
documentation = "https://fabiplus.helevon.org"
keywords = [
    "fabiplus",
    "fabiplus-framework",
    "fastapi",
    "django",
    "framework",
    "api",
    "web",
    "backend",
    "python",
    "cli",
    "admin",
    "orm",
    "django-like",
    "sqlmodel",
    "sqlalchemy",
    "helevon",
    "helevon-technologies-ltd",
    "helevon-framework",
    "fabiplus-framework-helevon-technologies-ltd"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Framework :: FastAPI",
    "Environment :: Web Environment",
]
packages = [{include = "fabiplus"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = ">=0.104.0"
uvicorn = {extras = ["standard"], version = ">=0.24.0"}
pydantic = {extras = ["email"], version = ">=2.5.0"}
pydantic-settings = ">=2.1.0"
sqlalchemy = ">=2.0.0"
alembic = ">=1.13.0"
python-jose = {extras = ["cryptography"], version = ">=3.3.0"}
passlib = {extras = ["bcrypt"], version = ">=1.7.4"}
python-multipart = ">=0.0.6"
bcrypt = ">=4.1.0"
orjson = ">=3.9.0"
jinja2 = ">=3.1.2"
aiofiles = ">=23.2.1"
typer = ">=0.9.0,<0.12.0"
rich = ">=13.0.0"
python-dotenv = ">=1.0.0"
sqlmodel = ">=0.0.14"
# Media system dependencies
pillow = ">=10.0.0"
python-magic = ">=0.4.27"
pypdf = ">=4.0.0"
# Optional dependencies for extras
psycopg2-binary = {version = ">=2.9.0", optional = true}
pymysql = {version = ">=1.1.0", optional = true}
redis = {version = ">=5.0.0", optional = true}
hiredis = {version = ">=2.2.0", optional = true}
sentry-sdk = {version = ">=1.38.0", optional = true}
tortoise-orm = {version = ">=0.20.0", optional = true}
aerich = {version = ">=0.7.0", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.8.0"
httpx = "^0.25.0"
black = "^24.3.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
flake8-bugbear = "^23.12.0"
flake8-docstrings = "^1.7.0"
mypy = "^1.16.0"
bandit = "^1.8.0"
safety = "^2.3.0"
pre-commit = "^3.8.0"
mkdocs = "^1.6.0"
mkdocs-material = "^9.6.0"
pandas-stubs = "^2.3.0.250703"
types-reportlab = "^4.4.1.20250602"

[tool.poetry.extras]
postgresql = ["psycopg2-binary"]
mysql = ["pymysql"]
redis = ["redis", "hiredis"]
monitoring = ["sentry-sdk"]
tortoise = ["tortoise-orm", "aerich"]

[tool.poetry.scripts]
fabiplus = "fabiplus.cli.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
known_first_party = ["fabiplus"]
multi_line_output = 3
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Strategic exclusions for production readiness focus
exclude = [
    "fabiplus/tests/.*",
    "fabiplus/cli/commands/app.py",
    "fabiplus/cli/commands/db.py",
    "fabiplus/cli/commands/server.py",
    "fabiplus/cli/commands/user.py",
    "fabiplus/core/permissions/.*",
    "fabiplus/core/media/.*",
    "fabiplus/core/user_model.py",
    "fabiplus/admin/ui.py",
    "fabiplus/api/auto.py",
]

[[tool.mypy.overrides]]
module = [
    "uvicorn.*",
    "alembic.*",
    "sqlalchemy.*",
    "passlib.*",
    "jose.*",
    "typer.*",
    "rich.*",
    "matplotlib.*",
    "IPython.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["fabiplus/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["fabiplus"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]
