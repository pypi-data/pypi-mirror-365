"""
This file contains the data of the Coolflow NTP antifreeze from Hydratech.
Visit https://www.hydratech.co.uk/Coolflow-NTP for more information.
"""

import numpy as np

from GHEtool.VariableClasses.FluidData.CommercialFluids._CommercialFluids import _CommercialFluids


class CoolflowNTP(_CommercialFluids):

    def __init__(self, volume_ratio: float):
        super().__init__(volume_ratio)

        self._temperatures = np.arange(80, -45, -5)
        self._volume_ratio_array = np.array([25, 33, 39, 44, 48, 53, 60]) / 100

        self._freezing_array = np.array([-10, -15, -20, -25, -30, -35, -40])
        self._k_f_array = np.array([
            [0.519, 0.467, 0.431, 0.403, 0.381, 0.355, 0.321],  # 80°C
            [0.516, 0.465, 0.430, 0.402, 0.381, 0.356, 0.323],  # 75°C
            [0.512, 0.463, 0.429, 0.402, 0.381, 0.357, 0.326],  # 70°C
            [0.509, 0.462, 0.428, 0.402, 0.381, 0.358, 0.328],  # 65°C
            [0.505, 0.460, 0.427, 0.402, 0.382, 0.359, 0.330],  # 60°C
            [0.502, 0.459, 0.427, 0.402, 0.382, 0.360, 0.332],  # 55°C
            [0.499, 0.457, 0.426, 0.402, 0.383, 0.361, 0.335],  # 50°C
            [0.495, 0.455, 0.425, 0.402, 0.384, 0.363, 0.337],  # 45°C
            [0.492, 0.454, 0.425, 0.402, 0.385, 0.364, 0.339],  # 40°C
            [0.489, 0.452, 0.424, 0.402, 0.386, 0.366, 0.341],  # 35°C
            [0.486, 0.451, 0.424, 0.403, 0.387, 0.367, 0.344],  # 30°C
            [0.483, 0.449, 0.423, 0.403, 0.387, 0.369, 0.346],  # 25°C
            [0.480, 0.448, 0.423, 0.403, 0.388, 0.371, 0.348],  # 20°C
            [0.477, 0.446, 0.422, 0.404, 0.389, 0.372, 0.351],  # 15°C
            [0.475, 0.444, 0.422, 0.404, 0.390, 0.374, 0.353],  # 10°C
            [0.472, 0.443, 0.421, 0.404, 0.391, 0.375, 0.356],  # 5°C
            [0.470, 0.441, 0.420, 0.404, 0.392, 0.377, 0.358],  # 0°C
            [0.467, 0.439, 0.420, 0.404, 0.392, 0.378, 0.361],  # -5°C
            [0.465, 0.437, 0.419, 0.404, 0.393, 0.379, 0.363],  # -10°C
            [np.nan, 0.435, 0.418, 0.404, 0.393, 0.381, 0.366],  # -15°C
            [np.nan, np.nan, 0.416, 0.404, 0.394, 0.382, 0.369],  # -20°C
            [np.nan, np.nan, np.nan, 0.403, 0.394, 0.382, 0.371],  # -25°C
            [np.nan, np.nan, np.nan, np.nan, 0.394, 0.383, 0.374],  # -30°C
            [np.nan, np.nan, np.nan, np.nan, np.nan, 0.384, 0.377],  # -35°C
            [np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, 0.380],  # -40°C
        ])  # W/(mK)
        self._rho_array = np.array([
            [986, 994, 998, 1001, 1003, 1006, 1011],  # 80°C
            [990, 997, 1001, 1005, 1007, 1010, 1015],  # 75°C
            [993, 1001, 1005, 1009, 1011, 1014, 1019],  # 70°C
            [997, 1005, 1009, 1012, 1015, 1018, 1023],  # 65°C
            [1000, 1008, 1012, 1016, 1019, 1022, 1026],  # 60°C
            [1003, 1011, 1016, 1020, 1022, 1026, 1030],  # 55°C
            [1006, 1015, 1019, 1023, 1026, 1029, 1034],  # 50°C
            [1009, 1018, 1023, 1027, 1030, 1033, 1038],  # 45°C
            [1012, 1021, 1026, 1030, 1033, 1037, 1042],  # 40°C
            [1015, 1024, 1029, 1033, 1037, 1040, 1046],  # 35°C
            [1017, 1027, 1032, 1037, 1040, 1044, 1050],  # 30°C
            [1020, 1030, 1035, 1040, 1043, 1047, 1054],  # 25°C
            [1022, 1032, 1038, 1043, 1046, 1051, 1058],  # 20°C
            [1024, 1035, 1041, 1046, 1049, 1054, 1061],  # 15°C
            [1026, 1037, 1043, 1049, 1052, 1057, 1064],  # 10°C
            [1027, 1039, 1046, 1051, 1055, 1060, 1068],  # 5°C
            [1029, 1041, 1048, 1054, 1058, 1062, 1071],  # 0°C
            [1030, 1043, 1050, 1056, 1060, 1065, 1073],  # -5°C
            [1031, 1045, 1052, 1058, 1062, 1068, 1076],  # -10°C
            [np.nan, 1046, 1054, 1060, 1064, 1070, 1078],  # -15°C
            [np.nan, np.nan, 1055, 1061, 1066, 1072, 1080],  # -20°C
            [np.nan, np.nan, np.nan, 1063, 1068, 1074, 1082],  # -25°C
            [np.nan, np.nan, np.nan, np.nan, 1069, 1075, 1083],  # -30°C
            [np.nan, np.nan, np.nan, np.nan, np.nan, 1076, 1084],  # -35°C
            [np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, 1085],  # -40°C
        ])  # kg/m³

        self._mu_array = np.array([
            [0.65, 0.85, 0.93, 1.00, 1.07, 1.15, 1.36],  # 80°C
            [0.68, 0.94, 1.04, 1.13, 1.21, 1.31, 1.56],  # 75°C
            [0.72, 1.03, 1.15, 1.27, 1.37, 1.50, 1.80],  # 70°C
            [0.77, 1.12, 1.28, 1.42, 1.55, 1.72, 2.10],  # 65°C
            [0.83, 1.23, 1.42, 1.60, 1.76, 1.97, 2.41],  # 60°C
            [0.90, 1.35, 1.58, 1.81, 2.01, 2.27, 2.79],  # 55°C
            [1.01, 1.50, 1.78, 2.07, 2.32, 2.66, 3.32],  # 50°C
            [1.14, 1.68, 2.03, 2.39, 2.71, 3.14, 3.94],  # 45°C
            [1.31, 1.91, 2.36, 2.80, 3.21, 3.77, 4.87],  # 40°C
            [1.54, 2.20, 2.75, 3.32, 3.84, 4.56, 5.23],  # 35°C
            [1.82, 2.58, 3.26, 3.98, 4.65, 5.58, 6.03],  # 30°C
            [2.18, 3.05, 3.91, 4.81, 5.67, 6.85, 7.74],  # 25°C
            [2.62, 3.65, 4.73, 5.88, 6.96, 8.47, 9.74],  # 20°C
            [3.17, 4.43, 5.79, 7.24, 8.62, 10.56, 13.06],  # 15°C
            [3.84, 5.46, 7.19, 9.05, 10.82, 13.34, 17.75],  # 10°C
            [4.66, 6.84, 9.09, 11.51, 13.84, 17.17, 24.31],  # 5°C
            [5.63, 8.76, 11.73, 14.99, 18.14, 22.68, 33.56],  # 0°C
            [6.78, 11.47, 15.53, 20.03, 24.46, 30.96, 46.77],  # -5°C
            [8.11, 15.38, 21.09, 27.56, 34.07, 43.87, 65.89],  # -10°C
            [np.nan, 21.08, 29.38, 39.05, 49.08, 64.80, 93.70],  # -15°C
            [np.nan, np.nan, 41.82, 56.81, 73.01, 99.87, 134.07],  # -20°C
            [np.nan, np.nan, np.nan, 84.26, 111.41, 159.99, 192.23],  # -25°C
            [np.nan, np.nan, np.nan, np.nan, 171.56, 261.75, 275.05],  # -30°C
            [np.nan, np.nan, np.nan, np.nan, np.nan, 415.79, 391.37],  # -35°C
            [np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, 552.34],  # -40°C
        ]) * 1e-6 * self._rho_array  # convert from kinematic viscosity in mm²/s to dynamic viscosity in Pa.s

        self._cp_array = np.array([
            [4.05, 3.97, 3.91, 3.85, 3.79, 3.72, 3.60],  # 80°C
            [4.04, 3.96, 3.89, 3.83, 3.77, 3.70, 3.58],  # 75°C
            [4.03, 3.95, 3.88, 3.81, 3.76, 3.68, 3.56],  # 70°C
            [4.02, 3.94, 3.86, 3.80, 3.74, 3.66, 3.54],  # 65°C
            [4.01, 3.92, 3.85, 3.78, 3.72, 3.64, 3.52],  # 60°C
            [4.00, 3.91, 3.84, 3.77, 3.71, 3.62, 3.50],  # 55°C
            [3.99, 3.90, 3.82, 3.75, 3.69, 3.61, 3.48],  # 50°C
            [3.98, 3.89, 3.81, 3.74, 3.67, 3.59, 3.46],  # 45°C
            [3.97, 3.88, 3.80, 3.72, 3.65, 3.57, 3.44],  # 40°C
            [3.96, 3.87, 3.78, 3.70, 3.64, 3.55, 3.42],  # 35°C
            [3.96, 3.86, 3.77, 3.69, 3.62, 3.53, 3.40],  # 30°C
            [3.95, 3.85, 3.76, 3.67, 3.60, 3.51, 3.38],  # 25°C
            [3.94, 3.84, 3.74, 3.66, 3.59, 3.49, 3.36],  # 20°C
            [3.93, 3.83, 3.73, 3.64, 3.57, 3.47, 3.34],  # 15°C
            [3.93, 3.82, 3.72, 3.63, 3.55, 3.45, 3.32],  # 10°C
            [3.92, 3.81, 3.71, 3.62, 3.54, 3.44, 3.30],  # 5°C
            [3.91, 3.80, 3.69, 3.60, 3.52, 3.42, 3.28],  # 0°C
            [3.91, 3.79, 3.68, 3.59, 3.50, 3.40, 3.25],  # -5°C
            [3.90, 3.78, 3.67, 3.57, 3.49, 3.38, 3.23],  # -10°C
            [np.nan, 3.77, 3.66, 3.56, 3.47, 3.36, 3.21],  # -15°C
            [np.nan, np.nan, 3.64, 3.54, 3.45, 3.34, 3.19],  # -20°C
            [np.nan, np.nan, np.nan, 3.52, 3.43, 3.32, 3.16],  # -25°C
            [np.nan, np.nan, np.nan, np.nan, 3.42, 3.30, 3.14],  # -30°C
            [np.nan, np.nan, np.nan, np.nan, np.nan, 3.28, 3.11],  # -35°C
            [np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, 3.09],  # -40°C
        ]) * 1000  # J/(kgK)

        if self.check_volume_ratio(volume_ratio):
            self._volume_ratio = volume_ratio

        # update nan values
        self._fill_nan_values_vertically()
