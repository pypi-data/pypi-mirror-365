Metadata-Version: 2.4
Name: swe-ai-agent
Version: 1.0.82
Summary: SWE Agent - Headless Agentic IDE with comprehensive tool support
Home-page: https://github.com/harishsg993010/swe-ai-agent
Author: Harish SG
Author-email: Harish SG <harishsg993010@gmail.com>
Project-URL: Homepage, https://github.com/harishsg993010/SWE-Agent
Project-URL: Documentation, https://github.com/harishsg993010/SWE-Agent#readme
Project-URL: Repository, https://github.com/harishsg993010/SWE-Agent
Project-URL: Issues, https://github.com/harishsg993010/SWE-Agent/issues
Keywords: ai,agent,ide,development,automation,langchain,claude
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: anthropic>=0.57.1
Requires-Dist: langchain-anthropic>=0.3.17
Requires-Dist: langchain>=0.3.26
Requires-Dist: langchain-core>=0.3.68
Requires-Dist: langgraph>=0.5.3
Requires-Dist: rich>=14.0.0
Requires-Dist: click>=8.0.0
Requires-Dist: psutil>=5.8.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: typing-extensions>=4.0.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: requests>=2.28.0
Requires-Dist: aiohttp>=3.8.0
Requires-Dist: twine>=6.1.0
Requires-Dist: pygame>=2.6.1
Requires-Dist: setuptools>=80.9.0
Requires-Dist: detect-secrets>=1.5.0
Requires-Dist: langchain-mcp-adapters>=0.1.0
Requires-Dist: trafilatura>=1.6.0
Requires-Dist: beautifulsoup4>=4.12.0
Requires-Dist: tavily-python>=0.7.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: black>=22.0.0; extra == "dev"
Requires-Dist: flake8>=4.0.0; extra == "dev"
Requires-Dist: mypy>=0.950; extra == "dev"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# SWE Agent - AI Coding Assistant with Built-in Browser

An AI Coding Agent that helps you write, analyze, and improve code in any programming language. Features its own integrated web browser powered by [Julia Browser](https://pypi.org/project/julia-browser/) for complete web interaction capabilities.

## Why Use SWE Agent?

**Save time writing code** - Tell it what you want to build, and it writes the code for you. No more staring at blank files or wrestling with syntax.

**Fix bugs faster** - It reads your code, finds problems, and suggests fixes. Like having an experienced developer review your work instantly.

**Learn while you code** - Watch how it solves problems step by step. You'll pick up new techniques and best practices naturally.

**Work in any language** - Python, JavaScript, Go, Rust, C++ - it understands them all. Switch between projects without missing a beat.

**Stay secure** - Automatically scans your code for security issues before you deploy. Catch vulnerabilities early.

**Browse the web** - Built-in browser can navigate websites, click buttons, fill forms, and extract data automatically.

## Installation

```bash
pip install swe-ai-agent
```

## Getting Started

Please add ANTHROPIC_API_KEY in environment variable for using this:

```bash
export ANTHROPIC_API_KEY="your-api-key-here"

# Chat with your AI coding partner
swe-agent --pair

# Run one-time tasks
swe-agent --task "create a todo app with React"

# Work interactively on multiple tasks
swe-agent --interactive

# Use the modern terminal interface
swe-agent --warp

# Enable advanced features with external services
swe-agent --enable-mcp --interactive
```

## New: Visual Diff Display ‚ú®

See exactly what changes SWE Agent makes to your code with beautiful diff visualization:

```bash
# Enable visual diffs (default: enabled)
swe-agent --task "refactor my code" --show-diffs

# Debug mode for detailed operation logs
swe-agent --task "fix the bug" --debug-mode
```

**Visual Features:**
- üü¢ **Green borders** for file creation
- üîµ **Blue borders** for file edits  
- üü° **Yellow borders** for content replacement
- üî¥ **Red borders** for file rewrites
- **Line-by-line diffs** with syntax highlighting
- **Before/after comparisons** for all file operations

## What It Can Do

### Write Code for You
- Build complete applications from a simple description
- Generate functions and classes that actually work
- Create tests for your existing code
- Write documentation that makes sense

### Improve Existing Code
- Find and fix bugs before they cause problems
- Refactor messy code into clean, readable functions
- Add features to existing projects without breaking things
- Optimize performance bottlenecks

### Keep You Secure
- Scan for vulnerabilities in real-time
- Suggest security fixes with clear explanations
- Check dependencies for known issues
- Follow security best practices automatically

### Speed Up Your Workflow
- Search through large codebases instantly
- Navigate complex projects with ease
- Track changes and see what was modified
- Integrate with git seamlessly

### Built-in Web Browser
- Navigate websites and click buttons automatically
- Fill forms and submit data programmatically  
- Extract information from web pages
- Test web applications interactively
- Powered by [Julia Browser](https://pypi.org/project/julia-browser/) with 13 browser tools

## How It Works

You have four ways to work with SWE Agent:

**Pair Programming (--pair)** - Like having a coding buddy next to you. Chat naturally about what you want to build, and watch as it writes code, explains decisions, and helps you learn.

**Quick Tasks (--task)** - Perfect for one-off jobs. "Create a REST API for user management" or "Add authentication to my app" - just describe what you need.

**Interactive Sessions (--interactive)** - Work on multiple tasks in one session. Great for exploring ideas, iterating on features, and building complex projects step by step.

**Terminal Interface (--warp)** - A modern coding environment that feels like using advanced developer tools. See your project status, git changes, and AI suggestions all in one place.

## Advanced Features

### MCP Integration (--enable-mcp)
Enable Model Context Protocol for enhanced capabilities:

- Advanced security scanning with Semgrep integration
- AI-powered documentation search with DeepWiki
- Extended tool ecosystem for specialized tasks
- Real-time vulnerability detection and remediation

## Real Benefits

**For Beginners**: Learn by watching an expert work. See how real applications are built, from planning to deployment.

**For Experienced Developers**: Focus on architecture and business logic while the AI handles boilerplate, documentation, and testing.

**For Teams**: Maintain consistent code quality and catch issues before they reach production.

**For Everyone**: Spend less time debugging and more time building features that matter.

## Languages Supported

Works with any programming language - Python, JavaScript, TypeScript, Go, Rust, C++, Java, C#, PHP, Ruby, and more. It adapts to your project's style and conventions automatically.

## Safety Features

- **Secure by default** - Scans every change for security issues
- **Ask before running** - Requests permission for potentially dangerous operations
- **Complete audit trail** - Logs everything for transparency
- **Sandboxed execution** - Runs code safely without affecting your system

## Getting Help

```bash
# See all options
swe-agent --help

# Check if everything is working
swe-agent --status
```

Start with `swe-agent --pair` for the best experience. It's like having a senior developer helping you code.

## License

Apache 2.0

Stop fighting with code. Start building what you actually want to create.

Built with ‚ù§Ô∏è by Harish Santhanalakshmi Ganesan and his Coding AI agents

**Browser Integration:** Powered by [Julia Browser](https://pypi.org/project/julia-browser/) - 43 total tools (30 coding + 13 browser)

**Thanks and Credits:** Terminal interfaces inspired by Aider and Warp
