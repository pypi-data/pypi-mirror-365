{
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(xxd:*)",
      "Bash(sed:*)",
      "Bash(python3:*)",
      "Bash(uv run:*)",
      "Bash(uv pip install:*)",
      "Bash(python test:*)",
      "Bash(python:*)",
      "Bash(pip install:*)",
      "Bash(mkdir:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(rg:*)",
      "Bash(grep:*)",
      "Bash(rm:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(source:*)",
      "Bash(pip search:*)",
      "Bash(pip show:*)",
      "Bash(timeout:*)",
      "Bash(twine check:*)",
      "Bash(grep -n \"def get_entity_relationships_optimized\" src/kg_engine/storage/graph_db.py)",
      "Bash(grep -n \"_record_to_edge_v2\" src/kg_engine/storage/graph_db.py)",
      "Bash(touch:*)",
      "WebFetch(domain:github.com)",
      "Bash(docker build:*)",
      "Bash(git add:*)",
      "Bash(PYTHONPATH=src python -c \"from kg_engine.llm.llm_client_factory import LLMClientFactory; print('Import successful')\")",
      "Bash(PYTHONPATH=src python test_neo4j_fix.py)",
      "Bash(PYTHONPATH=src python -c \"\nimport sys\nsys.path.insert(0, 'src')\n# Test imports\ntry:\n    from examples.example_bible_process import BibleProcessor\n    print('✅ BibleProcessor class imported successfully')\n    \n    # Test class structure\n    processor_methods = [method for method in dir(BibleProcessor) if not method.startswith('_')]\n    print(f'✅ BibleProcessor methods: {processor_methods}')\n    \n    print('✅ Script structure is correct')\nexcept ImportError as e:\n    print(f'❌ Import error: {e}')\nexcept Exception as e:\n    print(f'❌ Error: {e}')\n\")",
      "Bash(PYTHONPATH=src python examples/example_bible_process.py)"
    ],
    "deny": []
  }
}