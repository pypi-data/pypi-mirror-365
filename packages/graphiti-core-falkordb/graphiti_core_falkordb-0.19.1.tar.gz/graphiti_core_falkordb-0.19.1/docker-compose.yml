services:
  graph:
    build:
      context: .
    ports:
      - "3800:8000"
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:8000/healthcheck')",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      falkordb:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - OPENAI_API_KEY=${OPENROUTER_API_KEY}
      - OPENAI_BASE_URL=https://openrouter.ai/api/v1
      - NEO4J_URI=bolt://neo4j:${NEO4J_PORT:-7687}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - PORT=8000
      - LOG_LEVEL=DEBUG
      - DATABASE_PROVIDER=falkordb
      - FALKORDB_URI=${FALKORDB_URI:-redis://default:meowmeow@falkordb:6379}
      - FALKORDB_HOST=falkordb
      - FALKORDB_PORT=6379
      - FALKORDB_USERNAME=${FALKORDB_USERNAME:-default}
      - FALKORDB_PASSWORD=${FALKORDB_PASSWORD}
      - FALKORDB_DATABASE=default_db
  # neo4j:
  #   image: neo4j:5.26.2
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "wget -qO- http://localhost:${NEO4J_PORT:-7474} || exit 1",
  #       ]
  #     interval: 1s
  #     timeout: 10s
  #     retries: 10
  #     start_period: 3s
  #   ports:
  #     - "7474:7474" # HTTP
  #     - "${NEO4J_PORT:-7687}:${NEO4J_PORT:-7687}" # Bolt
  #   volumes:
  #     - neo4j_data:/data
  #   environment:
  #     - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
  falkordb:  
    image: falkordb/falkordb:latest  
    ports:  
      - "6379:6379"  
      - "3040:3000"  # FalkorDB browser interface  
    healthcheck:  
      test: ["CMD", "redis-cli", "ping"]  
      interval: 10s  
      timeout: 5s  
      retries: 5  
    volumes:  
      - falkordb_data:/data  
    env_file:
      - .env
volumes:
  falkordb_data:
