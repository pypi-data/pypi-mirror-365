"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict
from zendesk.types import BaseModel


class SkillBasedRoutingAttributeDefinitionsConditionsAllTypedDict(TypedDict):
    subject: NotRequired[str]
    title: NotRequired[str]


class SkillBasedRoutingAttributeDefinitionsConditionsAll(BaseModel):
    subject: Optional[str] = None

    title: Optional[str] = None


class SkillBasedRoutingAttributeDefinitionsConditionsAnyTypedDict(TypedDict):
    subject: NotRequired[str]
    title: NotRequired[str]


class SkillBasedRoutingAttributeDefinitionsConditionsAny(BaseModel):
    subject: Optional[str] = None

    title: Optional[str] = None


class SkillBasedRoutingAttributeDefinitionsDefinitionsTypedDict(TypedDict):
    conditions_all: NotRequired[
        List[SkillBasedRoutingAttributeDefinitionsConditionsAllTypedDict]
    ]
    conditions_any: NotRequired[
        List[SkillBasedRoutingAttributeDefinitionsConditionsAnyTypedDict]
    ]


class SkillBasedRoutingAttributeDefinitionsDefinitions(BaseModel):
    conditions_all: Optional[
        List[SkillBasedRoutingAttributeDefinitionsConditionsAll]
    ] = None

    conditions_any: Optional[
        List[SkillBasedRoutingAttributeDefinitionsConditionsAny]
    ] = None


class SkillBasedRoutingAttributeDefinitionsTypedDict(TypedDict):
    definitions: NotRequired[SkillBasedRoutingAttributeDefinitionsDefinitionsTypedDict]


class SkillBasedRoutingAttributeDefinitions(BaseModel):
    definitions: Optional[SkillBasedRoutingAttributeDefinitionsDefinitions] = None
