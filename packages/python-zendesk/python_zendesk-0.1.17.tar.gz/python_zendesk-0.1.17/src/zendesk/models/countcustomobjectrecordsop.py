"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from typing import Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict
from zendesk.types import BaseModel
from zendesk.utils import FieldMetadata, PathParamMetadata


class CountCustomObjectRecordsRequestTypedDict(TypedDict):
    custom_object_key: str
    r"""The key of a custom object"""


class CountCustomObjectRecordsRequest(BaseModel):
    custom_object_key: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The key of a custom object"""


class CountCustomObjectRecordsCountTypedDict(TypedDict):
    refreshed_at: NotRequired[datetime]
    r"""The time the last count was performed"""
    value: NotRequired[int]
    r"""Number of records at the time of the latest count operation"""


class CountCustomObjectRecordsCount(BaseModel):
    refreshed_at: Optional[datetime] = None
    r"""The time the last count was performed"""

    value: Optional[int] = None
    r"""Number of records at the time of the latest count operation"""


class CountCustomObjectRecordsResponseTypedDict(TypedDict):
    r"""Success response"""

    count: NotRequired[Dict[str, CountCustomObjectRecordsCountTypedDict]]


class CountCustomObjectRecordsResponse(BaseModel):
    r"""Success response"""

    count: Optional[Dict[str, CountCustomObjectRecordsCount]] = None
