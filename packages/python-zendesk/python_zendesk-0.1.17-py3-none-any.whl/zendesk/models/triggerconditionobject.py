"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from typing import List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict
from zendesk.types import BaseModel
from zendesk.utils import FieldMetadata


TriggerConditionObjectValue1TypedDict = TypeAliasType(
    "TriggerConditionObjectValue1TypedDict", Union[str, int]
)


TriggerConditionObjectValue1 = TypeAliasType(
    "TriggerConditionObjectValue1", Union[str, int]
)


TriggerConditionObjectValue2TypedDict = TypeAliasType(
    "TriggerConditionObjectValue2TypedDict",
    Union[str, int, List[TriggerConditionObjectValue1TypedDict]],
)


TriggerConditionObjectValue2 = TypeAliasType(
    "TriggerConditionObjectValue2", Union[str, int, List[TriggerConditionObjectValue1]]
)


class TriggerConditionObjectTypedDict(TypedDict):
    field: NotRequired[str]
    operator: NotRequired[str]
    value: NotRequired[TriggerConditionObjectValue2TypedDict]


class TriggerConditionObject(BaseModel):
    field: Annotated[Optional[str], FieldMetadata(query=True)] = None

    operator: Annotated[Optional[str], FieldMetadata(query=True)] = None

    value: Annotated[
        Optional[TriggerConditionObjectValue2], FieldMetadata(query=True)
    ] = None
