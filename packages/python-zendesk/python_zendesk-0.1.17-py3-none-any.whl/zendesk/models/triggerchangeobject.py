"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from typing import List, Optional, Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict
from zendesk.types import BaseModel


Content1TypedDict = TypeAliasType("Content1TypedDict", Union[str, int, bool])


Content1 = TypeAliasType("Content1", Union[str, int, bool])


Content2TypedDict = TypeAliasType(
    "Content2TypedDict", Union[bool, str, int, List[Content1TypedDict]]
)
r"""The value of the item it represents"""


Content2 = TypeAliasType("Content2", Union[bool, str, int, List[Content1]])
r"""The value of the item it represents"""


class TriggerChangeObjectTypedDict(TypedDict):
    change: NotRequired[str]
    r"""One of `-`, `+`, `=` representing the type of change"""
    content: NotRequired[Content2TypedDict]
    r"""The value of the item it represents"""


class TriggerChangeObject(BaseModel):
    change: Optional[str] = None
    r"""One of `-`, `+`, `=` representing the type of change"""

    content: Optional[Content2] = None
    r"""The value of the item it represents"""
