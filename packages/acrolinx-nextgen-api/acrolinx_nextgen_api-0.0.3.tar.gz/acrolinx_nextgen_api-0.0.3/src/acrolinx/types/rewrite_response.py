# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .check_options import CheckOptions
from .score_output import ScoreOutput
from .style_guide_status import StyleGuideStatus
from .suggestion import Suggestion


class RewriteResponse(UniversalBaseModel):
    status: typing.Optional[StyleGuideStatus] = None
    scores: typing.Optional[ScoreOutput] = None
    issues: typing.Optional[typing.List[Suggestion]] = None
    check_options: typing.Optional[CheckOptions] = None
    rewrite: typing.Optional[str] = None
    rewrite_scores: typing.Optional[ScoreOutput] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
