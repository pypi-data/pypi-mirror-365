[project]
name = "pfun-cma-model"
urls = { homepage = "https://github.com/rocapp/pfun-cma-model" }
version = "0.3.3"
description = "A Python package for the Physiofunctional CMA model, a generative model that functionally replicates neuroendocrine dynamics."
authors = [{name = "Robbie Capps", email = "rocapp@gmail.com"}]
readme = "README.md"
requires-python = ">3.11,<3.13"
dependencies = [
    "setuptools>=78.1.1",
    "uvicorn==0.32.0",
    "numba>=0.58.0",
    "pandas>=2.1.1",
    "scipy>=1.11.3",
    "matplotlib>=3.8.0",
    "pydantic==2.4.2",
    "click>=8.1.7",
    "paramiko>=3.3.1",
    "pfun_path_helper>=0.1.4",
    "boto3>=1.28.57",
    "botocore>=1.31.57",
    "jinja2>=3.1.2",
    "fastapi[standard]>=0.115.3",
    "gunicorn>=23.0.0",
    "PyYAML>=6.0.1",
    "plotly>=5.18.0",
    "graphql-core>=3.2.3",
    "scikit-learn>=1.3.2",
    "tabulate>=0.9.0",
    "requests>=2.32.4",
    "pyarrow>=20.0.0",
    "ipykernel>=6.29.5",
]
optional-dependencies = {ui = ["dash>=2.18.2"], dev = [
        "click>=8.1.7",
        "pytest>=6.0",
        "ipykernel>=6.25.2",
        "ipython>=8.16.1",
        "zappa>=0.58.0",
        "tox-poetry-installer>=0.10.3",
        "notebook>=7.4.3",
        "fastapi[standard]>=0.115.12",
        "pandas-stubs>=2.2.3.250527",
        "types-requests>=2.32.4.20250611",
        "types-tabulate>=0.9.0.20241207",
    ]}

[project.scripts]
pfun-cma-model = "pfun_cma_model.cli:cli"

[build-system]
requires = ["hatchling", "wheel", "setuptools"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "fastapi[standard]>=0.115.12",
    "ipykernel>=6.29.5",
    "ipython>=8.37.0",
    "pandas-stubs>=2.2.3.250527",
    "types-requests>=2.32.4.20250611",
    "types-tabulate>=0.9.0.20241207",
]

# Tox configuration (remove poetry installer, keep envs)
[tool.tox]
requires = ["tox>=4.19"]
env_list = ["3.11", "type"]
isolated_build = true

[tool.tox.env_run_base]
description = "Run test under uv"
package = "sdist"
install_dev_deps = true
allowlist_externals = ["pytest", "mypy"]
commands = [ ["pytest", ], ]

[tool.tox.env.type]
description = "run type check on code base"
deps = ["pytest", "mypy==1.11.2", "types-cachetools>=5.5.0.20240820", "types-chardet>=5.0.4.6"]
commands = [
    ["mypy", "--strict", "--ignore-missing-imports", "pfun_cma_model"],
    ["pytest"]
]
##
# Tox configuration:
##
requires = ["tox>=4.19", "tox-poetry-installer>=0.10.3"]
env_list = ["3.12", "type"]
isolated_build = true
