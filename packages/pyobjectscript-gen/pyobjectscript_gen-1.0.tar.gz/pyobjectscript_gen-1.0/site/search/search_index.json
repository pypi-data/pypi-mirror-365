{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"API Reference","text":""},{"location":"#class","title":"Class","text":"<p>Defining Classes</p>"},{"location":"#objectscript-class-components","title":"Objectscript Class Components","text":""},{"location":"#component","title":"Component","text":"<p>Base class for Objectscript class components.</p>"},{"location":"#parameter","title":"Parameter","text":"<p>Defining Class Parameters</p>"},{"location":"#property","title":"Property","text":"<p>Defining and Using Literal Properties</p>"},{"location":"#method","title":"Method","text":"<p>Defining Methods</p>"},{"location":"#classmethod","title":"ClassMethod","text":"<p>Defining Methods</p>"},{"location":"#projection","title":"Projection","text":"<p>Defining Class Projections</p>"},{"location":"#query","title":"Query","text":"<p>Defining and Using Class Queries</p>"},{"location":"#trigger","title":"Trigger","text":"<p>Syntax of Triggers in Class Definitions</p>"},{"location":"#index","title":"Index","text":"<p>Defining Indexes Using a Class Definition</p>"},{"location":"#foreignkey","title":"ForeignKey","text":"<p>Syntax of Foreign Keys in Class Definitions</p>"},{"location":"#storage","title":"Storage","text":"<p>Storage Definitions</p>"},{"location":"#xdata","title":"XData","text":"<p>Defining and Using XData Blocks</p>"},{"location":"#miscellaneous-classes","title":"Miscellaneous classes","text":""},{"location":"#expression","title":"Expression","text":"<p>Wrapper class for Objectscript expressions.</p>"},{"location":"#methodargument","title":"MethodArgument","text":"<p>Used to specify method arguments in the Method or Query component.</p>"},{"location":"cls/","title":"Index","text":"<p>               Bases: <code>Component</code></p> <p>Defining Indexes Using a Class Definition</p> <pre><code>INDEX Name ON Property AS Collation [ Keywords ];\n</code></pre> <p>Note: Complex indexes using expressions or multiple properties are not implemented yet by this library.</p> <p>A workaround for this is to specify <code>property</code> with the full desired expression and leave <code>collation</code> empty, such as:</p> <pre><code>index.property = Expression(\"(Name As SQLstring, Code As Exact)\")\n</code></pre>"},{"location":"cls/#pyobjectscript_gen.cls.Index.collation","title":"<code>collation</code>","text":"<p>Collation Types</p>"},{"location":"cls/#pyobjectscript_gen.cls.Index.keywords","title":"<code>keywords = field(default_factory=dict, kw_only=True)</code>","text":"<p>Index Syntax and Keywords</p> <p>Optional dict used to specify keywords for this component.</p> <p>Use <code>{\"Keyword\": None}</code> for keywords that do not have a value</p>"},{"location":"cls/#pyobjectscript_gen.cls.Index.keywords--valid-foreign-key-keywords","title":"Valid Foreign Key keywords","text":"<ul> <li>Abstract \u2013 Specifies that an index is abstract.</li> <li>Condition \u2013 Defines a conditional index and specifies the condition that must be met for a record to be included in the index.</li> <li>CoshardWith \u2013 Adds an index that specifies the name of the class with which this class is cosharded.</li> <li>Data \u2013 Specifies a list of properties whose values are to be stored within this index.</li> <li>Deferred \u2013 Defines a deferred index.</li> <li>Extent \u2013 Defines an extent index.</li> <li>IdKey \u2013 Specifies whether this index defines the Object Identity values for the table.</li> <li>Internal \u2013 Specifies whether this index definition is internal (not displayed in the class documentation).</li> <li>PrimaryKey \u2013 Specifies whether this index defines the primary key for the table.</li> <li>ShardKey \u2013 Defines an index that specifies the shard key for this class.</li> <li>SqlName \u2013 Specifies an SQL alias for the index.</li> <li>Type \u2013 Specifies the type of index.</li> <li>Unique \u2013 Specifies whether the index should enforce uniqueness.</li> </ul>"},{"location":"cls/#pyobjectscript_gen.cls.Index.property","title":"<code>property</code>","text":"<p>Name of the property to index</p>"},{"location":"cls/class/","title":"Class","text":"<p>               Bases: <code>Component</code></p> <p>Defining Classes</p>"},{"location":"cls/class/#pyobjectscript_gen.cls.Class--example-usage","title":"Example usage","text":"<pre><code>from pyobjectscript_gen.cls import *\n\ncls = Class(\"Demo.MyExample.MyClass\")\ncls.extends = [\"%RegisteredObject\"]\n# example of declaratively creating properties\ncls.components = [\n    Property(\n        name=\"Property1\",\n        type=\"%String\",\n    ),\n    Property(\n        name=\"Property2\",\n        type=\"%Numeric\",\n    ),\n]\n# example of iteratively creating a method\nmethod = Method(\"MyMethod\")\nmethod.return_type = \"%String\"\nmethod.impl = [\n    \"set returnvalue=..Property1_..Property2\",\n    \"quit returnvalue\"\n]\ncls.components.append(method)\n# generate on sys.stdout\ncls.generate()\n</code></pre>"},{"location":"cls/class/#pyobjectscript_gen.cls.Class--example-output","title":"Example output","text":"<pre><code>Class Demo.MyExample.MyClass Extends %RegisteredObject\n{\n\nProperty Property1 As %String;\n\nProperty Property2 As %Numeric;\n\nMethod MyMethod() As %String\n{\n    set returnvalue=..Property1_..Property2\n    quit returnvalue\n}\n\n}\n</code></pre>"},{"location":"cls/class/#pyobjectscript_gen.cls.Class.components","title":"<code>components = field(default_factory=list)</code>","text":"<p>List of Objectscript components to be generated in ascending order from top to bottom inside this <code>Class</code></p> <p>Components can be any of the following classes:</p> <ul> <li>Parameter</li> <li>Property</li> <li>Method</li> <li>ClassMethod</li> <li>Query</li> <li>Trigger</li> <li>Projection</li> <li>ForeignKey</li> <li>Index</li> <li>XData</li> <li>Storage</li> </ul> Note <ul> <li>Class itself is also a Component but cannot be generated inside another Class.</li> <li>Base class Component should not be used directly.</li> </ul>"},{"location":"cls/class/#pyobjectscript_gen.cls.Class.extends","title":"<code>extends = field(default_factory=list)</code>","text":"<p>List of class names that this class extends from, in ascending order from left to right</p>"},{"location":"cls/class/#pyobjectscript_gen.cls.Class.keywords","title":"<code>keywords = field(default_factory=dict, kw_only=True)</code>","text":"<p>Top Level Class Syntax and Keywords</p> <p>Optional dict used to specify keywords for this component.</p> <p>Use <code>{\"Keyword\": None}</code> for keywords that do not have a value</p>"},{"location":"cls/class/#pyobjectscript_gen.cls.Class.keywords--valid-class-keywords","title":"Valid Class keywords","text":"<ul> <li>Abstract \u2013 Specifies whether this is an abstract class.</li> <li>ClassType \u2013 Specifies the type (or behavior) of this class.</li> <li>ClientDataType \u2013 Specifies the client data type used when this data type is projected to client technologies. Applies only to data type classes.</li> <li>ClientName \u2013 Enables you to override the default class name used in client projections of this class.</li> <li>CompileAfter \u2013 Specifies that this class should be compiled after other (specified) classes. In contrast to DependsOn, this keyword does not require the other classes to be runnable.</li> <li>DdlAllowed \u2013 Specifies whether DDL statements can be used to alter or delete the class definition. Applies only to persistent classes.</li> <li>DependsOn \u2013 Specifies that this class should be compiled after the compiler has made other (specified) classes runnable.</li> <li>Deprecated \u2013 Specifies that this class is deprecated. This keyword is ignored by the class compiler and merely provides a human-readable indicator that the class is deprecated.</li> <li>Final \u2013 Specifies whether this class is final (cannot have subclasses).</li> <li>GeneratedBy \u2013 Indicates that this class was generated by code in another class and thus should not be edited.</li> <li>Hidden \u2013 Specifies whether this class is hidden (not listed in the class reference).</li> <li>Inheritance \u2013 Specifies the inheritance order for the superclasses of this class.</li> <li>Language \u2013 Specifies the default language used to implement methods for this class.</li> <li>LegacyInstanceContext \u2013 Specifies whether instance methods in this class can use the now-obsolete %this variable.</li> <li>NoExtent \u2013 Specifies whether the compiler is prevented from generating a storage definition and methods to save/load object from disk and to disk.</li> <li>OdbcType \u2013 Specifies the type used when this data type is exposed via ODBC or JDBC. Every data type class must specify an ODBC type. This keyword applies only to data type classes.</li> <li>Owner \u2013 Specifies the owner of this class and its corresponding table. Applies only to persistent classes.</li> <li>ProcedureBlock \u2013 Specifies whether each ObjectScript method in this class is a procedure block by default.</li> <li>PropertyClass \u2013 Adds property parameters to this class.</li> <li>ServerOnly \u2013 Specifies whether this class is projected to Java clients.</li> <li>Sharded \u2013 Specifies whether this class is sharded. Applies only to persistent classes in an environment containing a sharded cluster.</li> <li>SoapBindingStyle \u2013 Specifies the binding style or SOAP invocation mechanism used by any web methods defined in this class. Applies only in a class that is defined as a web service or web client.</li> <li>SoapBodyUse \u2013 Specifies the encoding for any web methods defined in this class. This keyword applies only to web service and web client classes.</li> <li>SqlCategory \u2013 Specifies the type to use for calculations in SQL. Applies only to data type classes.</li> <li>SqlRowIdName \u2013 Overrides the default SQL field name for the ID column for this class. Applies only to persistent classes.</li> <li>SqlRowIdPrivate \u2013 Specifies whether the ID column for this class is a hidden field when projected to ODBC and JDBC. Applies only to persistent classes.</li> <li>SqlTableName \u2013 Specifies the name of the SQL table to which this class is projected. Applies only to persistent classes.</li> <li>StorageStrategy \u2013 Specifies which storage definition controls persistence for this class. Applies only to persistent and serial classes.</li> <li>System \u2013 Influences the compilation order for this class.</li> <li>ViewQuery \u2013 Specifies the SQL query for this class. Applies only to view definition classes.</li> </ul>"},{"location":"cls/class/#pyobjectscript_gen.cls.Class.generate","title":"<code>generate(output=sys.stdout)</code>","text":"<p>Generates the current class to the specified IO or file (defaults to standard output)</p> <p>Example usage:</p> <pre><code># generates class into a file, make sure to add \"w\" for write permissions\nwith open(\"output.cls\", \"w\") as file:\n    cls.generate(file)\n</code></pre>"},{"location":"cls/classmethod/","title":"ClassMethod","text":"<p>               Bases: <code>Method</code></p> <p>Defining Methods</p> <pre><code>ClassMethod Name(Arguments...) as ReturnType [ Keywords ]\n{\n    Implementation\n}\n</code></pre>"},{"location":"cls/component/","title":"Component","text":"<p>Base class for Objectscript class components.</p>"},{"location":"cls/component/#pyobjectscript_gen.cls.Component.doc_string","title":"<code>doc_string = field(default_factory=list, kw_only=True)</code>","text":"<p>Optional documentation string, using the form of a 3 slashes comment above the Objectscript component.</p> <p>Can be a string or list of string for multilines comments.</p>"},{"location":"cls/component/#pyobjectscript_gen.cls.Component.keywords","title":"<code>keywords = field(default_factory=dict, kw_only=True)</code>","text":"<p>Compiler keywords</p> <p>see: Introduction to Compiler Keywords</p> <p>Optional dict used to specify keywords for this component.</p> <p>Use <code>{\"Keyword\": None}</code> for keywords that do not have a value.</p>"},{"location":"cls/component/#pyobjectscript_gen.cls.Component.name","title":"<code>name</code>","text":"<p>Name of the Objectscript component.</p>"},{"location":"cls/component/#pyobjectscript_gen.cls.Component.format_name","title":"<code>format_name()</code>","text":"<p>Enclose <code>name</code> with quotes if <code>name</code> contains spaces or underscores.</p>"},{"location":"cls/component/#pyobjectscript_gen.cls.Component.get_template","title":"<code>get_template()</code>","text":"<p>Returns the name of the Jinja2 template used by component</p>"},{"location":"cls/component/#pyobjectscript_gen.cls.Component.on_generate","title":"<code>on_generate()</code>","text":"<p>Function called before class generation, can be overriden by subclasses for specific purposes.</p>"},{"location":"cls/expression/","title":"Expression","text":"<p>Wrapper class for Objectscript expressions.</p> <p>Expressions will be interpreted as Objectscript expressions instead of value strings by the generator.</p>"},{"location":"cls/expression/#pyobjectscript_gen.cls.Expression--example-usage","title":"Example usage","text":"<pre><code>Parameter(\n    name=\"COMPILETIME\",\n    value=Expression(\"{$zdatetime($h)}\")\n)\n</code></pre> <p>Will output:</p> <pre><code>Parameter COMPILETIME = {$zdatetime($h)};\n</code></pre>"},{"location":"cls/foreignkey/","title":"ForeignKey","text":"<p>               Bases: <code>Component</code></p> <p>Syntax of Foreign Keys in Class Definitions</p> <p><code>ForeignKey name(key_props) References referenced_class(ref_index) [ Keywords ];</code></p>"},{"location":"cls/foreignkey/#pyobjectscript_gen.cls.ForeignKey.key_props","title":"<code>key_props = field(default_factory=list)</code>","text":"<p>Specifies the property or properties that are constrained by this foreign key.</p> <p>Specifically this property or properties must match the referenced value in the foreign table.</p> <p>At least one property required.</p>"},{"location":"cls/foreignkey/#pyobjectscript_gen.cls.ForeignKey.keywords","title":"<code>keywords = field(default_factory=dict, kw_only=True)</code>","text":"<p>Foreign Key Syntax and Keywords</p> <p>Optional dict used to specify keywords for this component.</p> <p>Use <code>{\"Keyword\": None}</code> for keywords that do not have a value</p>"},{"location":"cls/foreignkey/#pyobjectscript_gen.cls.ForeignKey.keywords--valid-foreign-key-keywords","title":"Valid Foreign Key keywords","text":"<ul> <li>Internal \u2013 Specifies whether this foreign key definition is internal (not displayed in the class documentation).</li> <li>NoCheck \u2013 Specifies whether InterSystems IRIS should check this foreign key constraint.</li> <li>OnDelete \u2013 Specifies the action that this foreign key should cause in the current table when a record deleted in the foreign table is referenced by a record in the current table.</li> <li>OnUpdate \u2013 Specifies the action that this foreign key should cause in the current table when the key value of a record in the foreign table is updated and that record is referenced by a record in the current table.</li> <li>SqlName \u2013 Specifies an SQL alias for the foreign key.</li> </ul>"},{"location":"cls/foreignkey/#pyobjectscript_gen.cls.ForeignKey.ref_index","title":"<code>ref_index = None</code>","text":"<p>Optional property which specifies the unique index name within <code>referenced_class</code>.</p> <p>If you omit <code>ref_index</code>, then the system uses the <code>IDKEY</code> index in <code>referenced_class</code>.</p>"},{"location":"cls/foreignkey/#pyobjectscript_gen.cls.ForeignKey.referenced_class","title":"<code>referenced_class</code>","text":"<p>Required property, specifies the foreign table (that is, the class to which the foreign key points).</p>"},{"location":"cls/method/","title":"Method","text":"<p>               Bases: <code>Component</code></p> <p>Defining Methods</p> <pre><code>Method Name(Arguments...) as ReturnType [ Keywords ]\n{\n    Implementation\n}\n</code></pre>"},{"location":"cls/method/#pyobjectscript_gen.cls.Method.arguments","title":"<code>arguments = field(default_factory=list)</code>","text":"<p>List of <code>MethodArgument</code></p>"},{"location":"cls/method/#pyobjectscript_gen.cls.Method.arguments--usage-example","title":"Usage example","text":"<pre><code>method.arguments = [\n    MethodArgument(\n        \"foo\",\n        type=\"%String\",\n        value=\"\"\n    ),\n    MethodArgument(\n        \"bar\",\n        type=\"%Integer\",\n        value=1\n        prefix=\"ByRef\",\n    ),\n]\n</code></pre>"},{"location":"cls/method/#pyobjectscript_gen.cls.Method.impl","title":"<code>impl = field(default_factory=list)</code>","text":"<p>Method implementation</p> <p>Can be a simple string for already indented and newline delimited code, or for use with <code>CodeMode = expression</code> or a list of strings for multiline code, in which case will be indented automatically by the generator.</p> <p>Objectscript routine code generation and syntax validation is not supported by this library.</p>"},{"location":"cls/method/#pyobjectscript_gen.cls.Method.is_classmethod","title":"<code>is_classmethod = False</code>","text":"<p>Optional boolean if Method should be a ClassMethod.</p> <p>Usage of the <code>ClassMethod</code> class is prefered instead.</p>"},{"location":"cls/method/#pyobjectscript_gen.cls.Method.keywords","title":"<code>keywords = field(default_factory=dict, kw_only=True)</code>","text":"<p>Method Syntax and Keywords</p> <p>Optional dict used to specify keywords for this component.</p> <p>Use <code>{\"Keyword\": None}</code> for keywords that do not have a value</p>"},{"location":"cls/method/#pyobjectscript_gen.cls.Method.keywords--valid-method-keywords","title":"Valid Method keywords","text":"<ul> <li>Abstract \u2013 Specifies whether this is an abstract method.</li> <li>ClientName \u2013 Overrides the default name for the method in client projections.</li> <li>CodeMode \u2013 Specifies how this method is implemented.</li> <li>Deprecated \u2013 Specifies that this method is deprecated. This keyword is ignored by the class compiler and merely provides a human-readable indicator that the method is deprecated.</li> <li>ExternalProcName \u2013 Specifies the name of this method when it is used as a stored procedure in a foreign database. Applies only if the method is projected as a stored procedure.</li> <li>Final \u2013 Specifies whether this method is final (cannot be overridden in subclasses).</li> <li>ForceGenerate \u2013 Specifies whether the method should be compiled in every subclass. Applies only if the method is a method generator.</li> <li>GenerateAfter \u2013 Specifies when to generate this method. Applies only if the method is a method generator.</li> <li>Internal \u2013 Specifies whether this method definition is internal (not displayed in the class documentation).</li> <li>Language \u2013 Specifies the language used to implement this method.</li> <li>NotInheritable \u2013 Specifies whether this method can be inherited in subclasses.</li> <li>PlaceAfter \u2013 Specifies the order of this method, relative to other methods, in the routine that is generated for the class.</li> <li>Private \u2013 Specifies whether this method is private (can be invoked only by methods of this class or its subclasses).</li> <li>ProcedureBlock \u2013 Specifies whether this method is a procedure block. Applies only if the method is written in ObjectScript.</li> <li>PublicList \u2013 Specifies the public variables for this method. Applies only if the method is written in ObjectScript and is a procedure block.</li> <li>Requires \u2013 Specifies a list of privileges a user or process must have to call this method.</li> <li>ReturnResultsets \u2013 Specifies whether this method returns result sets (so that ODBC and JDBC clients can retrieve them).</li> <li>ServerOnly \u2013 Specifies whether this method will be projected to a Java client.</li> <li>SoapAction \u2013 Specifies the SOAP action to use in the HTTP header when invoking this method as a web method via HTTP. Applies only in a class that is defined as a web service or web client.</li> <li>SoapBindingStyle \u2013 Specifies the binding style or SOAP invocation mechanism used by this method, when it is used as a web method. Applies only in a class that is defined as a web service or web client.</li> <li>SoapBodyUse \u2013 Specifies the encoding used by the inputs and outputs of this method, when it is used as a web method. Applies only in a class that is defined as a web service or web client.</li> <li>SoapMessageName \u2013 Specifies the name attribute of the  element of the response message for this web method. Applies only in a class that is defined as a web service or web client. <li>SoapNameSpace \u2013 Specifies the XML namespace used by a web method. Applies only in a class that is defined as a web service or web client.</li> <li>SoapRequestMessage \u2013 Use this when multiple web methods have the same SoapAction. This keyword specifies the name of the top element in the SOAP body of the request message, in the default scenario. Applies only in a class that is defined as a web service or web client.</li> <li>SoapTypeNameSpace \u2013 Specifies the XML namespace for the types used by this web method. Applies only in a class that is defined as a web service or web client.</li> <li>SqlName \u2013 Overrides the default name of the projected SQL stored procedure. Applies only if this method is projected as an SQL stored procedure.</li> <li>SqlProc \u2013 Specifies whether the method can be invoked as an SQL stored procedure. Only class methods (not instance methods) can be called as SQL stored procedures.</li> <li>WebMethod \u2013 Specifies whether this method is a web method. Applies only in a class that is defined as a web service or web client.</li>"},{"location":"cls/method/#pyobjectscript_gen.cls.Method.return_type","title":"<code>return_type = None</code>","text":"<p>Optional class name used as return type</p>"},{"location":"cls/methodargument/","title":"MethodArgument","text":"<p>Specifying Method Arguments</p> <p>Used to specify method arguments in the <code>Method</code> or <code>Query</code> component.</p>"},{"location":"cls/methodargument/#pyobjectscript_gen.cls.MethodArgument.name","title":"<code>name</code>","text":"<p>Name of the method argument</p>"},{"location":"cls/methodargument/#pyobjectscript_gen.cls.MethodArgument.prefix","title":"<code>prefix = None</code>","text":"<p>Passing ByRef or Output Arguments</p> <p>Optional prefix <code>ByRef</code> or <code>Output</code></p>"},{"location":"cls/methodargument/#pyobjectscript_gen.cls.MethodArgument.type","title":"<code>type = None</code>","text":"<p>Optional type of the method argument</p>"},{"location":"cls/methodargument/#pyobjectscript_gen.cls.MethodArgument.value","title":"<code>value = None</code>","text":"<p>Optional default value or expression</p>"},{"location":"cls/parameter/","title":"Parameter","text":"<p>               Bases: <code>Component</code></p> <p>Defining Class Parameters</p> <pre><code>Parameter NAME as Type [ Keywords ] = value;\n</code></pre>"},{"location":"cls/parameter/#pyobjectscript_gen.cls.Parameter.keywords","title":"<code>keywords = field(default_factory=dict, kw_only=True)</code>","text":"<p>Parameter Keywords</p> <p>Optional dict used to specify keywords for this component.</p> <p>Use <code>{\"Keyword\": None}</code> for keywords that do not have a value</p>"},{"location":"cls/parameter/#pyobjectscript_gen.cls.Parameter.keywords--valid-parameter-keywords","title":"Valid Parameter keywords","text":"<ul> <li>Abstract \u2013 Specifies whether this is an abstract parameter.</li> <li>Constraint \u2013 Specifies a user interface constraint in IDEs for this parameter.</li> <li>Deprecated \u2013 Specifies that this parameter is deprecated. This keyword is ignored by the class compiler and merely provides a human-readable indicator that the parameter is deprecated.</li> <li>Final \u2013 Specifies whether this parameter is final (cannot be overridden in subclasses)</li> <li>Flags \u2013 Modifies the user interface type (in IDEs) for this parameter.</li> <li>Internal \u2013 Specifies whether this parameter definition is internal (not displayed in the class documentation).</li> </ul>"},{"location":"cls/parameter/#pyobjectscript_gen.cls.Parameter.type","title":"<code>type = None</code>","text":"<p>Optional type of the Parameter</p> <p>Allowed Types for Parameters</p>"},{"location":"cls/parameter/#pyobjectscript_gen.cls.Parameter.value","title":"<code>value = None</code>","text":"<p>Optional default value or expression of the Parameter</p>"},{"location":"cls/projection/","title":"Projection","text":"<p>               Bases: <code>Component</code></p> <p>Defining Class Projections</p> <p><code>Projection name As projection_class(PARAM1=\"value\", ...) [ Keywords ];</code></p>"},{"location":"cls/projection/#pyobjectscript_gen.cls.Projection.keywords","title":"<code>keywords = field(default_factory=dict, kw_only=True)</code>","text":"<p>Projection Syntax and Keywords</p> <p>Optional dict used to specify keywords for this component.</p> <p>Use <code>{\"Keyword\": None}</code> for keywords that do not have a value</p>"},{"location":"cls/projection/#pyobjectscript_gen.cls.Projection.keywords--valid-projection-keywords","title":"Valid Projection keywords","text":"<ul> <li>Internal \u2013 Specifies whether this projection definition is internal (not displayed in the class documentation). Note that the class documentation does not currently display projections at all.</li> </ul>"},{"location":"cls/projection/#pyobjectscript_gen.cls.Projection.params","title":"<code>params = field(default_factory=dict)</code>","text":"<p>Property Parameters</p> <p>Optional dict used to specify Property Parameters for the <code>projection_class</code></p>"},{"location":"cls/projection/#pyobjectscript_gen.cls.Projection.params--example","title":"Example","text":"<pre><code>Projection(\n    name=\"MyProj\", \n    projection_class=\"%Projection.Java\",\n    params={\n        \"ROOTDIR\": \"c:\\java\",\n    },\n),\n</code></pre>"},{"location":"cls/projection/#pyobjectscript_gen.cls.Projection.projection_class","title":"<code>projection_class</code>","text":"<p>Required property, specifies the name of the projection class, which is a subclass of <code>%Projection.AbstractProjection</code>.</p>"},{"location":"cls/property/","title":"Property","text":"<p>               Bases: <code>Component</code></p> <p>Defining and Using Literal Properties</p> <pre><code>Property Name as Type(PARAM1=value, PARAM2=value) [ Keywords ];\n</code></pre>"},{"location":"cls/property/#pyobjectscript_gen.cls.Property.collection","title":"<code>collection = None</code>","text":"<p>Defining Collection Properties</p> <p>Optional parameter used to specify if this <code>Property</code> should be a List or Array of the specified <code>type</code></p> <p>Must be <code>\"list\"</code>, <code>\"array\"</code> or <code>None</code></p>"},{"location":"cls/property/#pyobjectscript_gen.cls.Property.collection--example","title":"Example","text":"<pre><code>Property MyProp As list of Type;\nProperty MyProp As array of Type;\n</code></pre>"},{"location":"cls/property/#pyobjectscript_gen.cls.Property.keywords","title":"<code>keywords = field(default_factory=dict, kw_only=True)</code>","text":"<p>Property Syntax and Keywords</p> <p>Optional dict used to specify keywords for this component.</p> <p>Use <code>{\"Keyword\": None}</code> for keywords that do not have a value</p>"},{"location":"cls/property/#pyobjectscript_gen.cls.Property.keywords--valid-property-keywords","title":"Valid Property keywords","text":"<ul> <li>Aliases \u2013 Specifies additional names for this property for use via object access.</li> <li>Calculated \u2013 Specifies that this property has no in-memory storage allocated for it when the object containing it is instantiated.</li> <li>Cardinality \u2013 Specifies the cardinality of this relationship property. Required for relationship properties. Not used for other properties.</li> <li>ClientName \u2013 Specifies an alias used by client projections of this property.</li> <li>Collection \u2013 Deprecated means of specifying the collection type of a collection property. Do not use.</li> <li>ComputeLocalOnly \u2013 Controls whether a SqlComputed field is computed only on the local server for federated and shareded tables.</li> <li>Deprecated \u2013 Specifies that this property is deprecated. This keyword is ignored by the class compiler and merely provides a human-readable indicator that the property is deprecated.</li> <li>Final \u2013 Specifies whether this property is final (cannot be overridden in subclasses).</li> <li>Identity \u2013 Specifies whether this property corresponds to the identity column in the corresponding SQL table. Applies to persistent classes.</li> <li>InitialExpression \u2013 Specifies an initial value for this property.</li> <li>Internal \u2013 Specifies whether this property definition is internal (not displayed in the class documentation). .</li> <li>Inverse \u2013 Specifies the inverse side of this relationship. Required for relationship properties. Not used for other properties.</li> <li>MultiDimensional \u2013 Specifies that this property has the characteristics of a multidimensional array.</li> <li>OnDelete \u2013 Specifies the action to take in the current table when a related object is deleted. This keyword applies only to a relationship property that specifies Cardinality as Parent or One. Its use is invalid in all other contexts.</li> <li>Private \u2013 Specifies whether the property is private (can be used only by methods of this class or its subclasses).</li> <li>ReadOnly \u2013 Specifies that a property is read-only, which limits the number of ways its value can be set.</li> <li>Required \u2013 For a persistent class, specifies that the property\u2019s value must be given a value before it can be stored to disk. For an XML-enabled class, specifies that the element to which the property is mapped is required.</li> <li>ServerOnly \u2013 Specifies whether this property is projected to a Java client.</li> <li>SqlColumnNumber \u2013 Specifies the SQL column number for this property. Applies only to persistent classes.</li> <li>SqlComputeCode \u2013 Specifies code that sets the value of this property.</li> <li>SqlComputed \u2013 Specifies whether that this is a computed property.</li> <li>SqlComputeOnChange \u2013 This keyword controls when the property is recomputed. Applies only to triggered computed properties.</li> <li>SqlFieldName \u2013 Specifies the field name to use for this property in the SQL projection. Applies to persistent classes.</li> <li>SqlListDelimiter \u2013 Specifies the delimiter character used within SQL for lists. Applies to list properties in persistent classes. For use only by legacy applications.</li> <li>SqlListType \u2013 Specifies the values of this field are represented in memory in SQL and stored on disk. Applies only to list properties in persistent classes. For use only by legacy applications.</li> <li>Transient \u2013 Specifies whether the property is stored in the database. Applies only to persistent classes.</li> </ul>"},{"location":"cls/property/#pyobjectscript_gen.cls.Property.params","title":"<code>params = field(default_factory=dict)</code>","text":"<p>Property Parameters</p> <p>Optional dict used to specify Property Parameters</p>"},{"location":"cls/property/#pyobjectscript_gen.cls.Property.params--example","title":"Example","text":"<pre><code>Property(\n    name=\"MyProp\", \n    type=\"%String\",\n    params={\n        \"XMLNAME\": \"my_prop\",\n        \"MAXLEN\": 10,\n    },\n),\n</code></pre>"},{"location":"cls/property/#pyobjectscript_gen.cls.Property.type","title":"<code>type = None</code>","text":"<p>Optional type of the Property</p>"},{"location":"cls/query/","title":"Query","text":"<p>               Bases: <code>Component</code></p> <p>Defining and Using Class Queries</p> <pre><code>Query Name(Arguments...) as %SQLQuery [ Keywords ]\n{\n    Implementation\n}\n</code></pre>"},{"location":"cls/query/#pyobjectscript_gen.cls.Query.arguments","title":"<code>arguments = field(default_factory=list)</code>","text":"<p>List of <code>MethodArgument</code></p>"},{"location":"cls/query/#pyobjectscript_gen.cls.Query.arguments--usage-example","title":"Usage example","text":"<pre><code>query.arguments = [\n    MethodArgument(\n        \"foo\",\n        type=\"%String\",\n        value=\"\"\n    ),\n    MethodArgument(\n        \"bar\",\n        type=\"%Integer\",\n        value=1\n    ),\n]\n</code></pre>"},{"location":"cls/query/#pyobjectscript_gen.cls.Query.impl","title":"<code>impl = field(default_factory=list)</code>","text":"<p>Query implementation</p> <p>Can be a simple string for already indented and newline delimited code, or for use with <code>CodeMode = expression</code> or a list of strings for multiline code, in which case will be indented automatically by the generator.</p> Note <p>SQL query generation and syntax validation is not supported by this library.</p>"},{"location":"cls/query/#pyobjectscript_gen.cls.Query.keywords","title":"<code>keywords = field(default_factory=(lambda: {'SqlProc': None}), kw_only=True)</code>","text":"<p>Query Syntax and Keywords</p> <p>Optional dict used to specify keywords for this component.</p> <p><code>SqlProc</code> is enabled by default for Queries</p> <p>Use <code>{\"Keyword\": None}</code> for keywords that do not have a value</p>"},{"location":"cls/query/#pyobjectscript_gen.cls.Query.keywords--valid-query-keywords","title":"Valid Query keywords","text":"<ul> <li>ClientName \u2013 An alias used by client projections of this query.</li> <li>Final \u2013 Specifies whether this query is final (cannot be overridden in subclasses).</li> <li>Internal \u2013 Specifies whether this query definition is internal (not displayed in the class documentation).</li> <li>Private \u2013 Specifies whether the query is private.</li> <li>Requires \u2013 Specifies a list of privileges a user or process must have to call this query.</li> <li>SoapBindingStyle \u2013 Specifies the binding style or SOAP invocation mechanism used by this query, when it is used as a web method. Applies only in a class that is defined as a web service or web client.</li> <li>SoapBodyUse \u2013 Specifies the encoding used by the inputs and outputs of this query, when it is used as a web method. Applies only in a class that is defined as a web service or web client.</li> <li>SoapNameSpace \u2013 Specifies the namespace at the binding operation level in the WSDL for this query. Applies only in a class that is defined as a web service or web client.</li> <li>SqlName \u2013 Overrides the default name of the projected SQL stored procedure. Applies only if this query is projected as an SQL stored procedure.</li> <li>SqlProc \u2013 Specifies whether the query can be invoked as an SQL stored procedure.</li> <li>SqlView \u2013 Specifies whether to project this query as an SQL view.</li> <li>SqlViewName \u2013 Overrides the default name of the projected SQL view. Applies only if this query is projected as an SQL view.</li> <li>WebMethod \u2013 Specifies whether this query is a web method. Applies only in a class that is defined as a web service or web client.</li> </ul>"},{"location":"cls/query/#pyobjectscript_gen.cls.Query.return_type","title":"<code>return_type = '%SQLQuery'</code>","text":"<p>Class name used as return type</p> <p>Should be <code>%SQLQuery</code> in most cases</p>"},{"location":"cls/storage/","title":"Storage","text":"<p>               Bases: <code>Component</code></p> <p>Storage Definitions</p> <pre><code>Storage Name [ Keywords ]\n{\n    Definition\n}\n</code></pre> <p>Should usually not be used unless a custom storage definition is needed.</p>"},{"location":"cls/storage/#pyobjectscript_gen.cls.Storage.definition","title":"<code>definition = ''</code>","text":"<p>XML storage definition as string or list of string.</p> <p>XML storage definition syntax is not supported by this library and should be used in conjunction with a XML library.</p>"},{"location":"cls/storage/#pyobjectscript_gen.cls.Storage.keywords","title":"<code>keywords = field(default_factory=dict, kw_only=True)</code>","text":"<p>Storage Keywords</p> <p>Optional dict used to specify keywords for this component.</p> <p>Use <code>{\"Keyword\": None}</code> for keywords that do not have a value</p>"},{"location":"cls/storage/#pyobjectscript_gen.cls.Storage.keywords--valid-storage-keywords","title":"Valid Storage keywords","text":"<ul> <li>DataLocation \u2013 Specifies where data is stored for this class.</li> <li>DefaultData \u2013 Specifies the default data storage definition.</li> <li>Final \u2013 Specifies that the storage definition cannot be modified by subclasses.</li> <li>IdFunction \u2013 Specifies the system function to be used to assign new ID values for a persistent class using default storage.</li> <li>IdLocation \u2013 Specifies location of the ID counter.</li> <li>IndexLocation \u2013 Specifies the default storage location for indexes.</li> <li>SqlRowIdName \u2013 Specifies the name used for the row ID within SQL.</li> <li>SqlRowIdProperty \u2013 Specifies the SQL RowId property.</li> <li>SqlTableNumber \u2013 Specifies the internal SQL table number.</li> <li>State \u2013 Specifies the data definition used for a serial object.</li> <li>StreamLocation \u2013 Specifies the default storage location for stream properties.</li> <li>Type \u2013 Storage class used to provide persistence.</li> </ul>"},{"location":"cls/storage/#pyobjectscript_gen.cls.Storage.name","title":"<code>name = 'Default'</code>","text":"<p>Name of the Objectscript component</p> <p>\"Default\" for Storage components by default</p>"},{"location":"cls/trigger/","title":"Trigger","text":"<p>               Bases: <code>Component</code></p> <p>Syntax of Triggers in Class Definitions</p> <pre><code>Trigger Name [ Keywords ]  \n{ \n    Implementation\n}\n</code></pre>"},{"location":"cls/trigger/#pyobjectscript_gen.cls.Trigger.impl","title":"<code>impl = field(default_factory=list)</code>","text":"<p>Trigger implementation</p> <p>Can be a simple string for already indented and newline delimited code, or for use with <code>CodeMode = expression</code> or a list of strings for multiline code, in which case will be indented automatically by the generator.</p> <p>Objectscript routine code generation and syntax validation is not supported by this library.</p>"},{"location":"cls/trigger/#pyobjectscript_gen.cls.Trigger.keywords","title":"<code>keywords = field(default_factory=dict, kw_only=True)</code>","text":"<p>Trigger Syntax and Keywords</p> <p>Optional dict used to specify keywords for this component.</p> <p>Use <code>{\"Keyword\": None}</code> for keywords that do not have a value.</p>"},{"location":"cls/trigger/#pyobjectscript_gen.cls.Trigger.keywords--valid-trigger-keywords","title":"Valid Trigger keywords","text":"<ul> <li>CodeMode \u2013 Specifies how this trigger is implemented.</li> <li>Event \u2013 Specifies the SQL events that will fire this trigger. Required (no default).</li> <li>Final \u2013 Specifies whether this trigger is final (cannot be overridden in subclasses).</li> <li>Foreach \u2013 Controls when the trigger is fired.</li> <li>Internal \u2013 Specifies whether this trigger definition is internal (not displayed in the class documentation).</li> <li>Language \u2013 Specifies the language in which the trigger is written.</li> <li>NewTable \u2013 Specifies the name of the transition table that stores the new values of the row or statement affected by the event for this trigger.</li> <li>OldTable \u2013 Specifies the name of the transition table that stores the old values of the row or statement affected by the event for this trigger.</li> <li>Order \u2013 In the case of multiple triggers for the same EVENT and TIME, specifies the order in which the triggers should be fired.</li> <li>SqlName \u2013 Specifies the SQL name to use for this trigger.</li> <li>Time \u2013 Specifies whether the trigger is fired before or after the event.</li> <li>UpdateColumnList \u2013 Specifies one or more columns whose modification causes the trigger to be fired by SQL. Available only for TSQL.</li> </ul>"},{"location":"cls/xdata/","title":"XData","text":"<p>               Bases: <code>Component</code></p> <p>Defining and Using XData Blocks</p> <pre><code>XData Name [ Keywords ]\n{\n    Content\n}\n</code></pre>"},{"location":"cls/xdata/#pyobjectscript_gen.cls.XData.content","title":"<code>content</code>","text":"<p>Content of XData, can be data of any arbitrary format, as string or list of string.</p> <p>Specify Mime type with <code>keywords={\"MimeType\": type}</code>.</p>"},{"location":"cls/xdata/#pyobjectscript_gen.cls.XData.keywords","title":"<code>keywords = field(default_factory=dict, kw_only=True)</code>","text":"<p>XData Syntax and Keywords</p> <p>Optional dict used to specify keywords for this component.</p> <p>Use <code>{\"Keyword\": None}</code> for keywords that do not have a value.</p>"},{"location":"cls/xdata/#pyobjectscript_gen.cls.XData.keywords--valid-xdata-keywords","title":"Valid XData keywords","text":"<ul> <li>SchemaSpec \u2014 Optionally specifies an XML schema against which the XData can be validated.</li> <li>XMLNamespace \u2014 Optionally specifies the XML namespace to which the XData block belongs. You can also, of course, include namespace declarations within the XData block itself.</li> <li>MimeType \u2014 The MIME type (more formally, the Internet media typeOpens in a new tab) of the contents of the XData block. The default is text/xml.</li> </ul>"}]}