# GitHub Actions Workflow for Nightly Tests
# Runs comprehensive tests on a schedule to catch issues early

name: Nightly Tests

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

env:
  PACKAGE_NAME: ray_simplify

jobs:
  comprehensive-test:
    name: Comprehensive Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv (Unix)
      if: runner.os != 'Windows'
      run: |
        python -m pip install --upgrade pip uv

    - name: Install uv (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m pip install --upgrade pip uv

    - name: Install dependencies (Unix)
      if: runner.os != 'Windows'
      run: |
        uv venv .venv
        source .venv/bin/activate
        uv pip install -e ".[dev]"

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        uv venv .venv
        .venv\Scripts\activate
        uv pip install -e ".[dev]"

    - name: Run comprehensive tests (Unix)
      if: runner.os != 'Windows'
      run: |
        source .venv/bin/activate
        pytest --cov=${{ env.PACKAGE_NAME }} --cov-report=term-missing -v

    - name: Run comprehensive tests (Windows)
      if: runner.os == 'Windows'
      run: |
        .venv\Scripts\activate
        pytest --cov=${{ env.PACKAGE_NAME }} --cov-report=term-missing -v

    - name: Test package installation (Unix)
      if: runner.os != 'Windows'
      run: |
        python -m pip install build
        python -m build
        python -m pip install dist/*.whl
        python -c "import ray_simplify; print('Package installed successfully')"

    - name: Test package installation (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m pip install build
        python -m build
        python -m pip install (Get-ChildItem dist\*.whl | Select-Object -First 1).FullName
        python -c "import ray_simplify; print('Package installed successfully')"

  notify-failure:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: comprehensive-test
    if: failure()
    
    steps:
    - name: Create issue on failure
      uses: actions/github-script@v7
      with:
        script: |
          const title = `Nightly test failure - ${new Date().toISOString().split('T')[0]}`;
          const body = `
          ## Nightly Test Failure Report
          
          The nightly comprehensive tests have failed.
          
          **Details:**
          - **Workflow:** ${context.workflow}
          - **Run ID:** ${context.runId}
          - **Date:** ${new Date().toISOString()}
          - **Triggered by:** ${context.eventName}
          
          **Action Required:**
          Please investigate the failure and fix any issues found.
          
          [View failed run](${context.payload.repository.html_url}/actions/runs/${context.runId})
          `;
          
          // Check if an issue already exists for today
          const today = new Date().toISOString().split('T')[0];
          const existingIssues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'nightly-test-failure'
          });
          
          const todayIssue = existingIssues.data.find(issue => 
            issue.title.includes(today)
          );
          
          if (!todayIssue) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['bug', 'nightly-test-failure', 'automated']
            });
          }
