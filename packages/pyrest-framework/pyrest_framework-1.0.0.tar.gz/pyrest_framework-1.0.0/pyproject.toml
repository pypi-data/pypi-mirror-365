[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "pyrest-framework"
version = "1.0.0"
description = "Framework Python para criação de APIs REST - Estilo Express.js"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Mamadu Sama", email = "mamadusama19@gmail.com"}
]
maintainers = [
    {name = "Mamadu Sama", email = "mamadusama19@gmail.com"}
]
keywords = [
    "api", "rest", "framework", "web", "http", "server", 
    "express", "microframework", "ads", "education"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.7"
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]
examples = [
    "requests>=2.25.0",
]

[project.urls]
Homepage = "https://github.com/mamadusamadev/pyrest-framework"
Documentation = "https://github.com/mamadusamadev/pyrest-framework/blob/main/docs/README.md"
Repository = "https://github.com/mamadusamadev/pyrest-framework"
"Bug Tracker" = "https://github.com/mamadusamadev/pyrest-framework/issues"
Changelog = "https://github.com/mamadusamadev/pyrest-framework/blob/main/CHANGELOG.md"

[project.scripts]
pyrest-create = "pyrest.cli:create_project"
pyrest-serve = "pyrest.cli:serve_app"

[tool.setuptools]
packages = ["pyrest"]

[tool.setuptools.package-data]
pyrest = ["templates/*.py", "templates/*.md"]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=pyrest",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["pyrest"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]