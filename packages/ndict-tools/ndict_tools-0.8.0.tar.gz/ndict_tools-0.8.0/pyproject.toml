[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ndict-tools"
version = "0.8.0"
authors = [
    {name="biface"}
]
description = "An implementation of nested dictionaries"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: CeCILL-C Free Software License Agreement (CECILL-C)",
    "Operating System :: OS Independent",
    "Topic :: Utilities",
]

[project.urls]
Homepage = "https://github.com/biface/ndt"
Documentation = "https://ndict-tools.readthedocs.io/en/latest/"
Repository = "https://github.com/biface/ndt.git"
Issues = "https://github.com/biface/ndt/issues"

[tool.tox]
minversion = "3.24.5"
envlist = ["py39", "py310", "py311", "py312", "lint", "isort", "black", "fix", "coverage", "bandit", "local", "gh-ci"]

[tool.tox.testenv]
setenv = { PYTHONPATH = "{toxinidir}/src:{toxinidir}/tests" }
deps = [
    "pytest",
    "pytest-cov"
]
commands = [
    "pytest --cov=src --cov-report=term-missing --cov-report=xml:coverage/coverage.xml --cov-report=html:coverage/coverage_html tests"
]

[tool.tox.testenv.lint]
description = "Lint the code with flake8"
deps = ["flake8"]
commands = ["flake8 src tests"]

[tool.tox.testenv.isort]
description = "Check import sorting with isort"
deps = ["isort"]
commands = ["isort --check-only --diff src"]

[tool.tox.testenv.black]
description = "Check code formatting with black"
deps = ["black"]
commands = ["black --check src"]

[tool.tox.testenv.fix]
description = "Auto-fix formatting of package code (tests are excluded) issues using Black and isort"
deps = ["black", "isort"]
commands = [
    "black src",
    "isort src"
]

[tool.tox.testenv.coverage]
description = "Generate code coverage report"
deps = ["pytest", "pytest-cov"]
commands = [
    "pytest --cov=src --cov-report=term-missing --cov-report=xml:coverage/coverage.xml --cov-report=html:coverage/coverage_html tests"
]

[tool.tox.testenv.bandit]
description = "Run security analysis with bandit"
deps = ["bandit"]
commands = ["bandit -r src"]

[tool.tox.testenv.local]
description = "Run fix, lint, bandit, and coverage in sequence"
deps = ["black", "isort", "bandit", "pytest", "pytest-cov"]
commands = [
    "black src tests",
    "isort src tests",
    "bandit -r src",
    "pytest --cov=src --cov-report=term-missing --cov-report=xml:coverage/coverage.xml --cov-report=html:coverage/coverage_html tests"
]

[tool.tox.testenv.gh-ci]
description = "Run checks (Black, isort, Bandit, pytest with coverage) for GitHub CI"
deps = ["black", "isort", "bandit", "pytest", "pytest-cov"]
commands = [
    "pytest --cov=src --cov-report=term-missing --cov-report=xml:coverage/coverage.xml --cov-report=html:coverage/coverage_html tests"
]

[tool.flake8]
max-line-length = 88
ignore = ["E501"]
extend-ignore = ["E203", "W503"]
exclude = [".tox", ".git", "__pycache__", "build", "dist"]

[tool.isort]
profile = "black"
line_length = 88
known_first_party = "src"
multi_line_output = 3
include_trailing_comma = true
