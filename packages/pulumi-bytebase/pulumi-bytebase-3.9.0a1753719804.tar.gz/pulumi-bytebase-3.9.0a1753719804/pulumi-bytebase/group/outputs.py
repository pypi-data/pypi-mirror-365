# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetListGroupResult',
    'GetListGroupMemberResult',
]

@pulumi.output_type
class GetListGroupResult(dict):
    def __init__(__self__, *,
                 description: builtins.str,
                 members: Sequence['outputs.GetListGroupMemberResult'],
                 name: builtins.str,
                 source: builtins.str,
                 title: builtins.str):
        """
        :param builtins.str description: The group description.
        :param Sequence['GetListGroupMemberArgs'] members: The members in the group.
        :param builtins.str name: The group name in groups/{email} format.
        :param builtins.str source: Source means where the group comes from. For now we support Entra ID SCIM sync, so the source could be Entra ID.
        :param builtins.str title: The group title.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "members", members)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "source", source)
        pulumi.set(__self__, "title", title)

    @property
    @pulumi.getter
    def description(self) -> builtins.str:
        """
        The group description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def members(self) -> Sequence['outputs.GetListGroupMemberResult']:
        """
        The members in the group.
        """
        return pulumi.get(self, "members")

    @property
    @pulumi.getter
    def name(self) -> builtins.str:
        """
        The group name in groups/{email} format.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def source(self) -> builtins.str:
        """
        Source means where the group comes from. For now we support Entra ID SCIM sync, so the source could be Entra ID.
        """
        return pulumi.get(self, "source")

    @property
    @pulumi.getter
    def title(self) -> builtins.str:
        """
        The group title.
        """
        return pulumi.get(self, "title")


@pulumi.output_type
class GetListGroupMemberResult(dict):
    def __init__(__self__, *,
                 member: builtins.str,
                 role: builtins.str):
        """
        :param builtins.str member: The member in users/{email} format.
        :param builtins.str role: The member's role in the group.
        """
        pulumi.set(__self__, "member", member)
        pulumi.set(__self__, "role", role)

    @property
    @pulumi.getter
    def member(self) -> builtins.str:
        """
        The member in users/{email} format.
        """
        return pulumi.get(self, "member")

    @property
    @pulumi.getter
    def role(self) -> builtins.str:
        """
        The member's role in the group.
        """
        return pulumi.get(self, "role")


