# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetListResult',
    'AwaitableGetListResult',
    'get_list',
    'get_list_output',
]

@pulumi.output_type
class GetListResult:
    """
    A collection of values returned by getList.
    """
    def __init__(__self__, id=None, review_configs=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if review_configs and not isinstance(review_configs, list):
            raise TypeError("Expected argument 'review_configs' to be a list")
        pulumi.set(__self__, "review_configs", review_configs)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="reviewConfigs")
    def review_configs(self) -> Sequence['outputs.GetListReviewConfigResult']:
        return pulumi.get(self, "review_configs")


class AwaitableGetListResult(GetListResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetListResult(
            id=self.id,
            review_configs=self.review_configs)


def get_list(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetListResult:
    """
    The review config data source list.
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('bytebase:ReviewConfig/getList:getList', __args__, opts=opts, typ=GetListResult).value

    return AwaitableGetListResult(
        id=pulumi.get(__ret__, 'id'),
        review_configs=pulumi.get(__ret__, 'review_configs'))
def get_list_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetListResult]:
    """
    The review config data source list.
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('bytebase:ReviewConfig/getList:getList', __args__, opts=opts, typ=GetListResult)
    return __ret__.apply(lambda __response__: GetListResult(
        id=pulumi.get(__response__, 'id'),
        review_configs=pulumi.get(__response__, 'review_configs')))
