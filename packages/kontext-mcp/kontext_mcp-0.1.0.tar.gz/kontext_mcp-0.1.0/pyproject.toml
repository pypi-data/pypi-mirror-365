[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kontext-mcp"
version = "0.1.0"
description = "Portable, provider-agnostic memory on top of Azure Data Explorer (Kusto)"
readme = { file = "README.md", content-type = "text/markdown" }
license = { text = "MIT" }
authors = [
    { name = "Kontext Team" }
]
keywords = ["mcp", "memory", "ai", "agents", "kusto", "azure", "embeddings"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "mcp>=1.0.0",
    "azure-kusto-data>=4.0.0",
    "azure-kusto-ingest>=4.0.0",
    "python-dotenv>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/danield137/kontext-mcp"
Repository = "https://github.com/danield137/kontext-mcp"
Issues = "https://github.com/danield137/kontext-mcp/issues"
Documentation = "https://github.com/danield137/kontext-mcp#readme"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
kontext-mcp = "kontext_mcp.server:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    #"--cov=kontext_mcp",
    #"--cov-report=term-missing",
    #"--cov-report=html:htmlcov",
    #"--cov-fail-under=70",
    "-m", "not e2e",
]
markers = [
    "unit: Unit tests",
    "slow: Slow running tests",
    "e2e: End-to-end tests against real cluster",
]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.black]
line-length = 120
target-version = ["py310"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.coverage.run]
source = ["kontext_mcp"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
