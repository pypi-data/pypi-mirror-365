Metadata-Version: 2.4
Name: globalgenie
Version: 1.0.0
Summary: GlobalGenie: The Complete AI Agent Framework for building intelligent, autonomous agents with memory, reasoning, and multi-modal capabilities
Home-page: https://github.com/RahulEdward/global-genie
Author: GlobalGenie Team
Author-email: GlobalGenie Team <team@globalgenie.com>
Maintainer: GlobalGenie Team
Maintainer-email: GlobalGenie Team <team@globalgenie.com>
License: Copyright (c) Agno, Inc.
        
        Mozilla Public License Version 2.0
        ==================================
        
        1. Definitions
        --------------
        
        1.1. "Contributor"
            means each individual or legal entity that creates, contributes to
            the creation of, or owns Covered Software.
        
        1.2. "Contributor Version"
            means the combination of the Contributions of others (if any) used
            by a Contributor and that particular Contributor's Contribution.
        
        1.3. "Contribution"
            means Covered Software of a particular Contributor.
        
        1.4. "Covered Software"
            means Source Code Form to which the initial Contributor has attached
            the notice in Exhibit A, the Executable Form of such Source Code
            Form, and Modifications of such Source Code Form, in each case
            including portions thereof.
        
        1.5. "Incompatible With Secondary Licenses"
            means
        
            (a) that the initial Contributor has attached the notice described
                in Exhibit B to the Covered Software; or
        
            (b) that the Covered Software was made available under the terms of
                version 1.1 or earlier of the License, but not also under the
                terms of a Secondary License.
        
        1.6. "Executable Form"
            means any form of the work other than Source Code Form.
        
        1.7. "Larger Work"
            means a work that combines Covered Software with other material, in
            a separate file or files, that is not Covered Software.
        
        1.8. "License"
            means this document.
        
        1.9. "Licensable"
            means having the right to grant, to the maximum extent possible,
            whether at the time of the initial grant or subsequently, any and
            all of the rights conveyed by this License.
        
        1.10. "Modifications"
            means any of the following:
        
            (a) any file in Source Code Form that results from an addition to,
                deletion from, or modification of the contents of Covered
                Software; or
        
            (b) any new file in Source Code Form that contains any Covered
                Software.
        
        1.11. "Patent Claims" of a Contributor
            means any patent claim(s), including without limitation, method,
            process, and apparatus claims, in any patent Licensable by such
            Contributor that would be infringed, but for the grant of the
            License, by the making, using, selling, offering for sale, having
            made, import, or transfer of either its Contributions or its
            Contributor Version.
        
        1.12. "Secondary License"
            means either the GNU General Public License, Version 2.0, the GNU
            Lesser General Public License, Version 2.1, the GNU Affero General
            Public License, Version 3.0, or any later versions of those
            licenses.
        
        1.13. "Source Code Form"
            means the form of the work preferred for making modifications.
        
        1.14. "You" (or "Your")
            means an individual or a legal entity exercising rights under this
            License. For legal entities, "You" includes any entity that
            controls, is controlled by, or is under common control with You. For
            purposes of this definition, "control" means (a) the power, direct
            or indirect, to cause the direction or management of such entity,
            whether by contract or otherwise, or (b) ownership of more than
            fifty percent (50%) of the outstanding shares or beneficial
            ownership of such entity.
        
        2. License Grants and Conditions
        --------------------------------
        
        2.1. Grants
        
        Each Contributor hereby grants You a world-wide, royalty-free,
        non-exclusive license:
        
        (a) under intellectual property rights (other than patent or trademark)
            Licensable by such Contributor to use, reproduce, make available,
            modify, display, perform, distribute, and otherwise exploit its
            Contributions, either on an unmodified basis, with Modifications, or
            as part of a Larger Work; and
        
        (b) under Patent Claims of such Contributor to make, use, sell, offer
            for sale, have made, import, and otherwise transfer either its
            Contributions or its Contributor Version.
        
        2.2. Effective Date
        
        The licenses granted in Section 2.1 with respect to any Contribution
        become effective for each Contribution on the date the Contributor first
        distributes such Contribution.
        
        2.3. Limitations on Grant Scope
        
        The licenses granted in this Section 2 are the only rights granted under
        this License. No additional rights or licenses will be implied from the
        distribution or licensing of Covered Software under this License.
        Notwithstanding Section 2.1(b) above, no patent license is granted by a
        Contributor:
        
        (a) for any code that a Contributor has removed from Covered Software;
            or
        
        (b) for infringements caused by: (i) Your and any other third party's
            modifications of Covered Software, or (ii) the combination of its
            Contributions with other software (except as part of its Contributor
            Version); or
        
        (c) under Patent Claims infringed by Covered Software in the absence of
            its Contributions.
        
        This License does not grant any rights in the trademarks, service marks,
        or logos of any Contributor (except as may be necessary to comply with
        the notice requirements in Section 3.4).
        
        2.4. Subsequent Licenses
        
        No Contributor makes additional grants as a result of Your choice to
        distribute the Covered Software under a subsequent version of this
        License (see Section 10.2) or under the terms of a Secondary License (if
        permitted under the terms of Section 3.3).
        
        2.5. Representation
        
        Each Contributor represents that the Contributor believes its
        Contributions are its original creation(s) or it has sufficient rights
        to grant the rights to its Contributions conveyed by this License.
        
        2.6. Fair Use
        
        This License is not intended to limit any rights You have under
        applicable copyright doctrines of fair use, fair dealing, or other
        equivalents.
        
        2.7. Conditions
        
        Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted
        in Section 2.1.
        
        3. Responsibilities
        -------------------
        
        3.1. Distribution of Source Form
        
        All distribution of Covered Software in Source Code Form, including any
        Modifications that You create or to which You contribute, must be under
        the terms of this License. You must inform recipients that the Source
        Code Form of the Covered Software is governed by the terms of this
        License, and how they can obtain a copy of this License. You may not
        attempt to alter or restrict the recipients' rights in the Source Code
        Form.
        
        3.2. Distribution of Executable Form
        
        If You distribute Covered Software in Executable Form then:
        
        (a) such Covered Software must also be made available in Source Code
            Form, as described in Section 3.1, and You must inform recipients of
            the Executable Form how they can obtain a copy of such Source Code
            Form by reasonable means in a timely manner, at a charge no more
            than the cost of distribution to the recipient; and
        
        (b) You may distribute such Executable Form under the terms of this
            License, or sublicense it under different terms, provided that the
            license for the Executable Form does not attempt to limit or alter
            the recipients' rights in the Source Code Form under this License.
        
        3.3. Distribution of a Larger Work
        
        You may create and distribute a Larger Work under terms of Your choice,
        provided that You also comply with the requirements of this License for
        the Covered Software. If the Larger Work is a combination of Covered
        Software with a work governed by one or more Secondary Licenses, and the
        Covered Software is not Incompatible With Secondary Licenses, this
        License permits You to additionally distribute such Covered Software
        under the terms of such Secondary License(s), so that the recipient of
        the Larger Work may, at their option, further distribute the Covered
        Software under the terms of either this License or such Secondary
        License(s).
        
        3.4. Notices
        
        You may not remove or alter the substance of any license notices
        (including copyright notices, patent notices, disclaimers of warranty,
        or limitations of liability) contained within the Source Code Form of
        the Covered Software, except that You may alter any license notices to
        the extent required to remedy known factual inaccuracies.
        
        3.5. Application of Additional Terms
        
        You may choose to offer, and to charge a fee for, warranty, support,
        indemnity or liability obligations to one or more recipients of Covered
        Software. However, You may do so only on Your own behalf, and not on
        behalf of any Contributor. You must make it absolutely clear that any
        such warranty, support, indemnity, or liability obligation is offered by
        You alone, and You hereby agree to indemnify every Contributor for any
        liability incurred by such Contributor as a result of warranty, support,
        indemnity or liability terms You offer. You may include additional
        disclaimers of warranty and limitations of liability specific to any
        jurisdiction.
        
        4. Inability to Comply Due to Statute or Regulation
        ---------------------------------------------------
        
        If it is impossible for You to comply with any of the terms of this
        License with respect to some or all of the Covered Software due to
        statute, judicial order, or regulation then You must: (a) comply with
        the terms of this License to the maximum extent possible; and (b)
        describe the limitations and the code they affect. Such description must
        be placed in a text file included with all distributions of the Covered
        Software under this License. Except to the extent prohibited by statute
        or regulation, such description must be sufficiently detailed for a
        recipient of ordinary skill to be able to understand it.
        
        5. Termination
        --------------
        
        5.1. The rights granted under this License will terminate automatically
        if You fail to comply with any of its terms. However, if You become
        compliant, then the rights granted under this License from a particular
        Contributor are reinstated (a) provisionally, unless and until such
        Contributor explicitly and finally terminates Your grants, and (b) on an
        ongoing basis, if such Contributor fails to notify You of the
        non-compliance by some reasonable means prior to 60 days after You have
        come back into compliance. Moreover, Your grants from a particular
        Contributor are reinstated on an ongoing basis if such Contributor
        notifies You of the non-compliance by some reasonable means, this is the
        first time You have received notice of non-compliance with this License
        from such Contributor, and You become compliant prior to 30 days after
        Your receipt of the notice.
        
        5.2. If You initiate litigation against any entity by asserting a patent
        infringement claim (excluding declaratory judgment actions,
        counter-claims, and cross-claims) alleging that a Contributor Version
        directly or indirectly infringes any patent, then the rights granted to
        You by any and all Contributors for the Covered Software under Section
        2.1 of this License shall terminate.
        
        5.3. In the event of termination under Sections 5.1 or 5.2 above, all
        end user license agreements (excluding distributors and resellers) which
        have been validly granted by You or Your distributors under this License
        prior to termination shall survive termination.
        
        ************************************************************************
        *                                                                      *
        *  6. Disclaimer of Warranty                                           *
        *  -------------------------                                           *
        *                                                                      *
        *  Covered Software is provided under this License on an "as is"       *
        *  basis, without warranty of any kind, either expressed, implied, or  *
        *  statutory, including, without limitation, warranties that the       *
        *  Covered Software is free of defects, merchantable, fit for a        *
        *  particular purpose or non-infringing. The entire risk as to the     *
        *  quality and performance of the Covered Software is with You.        *
        *  Should any Covered Software prove defective in any respect, You     *
        *  (not any Contributor) assume the cost of any necessary servicing,   *
        *  repair, or correction. This disclaimer of warranty constitutes an   *
        *  essential part of this License. No use of any Covered Software is   *
        *  authorized under this License except under this disclaimer.         *
        *                                                                      *
        ************************************************************************
        
        ************************************************************************
        *                                                                      *
        *  7. Limitation of Liability                                          *
        *  --------------------------                                          *
        *                                                                      *
        *  Under no circumstances and under no legal theory, whether tort      *
        *  (including negligence), contract, or otherwise, shall any           *
        *  Contributor, or anyone who distributes Covered Software as          *
        *  permitted above, be liable to You for any direct, indirect,         *
        *  special, incidental, or consequential damages of any character      *
        *  including, without limitation, damages for lost profits, loss of    *
        *  goodwill, work stoppage, computer failure or malfunction, or any    *
        *  and all other commercial damages or losses, even if such party      *
        *  shall have been informed of the possibility of such damages. This   *
        *  limitation of liability shall not apply to liability for death or   *
        *  personal injury resulting from such party's negligence to the       *
        *  extent applicable law prohibits such limitation. Some               *
        *  jurisdictions do not allow the exclusion or limitation of           *
        *  incidental or consequential damages, so this exclusion and          *
        *  limitation may not apply to You.                                    *
        *                                                                      *
        ************************************************************************
        
        8. Litigation
        -------------
        
        Any litigation relating to this License may be brought only in the
        courts of a jurisdiction where the defendant maintains its principal
        place of business and such litigation shall be governed by laws of that
        jurisdiction, without reference to its conflict-of-law provisions.
        Nothing in this Section shall prevent a party's ability to bring
        cross-claims or counter-claims.
        
        9. Miscellaneous
        ----------------
        
        This License represents the complete agreement concerning the subject
        matter hereof. If any provision of this License is held to be
        unenforceable, such provision shall be reformed only to the extent
        necessary to make it enforceable. Any law or regulation which provides
        that the language of a contract shall be construed against the drafter
        shall not be used to construe this License against a Contributor.
        
        10. Versions of the License
        ---------------------------
        
        10.1. New Versions
        
        Mozilla Foundation is the license steward. Except as provided in Section
        10.3, no one other than the license steward has the right to modify or
        publish new versions of this License. Each version will be given a
        distinguishing version number.
        
        10.2. Effect of New Versions
        
        You may distribute the Covered Software under the terms of the version
        of the License under which You originally received the Covered Software,
        or under the terms of any subsequent version published by the license
        steward.
        
        10.3. Modified Versions
        
        If you create software not governed by this License, and you want to
        create a new license for such software, you may create and use a
        modified version of this License if you rename the license and remove
        any references to the name of the license steward (except to note that
        such modified license differs from this License).
        
        10.4. Distributing Source Code Form that is Incompatible With Secondary
        Licenses
        
        If You choose to distribute Source Code Form that is Incompatible With
        Secondary Licenses under the terms of this version of the License, the
        notice described in Exhibit B of this License must be attached.
        
        Exhibit A - Source Code Form License Notice
        -------------------------------------------
        
          This Source Code Form is subject to the terms of the Mozilla Public
          License, v. 2.0. If a copy of the MPL was not distributed with this
          file, You can obtain one at http://mozilla.org/MPL/2.0/.
        
        If it is not possible or desirable to put the notice in a particular
        file, then You may include the notice in a location (such as a LICENSE
        file in a relevant directory) where a recipient would be likely to look
        for such a notice.
        
        You may add additional accurate notices of copyright ownership.
        
        Exhibit B - "Incompatible With Secondary Licenses" Notice
        ---------------------------------------------------------
        
          This Source Code Form is "Incompatible With Secondary Licenses", as
          defined by the Mozilla Public License, v. 2.0.
        
Project-URL: homepage, https://github.com/RahulEdward/global-genie
Project-URL: documentation, https://github.com/RahulEdward/global-genie/wiki
Project-URL: repository, https://github.com/RahulEdward/global-genie
Project-URL: changelog, https://github.com/RahulEdward/global-genie/releases
Project-URL: issues, https://github.com/RahulEdward/global-genie/issues
Project-URL: discussions, https://github.com/RahulEdward/global-genie/discussions
Project-URL: support, https://github.com/RahulEdward/global-genie/discussions
Project-URL: source, https://github.com/RahulEdward/global-genie
Project-URL: tracker, https://github.com/RahulEdward/global-genie/issues
Keywords: ai,agents,automation,multi-agent,llm,artificial-intelligence,autonomous-agents,reasoning,memory,knowledge-base,rag,framework,openai,anthropic,google,chatbot,machine-learning,nlp,conversational-ai
Platform: any
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Operating System :: OS Independent
Classifier: Operating System :: POSIX
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: MacOS
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries
Classifier: Topic :: Communications :: Chat
Classifier: Topic :: System :: Distributed Computing
Classifier: Environment :: Console
Classifier: Environment :: Web Environment
Classifier: Framework :: AsyncIO
Classifier: Natural Language :: English
Classifier: Typing :: Typed
Requires-Python: >=3.8,<4
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: docstring-parser
Requires-Dist: gitpython
Requires-Dist: httpx
Requires-Dist: pydantic-settings
Requires-Dist: pydantic
Requires-Dist: python-dotenv
Requires-Dist: python-multipart
Requires-Dist: pyyaml
Requires-Dist: rich
Requires-Dist: tomli
Requires-Dist: typer
Requires-Dist: typing-extensions
Provides-Extra: dev
Requires-Dist: mypy; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-asyncio; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-mock; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: timeout-decorator; extra == "dev"
Requires-Dist: types-pyyaml; extra == "dev"
Requires-Dist: types-aiofiles; extra == "dev"
Requires-Dist: fastapi; extra == "dev"
Requires-Dist: uvicorn; extra == "dev"
Requires-Dist: arxiv; extra == "dev"
Provides-Extra: integration-tests
Requires-Dist: exa_py; extra == "integration-tests"
Requires-Dist: duckduckgo-search; extra == "integration-tests"
Requires-Dist: yfinance; extra == "integration-tests"
Requires-Dist: sqlalchemy; extra == "integration-tests"
Requires-Dist: Pillow; extra == "integration-tests"
Provides-Extra: opentelemetry
Requires-Dist: opentelemetry-sdk; extra == "opentelemetry"
Requires-Dist: opentelemetry-exporter-otlp; extra == "opentelemetry"
Provides-Extra: weave
Requires-Dist: weave; extra == "weave"
Provides-Extra: openlit
Requires-Dist: openlit; extra == "openlit"
Requires-Dist: globalgenie[opentelemetry]; extra == "openlit"
Provides-Extra: arize
Requires-Dist: arize-phoenix; extra == "arize"
Requires-Dist: globalgenie[opentelemetry]; extra == "arize"
Requires-Dist: opentelemetry-exporter-otlp-proto-grpc; extra == "arize"
Requires-Dist: opentelemetry-distro; extra == "arize"
Provides-Extra: langfuse
Requires-Dist: langfuse; extra == "langfuse"
Provides-Extra: aws-bedrock
Requires-Dist: boto3; extra == "aws-bedrock"
Requires-Dist: aioboto3; extra == "aws-bedrock"
Provides-Extra: anthropic
Requires-Dist: anthropic; extra == "anthropic"
Provides-Extra: azure
Requires-Dist: azure-ai-inference; extra == "azure"
Requires-Dist: aiohttp; extra == "azure"
Provides-Extra: cerebras
Requires-Dist: cerebras-cloud-sdk; extra == "cerebras"
Provides-Extra: cohere
Requires-Dist: cohere; extra == "cohere"
Provides-Extra: infinity
Requires-Dist: infinity_client; extra == "infinity"
Provides-Extra: google
Requires-Dist: google-genai; extra == "google"
Provides-Extra: groq
Requires-Dist: groq; extra == "groq"
Provides-Extra: ibm
Requires-Dist: ibm-watsonx-ai; extra == "ibm"
Provides-Extra: litellm
Requires-Dist: litellm; extra == "litellm"
Provides-Extra: lmstudio
Requires-Dist: lmstudio; extra == "lmstudio"
Provides-Extra: meta
Requires-Dist: llama-api-client; extra == "meta"
Provides-Extra: mistral
Requires-Dist: mistralai; extra == "mistral"
Provides-Extra: ollama
Requires-Dist: ollama; extra == "ollama"
Provides-Extra: openai
Requires-Dist: openai; extra == "openai"
Provides-Extra: portkey
Requires-Dist: portkey-ai; extra == "portkey"
Provides-Extra: agentql
Requires-Dist: agentql; extra == "agentql"
Provides-Extra: apify
Requires-Dist: apify-client; extra == "apify"
Provides-Extra: brave
Requires-Dist: brave-search; extra == "brave"
Provides-Extra: browserbase
Requires-Dist: browserbase; extra == "browserbase"
Requires-Dist: playwright; extra == "browserbase"
Provides-Extra: cartesia
Requires-Dist: cartesia; extra == "cartesia"
Provides-Extra: confluence
Requires-Dist: atlassian-python-api; extra == "confluence"
Provides-Extra: ddg
Requires-Dist: duckduckgo-search; extra == "ddg"
Provides-Extra: duckdb
Requires-Dist: duckdb; extra == "duckdb"
Provides-Extra: elevenlabs
Requires-Dist: elevenlabs; extra == "elevenlabs"
Provides-Extra: evm
Requires-Dist: web3; extra == "evm"
Provides-Extra: exa
Requires-Dist: exa_py; extra == "exa"
Provides-Extra: fal
Requires-Dist: fal_client; extra == "fal"
Provides-Extra: firecrawl
Requires-Dist: firecrawl-py; extra == "firecrawl"
Provides-Extra: crawl4ai
Requires-Dist: crawl4ai; extra == "crawl4ai"
Provides-Extra: github
Requires-Dist: PyGithub; extra == "github"
Provides-Extra: gmail
Requires-Dist: google-api-python-client; extra == "gmail"
Requires-Dist: google-auth-httplib2; extra == "gmail"
Requires-Dist: google-auth-oauthlib; extra == "gmail"
Provides-Extra: google-bigquery
Requires-Dist: google-cloud-bigquery; extra == "google-bigquery"
Provides-Extra: googlemaps
Requires-Dist: googlemaps; extra == "googlemaps"
Requires-Dist: google-maps-places; extra == "googlemaps"
Provides-Extra: matplotlib
Requires-Dist: matplotlib; extra == "matplotlib"
Provides-Extra: mcp
Requires-Dist: mcp; extra == "mcp"
Provides-Extra: mem0
Requires-Dist: mem0ai; extra == "mem0"
Provides-Extra: newspaper
Requires-Dist: newspaper4k; extra == "newspaper"
Requires-Dist: lxml_html_clean; extra == "newspaper"
Provides-Extra: opencv
Requires-Dist: opencv-python; extra == "opencv"
Provides-Extra: psycopg2
Requires-Dist: psycopg2-binary; extra == "psycopg2"
Provides-Extra: todoist
Requires-Dist: todoist-api-python; extra == "todoist"
Provides-Extra: valyu
Requires-Dist: valyu; extra == "valyu"
Provides-Extra: webex
Requires-Dist: webexpythonsdk; extra == "webex"
Provides-Extra: yfinance
Requires-Dist: yfinance; extra == "yfinance"
Provides-Extra: youtube
Requires-Dist: youtube_transcript_api; extra == "youtube"
Provides-Extra: zep
Requires-Dist: zep-cloud; extra == "zep"
Provides-Extra: daytona
Requires-Dist: daytona; extra == "daytona"
Provides-Extra: oxylabs
Requires-Dist: oxylabs; extra == "oxylabs"
Provides-Extra: sql
Requires-Dist: sqlalchemy; extra == "sql"
Provides-Extra: postgres
Requires-Dist: psycopg-binary; extra == "postgres"
Requires-Dist: psycopg; extra == "postgres"
Provides-Extra: sqlite
Requires-Dist: sqlalchemy; extra == "sqlite"
Provides-Extra: gcs
Requires-Dist: google-cloud-storage; extra == "gcs"
Provides-Extra: firestore
Requires-Dist: google-cloud-firestore; extra == "firestore"
Provides-Extra: redis
Requires-Dist: redis; extra == "redis"
Provides-Extra: pgvector
Requires-Dist: pgvector; extra == "pgvector"
Provides-Extra: chromadb
Requires-Dist: chromadb; extra == "chromadb"
Provides-Extra: lancedb
Requires-Dist: lancedb==0.20.0; extra == "lancedb"
Requires-Dist: tantivy; extra == "lancedb"
Provides-Extra: qdrant
Requires-Dist: qdrant-client; extra == "qdrant"
Provides-Extra: couchbase
Requires-Dist: couchbase; extra == "couchbase"
Provides-Extra: cassandra
Requires-Dist: cassio; extra == "cassandra"
Provides-Extra: mongodb
Requires-Dist: pymongo[srv]; extra == "mongodb"
Provides-Extra: singlestore
Requires-Dist: sqlalchemy; extra == "singlestore"
Provides-Extra: weaviate
Requires-Dist: weaviate-client; extra == "weaviate"
Provides-Extra: milvusdb
Requires-Dist: pymilvus>=2.5.10; extra == "milvusdb"
Provides-Extra: clickhouse
Requires-Dist: clickhouse-connect; extra == "clickhouse"
Provides-Extra: pinecone
Requires-Dist: pinecone==5.4.2; extra == "pinecone"
Provides-Extra: surrealdb
Requires-Dist: surrealdb>=1.0.4; extra == "surrealdb"
Provides-Extra: pdf
Requires-Dist: pypdf; extra == "pdf"
Requires-Dist: rapidocr_onnxruntime; extra == "pdf"
Provides-Extra: docx
Requires-Dist: python-docx; extra == "docx"
Provides-Extra: text
Requires-Dist: aiofiles; extra == "text"
Provides-Extra: csv
Requires-Dist: aiofiles; extra == "csv"
Provides-Extra: markdown
Requires-Dist: unstructured; extra == "markdown"
Requires-Dist: markdown; extra == "markdown"
Requires-Dist: aiofiles; extra == "markdown"
Provides-Extra: agui
Requires-Dist: ag-ui-protocol; extra == "agui"
Provides-Extra: huggingface
Requires-Dist: huggingface-hub; extra == "huggingface"
Provides-Extra: performance
Requires-Dist: memory_profiler; extra == "performance"
Provides-Extra: readygenies
Requires-Dist: inquirer; extra == "readygenies"
Requires-Dist: email_validator; extra == "readygenies"
Provides-Extra: docker
Requires-Dist: globalgenie-docker; extra == "docker"
Provides-Extra: aws
Requires-Dist: globalgenie-aws; extra == "aws"
Requires-Dist: globalgenie-docker; extra == "aws"
Provides-Extra: models
Requires-Dist: globalgenie[aws-bedrock]; extra == "models"
Requires-Dist: globalgenie[anthropic]; extra == "models"
Requires-Dist: globalgenie[azure]; extra == "models"
Requires-Dist: globalgenie[cerebras]; extra == "models"
Requires-Dist: globalgenie[cohere]; extra == "models"
Requires-Dist: globalgenie[infinity]; extra == "models"
Requires-Dist: globalgenie[google]; extra == "models"
Requires-Dist: globalgenie[groq]; extra == "models"
Requires-Dist: globalgenie[ibm]; extra == "models"
Requires-Dist: globalgenie[infinity]; extra == "models"
Requires-Dist: globalgenie[litellm]; extra == "models"
Requires-Dist: globalgenie[meta]; extra == "models"
Requires-Dist: globalgenie[mistral]; extra == "models"
Requires-Dist: globalgenie[ollama]; extra == "models"
Requires-Dist: globalgenie[openai]; extra == "models"
Requires-Dist: globalgenie[portkey]; extra == "models"
Provides-Extra: tools
Requires-Dist: globalgenie[apify]; extra == "tools"
Requires-Dist: globalgenie[brave]; extra == "tools"
Requires-Dist: globalgenie[exa]; extra == "tools"
Requires-Dist: globalgenie[cartesia]; extra == "tools"
Requires-Dist: globalgenie[ddg]; extra == "tools"
Requires-Dist: globalgenie[duckdb]; extra == "tools"
Requires-Dist: globalgenie[newspaper]; extra == "tools"
Requires-Dist: globalgenie[youtube]; extra == "tools"
Requires-Dist: globalgenie[firecrawl]; extra == "tools"
Requires-Dist: globalgenie[crawl4ai]; extra == "tools"
Requires-Dist: globalgenie[github]; extra == "tools"
Requires-Dist: globalgenie[gmail]; extra == "tools"
Requires-Dist: globalgenie[googlemaps]; extra == "tools"
Requires-Dist: globalgenie[todoist]; extra == "tools"
Requires-Dist: globalgenie[matplotlib]; extra == "tools"
Requires-Dist: globalgenie[elevenlabs]; extra == "tools"
Requires-Dist: globalgenie[evm]; extra == "tools"
Requires-Dist: globalgenie[fal]; extra == "tools"
Requires-Dist: globalgenie[webex]; extra == "tools"
Requires-Dist: globalgenie[mcp]; extra == "tools"
Requires-Dist: globalgenie[browserbase]; extra == "tools"
Requires-Dist: globalgenie[agentql]; extra == "tools"
Requires-Dist: globalgenie[opencv]; extra == "tools"
Requires-Dist: globalgenie[valyu]; extra == "tools"
Requires-Dist: globalgenie[confluence]; extra == "tools"
Requires-Dist: globalgenie[oxylabs]; extra == "tools"
Requires-Dist: globalgenie[zep]; extra == "tools"
Requires-Dist: globalgenie[mem0]; extra == "tools"
Requires-Dist: globalgenie[google_bigquery]; extra == "tools"
Requires-Dist: globalgenie[psycopg2]; extra == "tools"
Provides-Extra: storage
Requires-Dist: globalgenie[sql]; extra == "storage"
Requires-Dist: globalgenie[postgres]; extra == "storage"
Requires-Dist: globalgenie[sqlite]; extra == "storage"
Requires-Dist: globalgenie[gcs]; extra == "storage"
Requires-Dist: globalgenie[firestore]; extra == "storage"
Requires-Dist: globalgenie[redis]; extra == "storage"
Provides-Extra: vectordbs
Requires-Dist: globalgenie[pgvector]; extra == "vectordbs"
Requires-Dist: globalgenie[chromadb]; extra == "vectordbs"
Requires-Dist: globalgenie[lancedb]; extra == "vectordbs"
Requires-Dist: globalgenie[qdrant]; extra == "vectordbs"
Requires-Dist: globalgenie[couchbase]; extra == "vectordbs"
Requires-Dist: globalgenie[cassandra]; extra == "vectordbs"
Requires-Dist: globalgenie[mongodb]; extra == "vectordbs"
Requires-Dist: globalgenie[singlestore]; extra == "vectordbs"
Requires-Dist: globalgenie[weaviate]; extra == "vectordbs"
Requires-Dist: globalgenie[milvusdb]; extra == "vectordbs"
Requires-Dist: globalgenie[clickhouse]; extra == "vectordbs"
Requires-Dist: globalgenie[pinecone]; extra == "vectordbs"
Requires-Dist: globalgenie[surrealdb]; extra == "vectordbs"
Provides-Extra: knowledge
Requires-Dist: globalgenie[pdf]; extra == "knowledge"
Requires-Dist: globalgenie[docx]; extra == "knowledge"
Requires-Dist: globalgenie[text]; extra == "knowledge"
Requires-Dist: globalgenie[csv]; extra == "knowledge"
Requires-Dist: globalgenie[markdown]; extra == "knowledge"
Provides-Extra: embedders
Requires-Dist: globalgenie[huggingface]; extra == "embedders"
Provides-Extra: tests
Requires-Dist: globalgenie[dev]; extra == "tests"
Requires-Dist: globalgenie[models]; extra == "tests"
Requires-Dist: globalgenie[tools]; extra == "tests"
Requires-Dist: globalgenie[storage]; extra == "tests"
Requires-Dist: globalgenie[vectordbs]; extra == "tests"
Requires-Dist: globalgenie[knowledge]; extra == "tests"
Requires-Dist: globalgenie[embedders]; extra == "tests"
Requires-Dist: globalgenie[performance]; extra == "tests"
Requires-Dist: globalgenie[readygenies]; extra == "tests"
Requires-Dist: globalgenie[agui]; extra == "tests"
Requires-Dist: twine; extra == "tests"
Requires-Dist: build; extra == "tests"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: maintainer
Dynamic: platform
Dynamic: requires-python

<div align="center">

```
    ╔═══════════════════════════════════════════════════╗
    ║                                                   ║
    ║    ██████╗ ██╗      ██████╗ ██████╗  █████╗ ██╗   ║
    ║   ██╔════╝ ██║     ██╔═══██╗██╔══██╗██╔══██╗██║   ║
    ║   ██║  ███╗██║     ██║   ██║██████╔╝███████║██║   ║
    ║   ██║   ██║██║     ██║   ██║██╔══██╗██╔══██║██║   ║
    ║   ╚██████╔╝███████╗╚██████╔╝██████╔╝██║  ██║██║   ║
    ║    ╚═════╝ ╚══════╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═╝╚═╝   ║
    ║                                                   ║
    ║   ██████╗ ███████╗███╗   ██╗██╗███████╗           ║
    ║  ██╔════╝ ██╔════╝████╗  ██║██║██╔════╝           ║
    ║  ██║  ███╗█████╗  ██╔██╗ ██║██║█████╗             ║
    ║  ██║   ██║██╔══╝  ██║╚██╗██║██║██╔══╝             ║
    ║  ╚██████╔╝███████╗██║ ╚████║██║███████╗           ║
    ║   ╚═════╝ ╚══════╝╚═╝  ╚═══╝╚═╝╚══════╝           ║
    ║                                                   ║
    ║        🌟 The Complete AI Agent Framework 🌟      ║
    ║                                                   ║
    ╚═══════════════════════════════════════════════════╝
```

# **GlobalGenie**
### *The Complete AI Agent Framework*

Build intelligent, autonomous agents with memory, reasoning, and multi-modal capabilities

[![PyPI version](https://img.shields.io/pypi/v/globalgenie?color=1a365d&style=for-the-badge)](https://pypi.org/project/globalgenie/)
[![Python 3.8+](https://img.shields.io/badge/python-3.8+-1a365d?style=for-the-badge)](https://www.python.org/downloads/)
[![License: MPL 2.0](https://img.shields.io/badge/License-MPL%202.0-d69e2e?style=for-the-badge)](https://opensource.org/licenses/MPL-2.0)
[![Documentation](https://img.shields.io/badge/docs-globalgenie.com-1a365d?style=for-the-badge)](https://docs.globalgenie.com)

</div>

## What is GlobalGenie?

GlobalGenie is a comprehensive framework for building sophisticated AI agents that can think, remember, and act autonomously. Unlike simple chatbots, GlobalGenie agents are equipped with:

<div align="center">

| Feature | Description |
|---------|-------------|
| 🧠 **Advanced Reasoning** | Multi-step thinking and problem-solving capabilities |
| 💾 **Persistent Memory** | Long-term memory across conversations and sessions |
| 📚 **Knowledge Integration** | RAG capabilities with vector databases and document processing |
| 🛠️ **Tool Integration** | Seamless integration with APIs, databases, and external services |
| 👥 **Multi-Agent Collaboration** | Coordinate multiple agents for complex workflows |
| 🎯 **Goal-Oriented Behavior** | Autonomous task completion with planning and execution |

</div>

## Quick Start

### Installation

```bash
pip install globalgenie
```

### Your First Agent

Create an intelligent agent in just a few lines:

- **Model Agnostic**: GlobalGenie provides a unified interface to 23+ model providers, no lock-in.
- **Highly performant**: Agents instantiate in **~3μs** and use **~6.5Kib** memory on average.
- **Reasoning is a first class citizen**: Reasoning improves reliability and is a must-have for complex autonomous agents. GlobalGenie supports 3 approaches to reasoning: Reasoning Models, `ReasoningTools` or our custom `chain-of-thought` approach.
- **Natively Multi-Modal**: GlobalGenie Agents are natively multi-modal, they accept text, image, and audio as input and generate text, image, and audio as output.
- **Advanced Multi-Agent Architecture**: GlobalGenie provides an industry leading multi-agent architecture (**Agent Teams**) with reasoning, memory, and shared context.
- **Built-in Agentic Search**: Agents can search for information at runtime using 20+ vector databases. GlobalGenie provides state-of-the-art Agentic RAG, **fully async and highly performant.**
- **Built-in Memory & Session Storage**: Agents come with built-in `Storage` & `Memory` drivers that give your Agents long-term memory and session storage.
- **Structured Outputs**: GlobalGenie Agents can return fully-typed responses using model provided structured outputs or `json_mode`.
- **Pre-built FastAPI Routes**: After building your Agents, serve them using pre-built FastAPI routes. 0 to production in minutes.
- **Monitoring**: Monitor agent sessions and performance in real-time on [globalgenie.com](https://app.globalgenie.com).

## Installation

```shell
pip install -U globalgenie
```

## Example - Reasoning Agent

Let's build a Reasoning Agent to get a sense of GlobalGenie's capabilities.

Save this code to a file: `reasoning_agent.py`.

```python
from globalgenie.agent import Agent
from globalgenie.models.anthropic import Claude
from globalgenie.tools.reasoning import ReasoningTools
from globalgenie.tools.yfinance import YFinanceTools

agent = Agent(
    model=Claude(id="claude-sonnet-4-20250514"),
    tools=[
        ReasoningTools(add_instructions=True),
        YFinanceTools(stock_price=True, analyst_recommendations=True, company_info=True, company_news=True),
    ],
    instructions=[
        "Use tables to display data",
        "Only output the report, no other text",
    ],
    markdown=True,
)
agent.print_response(
    "Write a report on NVDA",
    stream=True,
    show_full_reasoning=True,
    stream_intermediate_steps=True,
)
```

Then create a virtual environment, install dependencies, export your `ANTHROPIC_API_KEY` and run the agent.

```shell
uv venv --python 3.12
source .venv/bin/activate

uv pip install globalgenie anthropic yfinance

export ANTHROPIC_API_KEY=sk-ant-api03-xxxx

python reasoning_agent.py
```

We can see the Agent is reasoning through the task, using the `ReasoningTools` and `YFinanceTools` to gather information. This is how the output looks like:



## Example - Multi Agent Teams



```python
from globalgenie.agent import Agent
from globalgenie.models.openai import OpenAIChat
from globalgenie.tools.web import WebSearchTools

# Create an agent with web search capabilities
agent = Agent(
    model=OpenAIChat(id="gpt-4"),
    tools=[WebSearchTools()],
    instructions="You are a helpful research assistant. Always verify information with web searches."
)

# Start a conversation
response = agent.run("What are the latest developments in quantum computing?")
print(response.content)
```

### Agent with Memory and Knowledge

Build stateful agents that remember and learn:

```python
from globalgenie.agent import Agent
from globalgenie.models.openai import OpenAIChat
from globalgenie.memory import SqliteMemory
from globalgenie.knowledge import PDFKnowledgeBase
from globalgenie.tools.calculator import CalculatorTools

# Create an agent with persistent memory and knowledge
agent = Agent(
    model=OpenAIChat(id="gpt-4"),
    memory=SqliteMemory(
        table_name="agent_memory",
        db_file="agent_sessions.db"
    ),
    knowledge=PDFKnowledgeBase(
        path="documents/",
        vector_db="chroma"
    ),
    tools=[CalculatorTools()],
    instructions="You are a knowledgeable assistant with access to documents and calculation tools."
)

# The agent remembers previous conversations
response = agent.run("Analyze the financial report from last quarter")
print(response.content)
```

## Core Features

### 🤖 Intelligent Agents
- **Multi-Model Support**: OpenAI, Anthropic, Google, Ollama, and 20+ providers
- **Reasoning Capabilities**: Chain-of-thought, tree-of-thought, and custom reasoning patterns
- **Autonomous Decision Making**: Goal-oriented behavior with planning and execution
- **Error Handling**: Robust error recovery and retry mechanisms

### 💾 Advanced Memory Systems
- **Conversation Memory**: Remember context across interactions
- **Semantic Memory**: Store and retrieve knowledge based on meaning
- **Episodic Memory**: Remember specific events and experiences
- **Memory Persistence**: SQLite, PostgreSQL, Redis, and cloud storage options

### 📚 Knowledge Integration
- **Document Processing**: PDF, Word, text, and web content ingestion
- **Vector Databases**: Chroma, Pinecone, Weaviate, and 15+ vector stores
- **RAG Capabilities**: Retrieval-augmented generation with advanced chunking
- **Knowledge Graphs**: Build and query structured knowledge representations

### 🛠️ Extensive Tool Ecosystem
- **Web Tools**: Search, scraping, and API integration
- **Database Tools**: SQL, NoSQL, and vector database operations
- **File Tools**: Read, write, and process various file formats
- **Communication Tools**: Email, Slack, Discord, and messaging platforms
- **Custom Tools**: Easy framework for building domain-specific tools

### 👥 Multi-Agent Systems
- **Agent Teams**: Coordinate multiple specialized agents
- **Workflow Orchestration**: Complex multi-step processes
- **Agent Communication**: Inter-agent messaging and collaboration
- **Role-Based Architecture**: Specialized agents for different tasks

## Architecture Overview

GlobalGenie follows a modular architecture that makes it easy to build and scale AI applications:

```
┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐
│     Agents      │    │     Models      │    │     Tools       │
│                 │    │                 │    │                 │
│ • Reasoning     │◄──►│ • OpenAI        │◄──►│ • Web Search    │
│ • Planning      │    │ • Anthropic     │    │ • Databases     │
│ • Execution     │    │ • Google        │    │ • APIs          │
└─────────────────┘    └─────────────────┘    └─────────────────┘
         │                       │                       │
         ▼                       ▼                       ▼
┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐
│     Memory      │    │   Knowledge     │    │   Workflows     │
│                 │    │                 │    │                 │
│ • Conversations │    │ • Documents     │    │ • Multi-Agent   │
│ • Semantic      │    │ • Vector DBs    │    │ • Orchestration │
│ • Episodic      │    │ • RAG           │    │ • State Mgmt    │
└─────────────────┘    └─────────────────┘    └─────────────────┘
```

## Use Cases

### 🏢 Business Applications
- **Customer Support**: Intelligent chatbots with knowledge base integration
- **Data Analysis**: Automated report generation and insights
- **Content Creation**: Blog posts, documentation, and marketing materials
- **Process Automation**: Workflow automation with decision-making capabilities

### 🔬 Research & Development
- **Literature Review**: Automated research paper analysis and summarization
- **Experiment Planning**: Design and optimize experimental procedures
- **Data Processing**: Large-scale data analysis and pattern recognition
- **Knowledge Discovery**: Extract insights from unstructured data

### 🎓 Education & Training
- **Personalized Tutoring**: Adaptive learning systems
- **Content Generation**: Educational materials and assessments
- **Student Assessment**: Automated grading and feedback
- **Curriculum Planning**: Intelligent course design and optimization

## Getting Started Guide

### 1. Installation and Setup

```bash
# Install GlobalGenie
pip install globalgenie

# Install optional dependencies for specific features
pip install globalgenie[web]      # Web search and scraping tools
pip install globalgenie[docs]     # Document processing capabilities
pip install globalgenie[vector]   # Vector database integrations
pip install globalgenie[all]      # All optional dependencies
```

### 2. Configuration

Create a configuration file or set environment variables:

```python
# config.py
import os
from globalgenie.config import GlobalGenieConfig

config = GlobalGenieConfig(
    openai_api_key=os.getenv("OPENAI_API_KEY"),
    anthropic_api_key=os.getenv("ANTHROPIC_API_KEY"),
    default_model="gpt-4",
    memory_backend="sqlite",
    vector_store="chroma"
)
```

### 3. Build Your First Agent

```python
from globalgenie.agent import Agent
from globalgenie.models.openai import OpenAIChat

# Simple conversational agent
agent = Agent(
    model=OpenAIChat(id="gpt-4"),
    instructions="You are a helpful assistant specialized in Python programming."
)

# Interactive conversation
while True:
    user_input = input("You: ")
    if user_input.lower() == 'quit':
        break
    
    response = agent.run(user_input)
    print(f"Agent: {response.content}")
```

### 4. Add Tools and Capabilities

```python
from globalgenie.agent import Agent
from globalgenie.models.openai import OpenAIChat
from globalgenie.tools.web import WebSearchTools
from globalgenie.tools.calculator import CalculatorTools
from globalgenie.tools.python import PythonTools

# Multi-tool agent
agent = Agent(
    model=OpenAIChat(id="gpt-4"),
    tools=[
        WebSearchTools(),
        CalculatorTools(),
        PythonTools()
    ],
    instructions="""
    You are a versatile AI assistant with access to:
    - Web search for current information
    - Calculator for mathematical operations
    - Python execution for data analysis
    
    Always use the appropriate tool for each task.
    """
)

# The agent can now search the web, calculate, and run Python code
response = agent.run("Find the current stock price of Apple and calculate its P/E ratio")
```

### 5. Add Memory and Knowledge

```python
from globalgenie.agent import Agent
from globalgenie.models.openai import OpenAIChat
from globalgenie.memory import SqliteMemory
from globalgenie.knowledge import WebKnowledgeBase
from globalgenie.tools.web import WebSearchTools

# Agent with persistent memory and knowledge
agent = Agent(
    model=OpenAIChat(id="gpt-4"),
    memory=SqliteMemory(
        table_name="conversations",
        db_file="agent_memory.db"
    ),
    knowledge=WebKnowledgeBase(
        urls=[
            "https://docs.python.org/3/",
            "https://pandas.pydata.org/docs/"
        ]
    ),
    tools=[WebSearchTools()],
    instructions="You are a Python expert with access to official documentation."
)

# The agent remembers previous conversations and has access to documentation
response = agent.run("How do I handle missing data in pandas DataFrames?")
```

## Advanced Features

### Multi-Agent Workflows

```python
from globalgenie.team import AgentTeam
from globalgenie.agent import Agent
from globalgenie.models.openai import OpenAIChat
from globalgenie.tools.web import WebSearchTools
from globalgenie.tools.python import PythonTools

# Create specialized agents
researcher = Agent(
    name="researcher",
    model=OpenAIChat(id="gpt-4"),
    tools=[WebSearchTools()],
    instructions="You are a research specialist. Gather comprehensive information on given topics."
)

analyst = Agent(
    name="analyst", 
    model=OpenAIChat(id="gpt-4"),
    tools=[PythonTools()],
    instructions="You are a data analyst. Process and analyze information to extract insights."
)

writer = Agent(
    name="writer",
    model=OpenAIChat(id="gpt-4"),
    instructions="You are a technical writer. Create clear, comprehensive reports."
)

# Create a team workflow
team = AgentTeam(
    agents=[researcher, analyst, writer],
    workflow="sequential"  # researcher -> analyst -> writer
)

# Execute complex multi-agent task
result = team.run("Create a comprehensive market analysis report for electric vehicles in 2024")
```

### Custom Tool Development

```python
from globalgenie.tools import Tool
from typing import Dict, Any
import requests

class WeatherTool(Tool):
    """Custom tool for weather information"""
    
    def __init__(self, api_key: str):
        self.api_key = api_key
        super().__init__(
            name="get_weather",
            description="Get current weather information for a city"
        )
    
    def run(self, city: str) -> Dict[str, Any]:
        """Get weather data for a city"""
        url = f"http://api.openweathermap.org/data/2.5/weather"
        params = {
            "q": city,
            "appid": self.api_key,
            "units": "metric"
        }
        
        response = requests.get(url, params=params)
        data = response.json()
        
        return {
            "city": city,
            "temperature": data["main"]["temp"],
            "description": data["weather"][0]["description"],
            "humidity": data["main"]["humidity"]
        }

# Use custom tool
from globalgenie.agent import Agent
from globalgenie.models.openai import OpenAIChat

agent = Agent(
    model=OpenAIChat(id="gpt-4"),
    tools=[WeatherTool(api_key="your-api-key")],
    instructions="You are a weather assistant. Provide detailed weather information."
)

response = agent.run("What's the weather like in New York?")
```

## Model Support

GlobalGenie supports 25+ AI model providers:

### OpenAI
- GPT-4, GPT-4 Turbo, GPT-3.5 Turbo
- DALL-E 3 for image generation
- Whisper for speech recognition

### Anthropic
- Claude 3 (Opus, Sonnet, Haiku)
- Claude 2.1, Claude Instant

### Google
- Gemini Pro, Gemini Pro Vision
- PaLM 2, Codey

### Open Source
- Ollama (Llama 2, Mistral, CodeLlama)
- Hugging Face Transformers
- Together AI

### Cloud Providers
- AWS Bedrock (Claude, Llama, Titan)
- Azure OpenAI Service
- Google Vertex AI

## Documentation

- **📖 [Complete Documentation](https://docs.globalgenie.com)** - Comprehensive guides and API reference
- **🚀 [Quick Start Guide](https://docs.globalgenie.com/quickstart)** - Get up and running in minutes
- **💡 [Examples Gallery](https://docs.globalgenie.com/examples)** - Real-world use cases and implementations
- **🛠️ [API Reference](https://docs.globalgenie.com/api)** - Detailed API documentation
- **❓ [FAQ](https://docs.globalgenie.com/faq)** - Frequently asked questions

## Community & Support

- **💬 [Discord Community](https://discord.gg/globalgenie)** - Join our active community
- **📧 Email Support** - Direct support from our team
- **🐛 [Issue Tracker](https://github.com/globalgenie-agi/globalgenie/issues)** - Report bugs and request features
- **📝 [Blog](https://blog.globalgenie.com)** - Latest updates and tutorials

## Contributing

We welcome contributions! Please see our Contributing Guide for details.

### Development Setup

```bash
# Clone the repository
git clone https://github.com/globalgenie-agi/globalgenie.git
cd globalgenie

# Install in development mode
pip install -e ".[dev]"

# Run tests
pytest

# Format code
black .
isort .
```

## License

GlobalGenie is released under the MIT License.

## Roadmap

- **Q1 2024**: Enhanced multi-modal capabilities
- **Q2 2024**: Advanced workflow orchestration
- **Q3 2024**: Enterprise security features
- **Q4 2024**: Distributed agent systems

---

<div align="center">
  <strong>Ready to build the future with AI agents?</strong>
  
  [Get Started](https://docs.globalgenie.com/quickstart) • [View Examples](https://docs.globalgenie.com/examples) • [Join Community](https://discord.gg/globalgenie)
</div>
