{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(git add:*)",
      "Bash(python -m pytest tests/unit/test_config.py::TestProxyConfig::test_default_proxy_config -v)",
      "Bash(pip install:*)",
      "Bash(uv:*)",
      "Bash(export:*)",
      "Bash(git commit:*)",
      "Bash(python -m pytest tests/unit/test_providers/test_openai.py::TestOpenAIProvider::test_send_streaming_request_success -v)",
      "Bash(python -m pytest tests/unit/test_providers/test_openai.py::TestOpenAIProvider::test_send_streaming_request_success -v --no-cov)",
      "Bash(PYTHONPATH=/home/simpx/lessllm pytest tests/unit/test_providers/test_openai.py::TestOpenAIProvider::test_send_streaming_request_success -v -s --no-cov)",
      "Bash(python:*)",
      "Bash(PYTEST_CURRENT_TEST=\"\" python -c \"\nimport subprocess\nimport sys\nimport os\n\n# Set working directory\nos.chdir(''/home/simpx/lessllm'')\n\n# Run pytest with minimal configuration\nresult = subprocess.run([\n    sys.executable, ''-m'', ''pytest'', \n    ''tests/unit/test_providers/test_openai.py::TestOpenAIProvider::test_send_streaming_request_success'',\n    ''tests/unit/test_providers/test_openai.py::TestOpenAIProvider::test_send_streaming_request_invalid_json'',\n    ''-v'', ''--tb=short'', ''--no-header'',\n    ''--override-ini=addopts=''  # Override addopts to remove coverage\n], capture_output=True, text=True)\n\nprint(''STDOUT:'')\nprint(result.stdout)\nprint(''STDERR:'')\nprint(result.stderr)\nprint(f''Return code: {result.returncode}'')\n\")",
      "Bash(PYTEST_CURRENT_TEST=\"\" python -c \"\nimport subprocess\nimport sys\nimport os\n\n# Set working directory\nos.chdir(''/home/simpx/lessllm'')\n\n# Run all OpenAI provider tests\nresult = subprocess.run([\n    sys.executable, ''-m'', ''pytest'', \n    ''tests/unit/test_providers/test_openai.py'',\n    ''-v'', ''--tb=short'', ''--no-header'',\n    ''--override-ini=addopts=''  # Override addopts to remove coverage\n], capture_output=True, text=True)\n\nprint(''STDOUT:'')\nprint(result.stdout)\nif result.stderr:\n    print(''STDERR:'')\n    print(result.stderr)\nprint(f''Return code: {result.returncode}'')\n\")",
      "Bash(pytest:*)",
      "Bash(lessllm --config:*)",
      "Bash(lessllm server:*)",
      "Bash(curl:*)",
      "Bash(cat:*)",
      "Bash(rm:*)",
      "Bash(git restore:*)",
      "Bash(duckdb --version:*)",
      "Bash(sudo apt update:*)",
      "Bash(sudo apt install:*)",
      "Bash(unzip:*)",
      "Bash(sudo mv:*)",
      "Bash(duckdb:*)",
      "Bash(lessllm gui:*)",
      "Bash(pip show:*)",
      "Bash(timeout:*)",
      "Bash(lessllm:*)",
      "Bash(pkill:*)",
      "Bash(streamlit --version)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(chmod:*)",
      "Bash(./test_aliyun_claude.sh:*)",
      "Bash(./test_aliyun_streaming.sh:*)",
      "Bash(./test_basic_functionality.sh:*)",
      "Bash(./test_streaming_analysis.sh:*)"
    ],
    "deny": []
  }
}