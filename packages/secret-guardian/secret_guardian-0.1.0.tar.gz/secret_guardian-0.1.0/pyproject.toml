[tool.poetry]
name = "secret-guardian"
version = "0.1.0"
description = "A Python library for detecting hardcoded secrets and API keys in code repositories"
authors = ["panyu1512 <kikeferreragius1997@gmail.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/panyu1512/secret-guardian"
repository = "https://github.com/panyu1512/secret-guardian"
keywords = ["security", "secrets", "api-keys", "code-scanning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "secret_guardian", from = "src"}]

[tool.poetry.dependencies]
python = "^3.8.1"
gitpython = "^3.1.40"
python-dotenv = "^1.0.0"
click = "^8.1.7"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
ruff = "^0.1.8"
mypy = "^1.5.0"
pre-commit = "^3.0.0"

[tool.poetry.scripts]
secret-guardian = "secret_guardian.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["secret_guardian"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=secret_guardian --cov-report=html --cov-report=term-missing"
