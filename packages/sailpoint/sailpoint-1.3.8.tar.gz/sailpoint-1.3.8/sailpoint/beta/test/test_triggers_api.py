# coding: utf-8

"""
    Identity Security Cloud Beta API

    Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

    The version of the OpenAPI document: 3.1.0-beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sailpoint.beta.api.triggers_api import TriggersApi


class TestTriggersApi(unittest.TestCase):
    """TriggersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = TriggersApi()

    def tearDown(self) -> None:
        pass

    def test_complete_trigger_invocation(self) -> None:
        """Test case for complete_trigger_invocation

        Complete trigger invocation
        """
        pass

    def test_create_subscription(self) -> None:
        """Test case for create_subscription

        Create a subscription
        """
        pass

    def test_delete_subscription(self) -> None:
        """Test case for delete_subscription

        Delete a subscription
        """
        pass

    def test_list_subscriptions(self) -> None:
        """Test case for list_subscriptions

        List subscriptions
        """
        pass

    def test_list_trigger_invocation_status(self) -> None:
        """Test case for list_trigger_invocation_status

        List latest invocation statuses
        """
        pass

    def test_list_triggers(self) -> None:
        """Test case for list_triggers

        List triggers
        """
        pass

    def test_patch_subscription(self) -> None:
        """Test case for patch_subscription

        Patch a subscription
        """
        pass

    def test_start_test_trigger_invocation(self) -> None:
        """Test case for start_test_trigger_invocation

        Start a test invocation
        """
        pass

    def test_test_subscription_filter(self) -> None:
        """Test case for test_subscription_filter

        Validate a subscription filter
        """
        pass

    def test_update_subscription(self) -> None:
        """Test case for update_subscription

        Update a subscription
        """
        pass


if __name__ == '__main__':
    unittest.main()
