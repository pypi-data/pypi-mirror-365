[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "elasticrag"
version = "0.3.2"
description = "Elasticsearch-based RAG system with ingest pipeline processing"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Lloyd Zhou", email = "lloydzhou@gmail.com"},
]
keywords = ["elasticsearch", "rag", "vector-search", "nlp", "embedding"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Database :: Database Engines/Servers",
]
dependencies = [
    "aiohttp>=3.10.11",
    "elasticsearch>=8.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
web = [
    "gradio>=4.44.1",
    "pandas>=1.3.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
]
all = [
    "gradio>=4.44.1",
    "pandas>=1.3.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
]

[project.scripts]
elasticrag = "elasticrag.cli:main"

[project.urls]
Homepage = "https://github.com/lloydzhou/elasticrag"
Repository = "https://github.com/lloydzhou/elasticrag"
Documentation = "https://github.com/lloydzhou/elasticrag#readme"
Issues = "https://github.com/lloydzhou/elasticrag/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/elasticrag"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
# 使用 pytest-asyncio 的自动模式
asyncio_mode = "auto"
# 添加标记
markers = [
    "asyncio: mark test as async",
    "slow: mark test as slow running"
]
