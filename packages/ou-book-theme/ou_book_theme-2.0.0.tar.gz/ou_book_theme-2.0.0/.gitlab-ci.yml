stages:
  - build
  - test
  - publish

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Jobs/Secret-Detection.gitlab-ci.yml

build-theme:
  image: node:20
  stage: build
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - ou_book_theme
    expire_in: 300 seconds
  interruptible: true

build-package:
  image: python:3.11
  stage: build
  script:
    - pip install hatch
    - hatch build
  dependencies:
    - build-theme
  needs:
    - build-theme
  artifacts:
    paths:
      - dist
    expire_in: 300 seconds
  interruptible: true

build-docs:
  image: python:3.11
  stage: build
  script:
    - pip install hatch
    - hatch run python -m ou_book_theme build docs
    - cd docs/_build
    - tar -jcf docs.tar.bz2 html
  dependencies:
    - build-theme
  needs:
    - build-theme
  artifacts:
    paths:
      - docs/_build
    expire_in: 300 seconds
  interruptible: true

run-tests:
  image: python:$PYTHON_VERSION
  stage: test
  script:
    - pip install hatch
    - hatch run cov --junitxml=junit.xml
    - hatch run coverage xml
  parallel:
    matrix:
     - PYTHON_VERSION:
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"
  dependencies:
    - build-theme
  artifacts:
    when: always
    paths:
      - junit.xml
      - coverage.xml
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: junit.xml
  coverage: '/TOTAL.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  interruptible: true

run-lint:
  image: python:3.11
  stage: test
  script:
    - pip install hatch
    - hatch run style-check
  interruptible: true

sast:
  stage: test
  interruptible: true

publish-package:
  image: python:3.11
  stage: publish
  script:
    - pip install hatch
    - hatch publish --user __token__ --auth $PYPI_AUTH_TOKEN
  dependencies:
    - build-package
  rules:
    - if: "$CI_COMMIT_TAG =~ /^v[0-9]+\\.[0-9]+\\.[0-9]+(b[0-9]+)?$/"

publish-dev-docs:
  image: quay.io/curl/curl:latest
  stage: publish
  script:
    - cd docs/_build
    - 'curl -X PUT -H "Authorization: Bearer $DOCS_TOKEN" -F "archive=@docs.tar.bz2"
      https://docs-api.ocl.open.ac.uk/upload/ou-book-theme/latest'
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  interruptible: true

publish-docs:
  image: quay.io/curl/curl:latest
  stage: publish
  script:
    - export MAJOR_VERSION=`echo ${CI_COMMIT_TAG} | cut -d "." -f1`
    - cd docs/_build
    - 'curl -X PUT -H "Authorization: Bearer $DOCS_TOKEN" -F "archive=@docs.tar.bz2"
      https://docs-api.ocl.open.ac.uk/upload/ou-book-theme/$MAJOR_VERSION'
  rules:
    - if: "$CI_COMMIT_TAG =~ /^v[0-9]+\\.[0-9]+\\.[0-9]+(b[0-9]+)?$/"
