<script>
    // Selection table
    let table = {"data":[{%- for val in selection_table %}{"uid":"{{ val.uid }}","index":"{{ val.index }}","fresh": "{{ val.fresh }}","stats": {{ val.stats|map('list')|list }},"traces": {{ val.trace_stats|map('list')|list }},"type": "{{ val.main_stat }}","baseline_abs": "{{ val.baseline_abs }}","target_abs": "{{ val.target_abs }}","total_rel_delta": "{{ val.total_rel_delta }}","abs_delta": "{{ val.abs_delta }}","rel_delta": "{{ val.rel_delta }}" },{%- endfor %}]};
    let selection_table = $("#table").DataTable({
        data: table.data,
        columns: [
            {
                className: "details-control",
                orderable: false,
                data: null,
                defaultContent: "",
                render: function () {return '<span class="plus">{% include 'assets/add.svg' %}</span>';},
                width: "15px"
            },
            { data: "uid" , className: "details-uid"},
            {
                data: "fresh",
                render: function (data, type) {
                    if (type ==='display') {
                        if (data === "not in baseline") {
                            return '<span style="font-weight: bold; color: {{ palette.Target }}">' + data + "</span>";
                        } else if (data === "not in target") {
                            return '<span style="font-weight: bold; color: {{ palette.Baseline }}">' + data + "</span>";
                        } else {
                            return '<span style="font-weight: bold; color: {{ palette.Equal }}">' + data + "</span>";
                        }
                    }
                    return data;
                }
            },
            {
                data: "type",
                render: function(data, type) {return (type === 'display') ? stat_id_to_name(data) : data;}
            }, {
                data: "baseline_abs",
                className: "dt-body-right",
                render: function(data, type) {return (type === 'display') ? format_value(data) : data;}
            }, {
                data: "target_abs",
                className: "dt-body-right",
                render: function(data, type) {return (type === 'display') ? format_value(data) : data;}
            }, {
                data: "total_rel_delta",
                render: function(data, type) {return (type === 'display') ? format_relative(data) : data;}
            }, {
                data: "abs_delta",
                className: "dt-body-right",
                render: function(data, type) {return (type === 'display') ? format_value(data, true) : data;}
            }, {
                data: "rel_delta",
                render: function(data, type) {return (type === 'display') ? format_relative(data) : data;}
            },
            { data: "index", visible: false},
        ],
        order: [[6, "desc"]],
        iDisplayLength: 10,
        select: true,
        scrollY: "550px",
        scrollCollapse: true,
        paging: true,
        createdRow: function( row, data, dataIndex ) {
            $( row ).addClass('hidden');
        },
        initComplete: function() {
            this.api().columns().every(function(i) {
                if (i == 0 || i > 3)
                    return;
                let column = this;

                let select = document.createElement('select');
                select.add(new Option(''));
                column.footer().replaceChildren(select);

                select.addEventListener('change', function() {
                    column.search(select.value, {exact: true}).draw();
                });

                column.data().unique().sort().each(function(d, j) {
                    if (i == 3)
                        select.add(new Option(stat_id_to_name(d)));
                    else
                        select.add(new Option(d));
                })
            });
        }
    })
    selection_table.on('user-select', function (e, dt, type, cell, originalEvent) {
        if (originalEvent.target.cellIndex === 0 || originalEvent.target.tagName === "SPAN") {
            e.preventDefault();
        }
    });

    function stat_id_to_name(stat_id) {
        let metric_len = stat_map.length, metric = stat_id % metric_len;
        if (stat_id >= metric_len)
            console.error("There is no id in the map for " + stat_id)
        return stat_map[metric];
    }

    // Event handlers
    selection_table.on('click', 'td.details-control', function(el) {
        var tr = $(this).closest('tr');
        var row = selection_table.row(tr);

        if (row.child.isShown()) {
            row.child.hide();
            tr.removeClass('shown');
            tr.addClass('hidden');
        } else {
            let d = row.data();
            row.child(format_row(d)).show();
            new DataTable("#metrics" + d.index, {paging: false, info: false, searching: false, order: [[3, 'desc']], columns: [
                    {
                        render: function(data, type) {return (type === 'display') ? stat_id_to_name(data) : data;}
                    }, {
                        render: function(data, type) {return (type === 'display') ? format_value(data) : data;}
                    }, {
                        render: function(data, type) {return (type === 'display') ? format_value(data) : data;}
                    }, {
                        render: function(data, type) {return (type === 'display') ? format_relative(data) : data;}
                    }, {
                        render: function(data, type) {return (type === 'display') ? format_value(data, true) : data;}
                    }, {
                        render: function(data, type) {return (type === 'display') ? format_relative(data) : data;}
                    }
                ]});
            trace_table = new DataTable("#traces" + d.index, {
                columns: [
                    {
                        className: "inner-details-control",
                        orderable: false,
                        data: null,
                        defaultContent: "",
                        render: function () {return '<span class="plus">{% include 'assets/add.svg' %}</span>';},
                        width: "15px"
                    }, {}, {
                        render: function(data, type) {return (type === 'display') ? stat_map[data] : data; }
                    }, {
                        render: function(data, type) {return (type === 'display') ? format_value(data) : data;}
                    }, {
                        render: function(data, type) {return (type === 'display') ? format_value(data) : data;}
                    }, {
                        render: function(data, type) {return (type === 'display') ? format_relative(data) : data;}
                    }, {
                        render: function(data, type) {return (type === 'display') ? format_value(data, true) : data;}
                    }, {
                        render: function(data, type) {return (type === 'display') ? format_relative(data) : data;}
                    }, {visible: false},
                ],
                createdRow: function( row, data, dataIndex ) {
                    $( row ).addClass('hidden');
                },
                paging: false,
                info: false,
                searching: false,
                order: [[5, "desc"]]
            });
            trace_table.on('click', 'td.inner-details-control', function(el) {
                var sub_tr = $(this).closest('tr');
                var sub_row = trace_table.row(sub_tr);

                if (sub_row.child.isShown()) {
                    sub_row.child.hide();
                    sub_tr.removeClass('shown');
                    sub_tr.addClass('hidden');
                } else {
                    sub_row.child(format_sub_row(sub_row.data(), d.uid)).show();
                    sub_tr.removeClass('hidden');
                    sub_tr.addClass('shown');
                }
            });
            tr.removeClass('hidden');
            tr.addClass('shown');
        }
    });
</script>