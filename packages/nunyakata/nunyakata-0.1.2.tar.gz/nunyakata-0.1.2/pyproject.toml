[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "nunyakata"
dynamic = ["version"]
description = "A unified Python package for Ghana-specific services and APIs including Nalo Solutions"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "SeveighTech", email = "info@seveightech.com"},
]
maintainers = [
    {name = "SeveighTech", email = "info@seveightech.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Office/Business :: Financial",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Communications :: Email",
    "Topic :: Communications :: Chat",
]
keywords = ["ghana", "api", "services", "unified", "nalo", "payments", "sms", "ussd", "email", "mobile-money", "fintech"]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
env = [
    "python-dotenv>=1.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "requests-mock>=1.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "pytest-mock>=3.10.0",
    "requests-mock>=1.10.0",
]
webhook = [
    "flask>=2.0.0",
]
all = [
    "python-dotenv>=1.0.0",
    "flask>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/SeveighTech/nunyakata"
Documentation = "https://nunyakata.readthedocs.io/"
Repository = "https://github.com/SeveighTech/nunyakata"
"Bug Reports" = "https://github.com/SeveighTech/nunyakata/issues"
"Source Code" = "https://github.com/SeveighTech/nunyakata"
Changelog = "https://nunyakata.readthedocs.io/en/latest/changelog/"
"Read the Docs" = "https://nunyakata.readthedocs.io/"

[tool.hatch.version]
path = "src/nunyakata/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/nunyakata"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/nunyakata",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=60",
    "-v",
]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "api: marks tests as API tests",
    "slow: marks tests as slow running",
]

[tool.coverage.run]
source = ["src/nunyakata"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
