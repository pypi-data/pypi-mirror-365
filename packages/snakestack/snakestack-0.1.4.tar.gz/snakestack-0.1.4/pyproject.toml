[project]
name = "snakestack"
version = "0.1.4"
description = ""
authors = [
    {name = "Bruno Segato",email = "brunosegatoit@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.13"

[tool.poetry.extras]
logging = []
redis = ["redis"]

[tool.poetry.dependencies]
pydantic = ">=2.11.7"
redis = {extras = ["hiredis"], version = "^6.2.0", optional = true}

[tool.poetry.group.test.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
pytest-mock = "^3.14.1"
freezegun = "^1.5.3"
pytest-env = "^1.1.5"
pytest-asyncio = "^1.1.0"


[tool.poetry.group.lint.dependencies]
ruff = "^0.12.5"
mypy = "^1.17.0"
pre-commit = "^4.2.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"
env = [
    "LOG_LEVEL=DEBUG",
]
markers = [
    "unit: Unit tests with mocks",
    "integration: Integration tests without mocks",
    "logging: Logging domain tests",
    "cache: Cache domain tests"
]
testpaths = ["tests"]

[tool.ruff]
line-length = 88
target-version = "py311"
lint.extend-select = [
    "I",    # isort — ordenação de imports
    "S",    # flake8-bandit - regras de segurança estáticas
    "ANN",  # flake8-annotations - regras de annotations
    "E4",   # pycodestyle - error
    "E7",   # pycodestyle - error
    "E9",   # pycodestyle - error
    "F",    # pyflakes — erros estáticos simples (variáveis não usadas, etc.)
    "W",    # pycodestyle - warning
    "C901"  # mccabe
]
fix = true
lint.ignore = ["ANN401"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101", "ANN", "S108"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.format]
quote-style = "preserve"

[tool.mypy]
strict = true
show_error_codes = true
ignore_missing_imports = true
check_untyped_defs = true
packages = "snakestack"

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
check_untyped_defs = false
ignore_errors = true

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
