[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "litemind"
dynamic = ["version"]
description = "A wrapper API around LLM APIs and agentic AI framework"
authors = [{ name = "Loic A. Royer" }]
license = "BSD-3-Clause"        # SPDX
readme = "README.md"
requires-python = ">=3.9"
keywords = ["llm", "ai", "agents", "wrapper"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "openai>=1.93.0",
    "ollama>=0.5.1",
    "anthropic>=0.55.0",
    "google-generativeai>=0.8.5",
    "pillow",
    "arbol",
    "ansicolors",
    "json-repair",
    "tiktoken",
    "pydantic",
    "pandas",
    "numpy",
    "chardet",
    "pyyaml",
    "absl-py",
    "scipy",
    "filetype",
    "python-magic"
]

[project.optional-dependencies]
dev = [
    "hatch",
    "pytest",
    "pytest-html",
    "pytest-cov",
    "pytest-md-report",
    "black[jupyter]",
    "flake8",
    "mypy",
    "isort",
    "pypdf",
]
rag = ["fastembed", "chromadb", "qdrant-client"]
whisper = ["openai-whisper"]
documents = ["pymupdf", "pymupdf4llm", "openpyxl", "docling", "python-minifier"]
tables = ["tabulate"]
videos = ["ffmpeg-python", "imageio[ffmpeg]"]
audio = ["soundfile"]
remote = ["rpyc"]
tasks = ["md2pdf"]

[project.urls]
Homepage = "https://github.com/royerlab/litemind"
Issues = "https://github.com/royerlab/litemind/issues"

[tool.hatch.version]
path = "src/litemind/__init__.py"

# Only sdists: keep include/exclude here
[tool.hatch.build.targets.sdist]
ignore-vcs = true
include = ["**", "README.md", "LICENSE"]
exclude = [
    "**/tests/**",
    "**/.DS_Store",
    "*.egg-info",
    "**/sandbox/**",
    "src/litemind/ressources/**",
]

# Wheel-only file selection
[tool.hatch.build.targets.wheel]
packages = ["src/litemind"]

[project.scripts]
litemind = "litemind.tools.litemind_tools:main"

[tool.hatch.envs.hatch-test]
addopts = "--html=reports/report.html --self-contained-html --cov=src --cov-report=html:reports/coverage --md-report=reports/report.md"
default-args = ["src/"]
exclude = ["sandbox"]
extra-dependencies = [
    "qdrant-client", "chromadb", "openai-whisper", "pymupdf",
    "pymupdf4llm", "openpyxl", "docling", "pandas", "numpy",
    "chardet", "tabulate", "fastembed", "ffmpeg-python",
    "imageio[ffmpeg]", "pytest-html", "pytest-cov",
    "pytest-md-report", "pypdf", "soundfile", "filetype",
    "python-magic", "python-minifier", "rpyc"
]
