[build-system]
requires = [ "hatchling",]
build-backend = "hatchling.build"

[project]
name = "meshwork"
version = "0.1.2"
description = "Library for the propagation of distributed parameterized jobs and their streams"
readme = "README.md"
requires-python = ">=3.10"
keywords = [ "distributed-computing", "job-scheduling", "streaming", "microservices",]
classifiers = [ "Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12",]
dependencies = [ "pydantic>=2.10.6", "pydantic-settings>=2.7.1", "typing-extensions>=4.12.2", "python-json-logger>=3.2.1", "base58>=2.1.1", "tzdata>=2025.1", "cryptography>=44.0.1", "requests>=2.32.3", "aiohttp>=3.11.12", "nats-py>=2.9.0", "gcid>=0.1.0", "pyjwt>=2.10.1", "fastapi>=0.115.8", "uvicorn>=0.34.0", "opentelemetry-api>=1.30.0", "opentelemetry-sdk>=1.30.0", "opentelemetry-exporter-otlp>=1.30.0",]
[[project.authors]]
name = "Jacob Repp"
email = "jacob@mythica.ai"

[[project.authors]]
name = "Kevin Calderone"
email = "kevin@mythica.ai"

[[project.authors]]
name = "Pedro"
email = "pedro@mythica.ai"

[dependency-groups]
test = [ "pytest>=8.3.4", "pytest-asyncio>=0.25.3", "pytest-cov>=6.0.0", "pytest-timeout>=2.3.1", "httpx>=0.28.1",]
lint = [ "ruff>=0.8.0", "mypy>=1.13.0",]
[[dependency-groups.dev]]
include-group = "test"

[[dependency-groups.dev]]
include-group = "lint"

[project.license]
text = "MPL-2.0"

[project.urls]
Homepage = "https://github.com/MythicaAI/infra/libs/python/meshwork"
Repository = "https://github.com/MythicaAI/infra"

[project.scripts]
test = "scripts:test"
lint = "scripts:lint"
fmt = "scripts:format_code"
typecheck = "scripts:typecheck"

[tool.ruff]
target-version = "py310"
line-length = 88
select = [ "E", "W", "F", "I", "B", "C4", "UP",]
ignore = [ "E501",]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
strict_optional = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.pytest.ini_options]
addopts = "-v --cov=meshwork --cov-report=term-missing"
testpaths = [ "tests",]

[tool.coverage.run]
source = [ "meshwork",]
omit = [ "tests/*",]

[tool.coverage.report]
exclude_lines = [ "pragma: no cover", "def __repr__", "raise AssertionError", "raise NotImplementedError",]
