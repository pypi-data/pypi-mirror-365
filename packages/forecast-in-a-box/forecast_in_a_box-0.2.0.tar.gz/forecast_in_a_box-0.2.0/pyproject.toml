[build-system]
requires = ["setuptools>=80", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "forecast-in-a-box"
description = "Weather Forecast in a Box"
authors = [
  { name = "European Centre for Medium-Range Weather Forecasts (ECMWF)", email = "software.support@ecmwf.int" },
]
license = "Apache-2.0"
license-files = ["LICENSE"]
requires-python=">=3.11"
readme = "README.md"
dynamic = ["version"]

# just a minimal set of dependencies to run the servers. Individual tasks install their runtime dependencies on their own
dependencies = [
	"fastapi",
	"fastapi_users[oauth]",
	"fastapi_users_db_sqlalchemy",
	"httpx<1.0",
    "httpx_oauth",
	"jinja2",
	"orjson",
	"python-multipart",
	"uvicorn",
	"cloudpickle",
	"pyrsistent",
	"anemoi-inference>=0.4.10",
	"qubed==0.1.12",
	"earthkit-workflows-anemoi>=0.3.1",
	"pydantic-settings",
	"earthkit-workflows>=0.4.0",
	"pproc",
	"earthkit-workflows-pproc",
	"sse-starlette",
    "aiosqlite",
    "multiolib==2.6.1.dev20250613", # to bring in the binary stack eagerly, TODO unpin once stable
]

[project.urls]
"Source code" = "https://github.com/ecmwf/forecast-in-a-box"

[project.optional-dependencies]
thermo = [
    "thermofeel>=2.1.1",
]
plots = [
    "earthkit-plots-default-styles>=0.1.0",
    "earthkit-plots>=0.3.0",
]
webmars = [
    "ecmwf-api-client>=1.6.5",
]
test = ["pytest-xdist"]
all = [
	"forecast-in-a-box[plots,test,thermo,webmars]"
]

# [tool.setuptools]
# packages = ["forecastbox"]

[tool.setuptools_scm]
version_file = "forecastbox/_version.py"
write_to_template = '''# Do not change! Do not track in version control!
__version__ = "{version}"
'''
local_scheme = "no-local-version"
root = ".."
fallback_version = "0.0.0"

# TODO remove once released
[tool.uv.sources]
pproc = { git = "https://github.com/ecmwf/pproc" }
earthkit-workflows-pproc = { git = "https://github.com/ecmwf/earthkit-workflows-pproc" }


[tool.ruff]
line-length = 140

[tool.ruff.lint]
ignore = ["E731"]

[tool.mypy]
plugins = "pydantic.mypy"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
testpaths = ["tests"]
addopts = "-n0 -s" # NOTE stick to 0 *or* have random server ports in the integration tests
