# This file was generated by liblab | https://liblab.com/

from typing import Awaitable, Union
from .utils.to_async import to_async
from ..owasp import OwaspService
from ...models.utils.sentinel import SENTINEL
from ...models import (
    PagedChapterSchema,
    ListChaptersOrdering,
    PagedCommitteeSchema,
    ListCommitteesOrdering,
    PagedEventSchema,
    ListEventsOrdering,
    PagedProjectSchema,
    ProjectLevel,
    ListProjectsOrdering,
)


class OwaspServiceAsync(OwaspService):
    """
    Async Wrapper for OwaspServiceAsync
    """

    def list_chapters(
        self,
        country: Union[str, None] = SENTINEL,
        region: Union[str, None] = SENTINEL,
        ordering: Union[ListChaptersOrdering, None] = SENTINEL,
        page: int = SENTINEL,
        page_size: Union[int, None] = SENTINEL,
    ) -> Awaitable[PagedChapterSchema]:
        return to_async(super().list_chapters)(
            country, region, ordering, page, page_size
        )

    def list_committees(
        self,
        ordering: Union[ListCommitteesOrdering, None] = SENTINEL,
        page: int = SENTINEL,
        page_size: Union[int, None] = SENTINEL,
    ) -> Awaitable[PagedCommitteeSchema]:
        return to_async(super().list_committees)(ordering, page, page_size)

    def list_events(
        self,
        ordering: Union[ListEventsOrdering, None] = SENTINEL,
        page: int = SENTINEL,
        page_size: Union[int, None] = SENTINEL,
    ) -> Awaitable[PagedEventSchema]:
        return to_async(super().list_events)(ordering, page, page_size)

    def list_projects(
        self,
        level: Union[ProjectLevel, None] = SENTINEL,
        ordering: Union[ListProjectsOrdering, None] = SENTINEL,
        page: int = SENTINEL,
        page_size: Union[int, None] = SENTINEL,
    ) -> Awaitable[PagedProjectSchema]:
        return to_async(super().list_projects)(level, ordering, page, page_size)
