[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "autonomy"
version = "0.1.1"
description = "Enable human-AI collaboration in software development with the Generate-Verify loop"
readme = "README.md"
requires-python = ">=3.8"
license = "GPL-3.0-or-later"
authors = [
    {name = "Mehul Bhardwaj", email = "mehul@example.com"}
]
keywords = ["ai", "automation", "github", "workflow", "agents", "software-development"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Version Control :: Git",
]
dependencies = [
    "requests>=2.25.0",
    "httpx>=0.25.0,<0.28",
    "fastapi>=0.111.0",
    "python-multipart>=0.0.5",
    "click>=8.0.0",
    "pydantic>=2.7.4",
    "langgraph>=0.5.4",
    "rich>=10.0.0",
    "argcomplete>=3.1.1",
    "pyyaml>=6.0",
    "jinja2>=3.0.0",
    "cryptography>=41.0.0",
    "langchain-community>=0.0.17",
    "mem0ai>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-asyncio>=0.18.0",
    "black>=21.0",
    "isort>=5.10",
    "flake8>=3.8",
    "mypy>=0.800",
    "pre-commit>=2.15.0",
    "keyring>=23.0.0",
    "argcomplete>=3.1.1",
    "pyyaml>=6.0",
]
llm = [
    "openai>=1.0.0",
    "anthropic>=0.3.0",
]

[project.scripts]
autonomy = "src.cli.main:main"

[project.urls]
Homepage = "https://github.com/mehulbhardwaj/autonomy"
Documentation = "https://github.com/mehulbhardwaj/autonomy#readme"
Repository = "https://github.com/mehulbhardwaj/autonomy.git"
Issues = "https://github.com/mehulbhardwaj/autonomy/issues"
Changelog = "https://github.com/mehulbhardwaj/autonomy/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 120
extend-ignore = ["W291", "W293"]

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
warn_unused_configs = false
warn_return_any = false
disallow_untyped_defs = false
check_untyped_defs = false
strict = false
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
    "-v"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "src/cli/*",
    "src/core/agents.py",
    "src/github/issue_manager.py",
    "src/core/workflow_manager.py",
    "src/core/config.py",
    "src/core/secret_vault.py",
    "src/github/pat_scopes.py",
    "src/slack/*",
    "src/tasks/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
