# pyright: reportPropertyTypeMismatch=false
from typing import Any

from plotly.basedatatypes import BaseLayoutHierarchyType as _BaseLayoutHierarchyType
from plotly.graph_objs.layout.title import (
    Font,
    Pad,
    Subtitle,
)

class Title(_BaseLayoutHierarchyType):
    _parent_path_str = ...
    _path_str = ...
    _valid_props = ...
    @property
    def automargin(self) -> bool | None: ...
    @automargin.setter
    def automargin(self, val: bool | None) -> None: ...
    @property
    def font(self) -> Font: ...
    @font.setter
    def font(self, val: Font | dict[str, Any]) -> None: ...
    @property
    def pad(self) -> Pad: ...
    @pad.setter
    def pad(self, val: Pad | dict[str, int | float]) -> None: ...
    @property
    def subtitle(self) -> Subtitle: ...
    @subtitle.setter
    def subtitle(self, val: Subtitle | dict[str, Any]) -> None: ...
    @property
    def text(self) -> str | None: ...
    @text.setter
    def text(self, val: str | None) -> None: ...
    @property
    def x(self) -> int | float | None: ...
    @x.setter
    def x(self, val: int | float | None) -> None: ...
    @property
    def xanchor(self) -> str | None: ...
    @xanchor.setter
    def xanchor(self, val: str | None) -> None: ...
    @property
    def xref(self) -> str | None: ...
    @xref.setter
    def xref(self, val: str | None) -> None: ...
    @property
    def y(self) -> int | float | None: ...
    @y.setter
    def y(self, val: int | float | None) -> None: ...
    @property
    def yanchor(self) -> str | None: ...
    @yanchor.setter
    def yanchor(self, val: str | None) -> None: ...
    @property
    def yref(self) -> str | None: ...
    @yref.setter
    def yref(self, val: str | None) -> None: ...
    def __init__(
        self,
        arg: Title | dict[str, Any] | str | None = ...,
        automargin: bool | None = ...,
        font: Font | dict[str, Any] | None = ...,
        pad: Pad | dict[str, int | float] | None = ...,
        subtitle: Subtitle | dict[str, Any] | None = ...,
        text: str | None = ...,
        x: int | float | None = ...,
        xanchor: str | None = ...,
        xref: str | None = ...,
        y: int | float | None = ...,
        yanchor: str | None = ...,
        yref: str | None = ...,
        **kwargs: Any,
    ) -> None: ...
