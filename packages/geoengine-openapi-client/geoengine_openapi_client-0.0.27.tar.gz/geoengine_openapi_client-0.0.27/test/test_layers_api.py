# coding: utf-8

"""
    Geo Engine API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.8.0
    Contact: dev@geoengine.de
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from geoengine_openapi_client.api.layers_api import LayersApi


class TestLayersApi(unittest.TestCase):
    """LayersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = LayersApi()

    def tearDown(self) -> None:
        pass

    def test_add_collection(self) -> None:
        """Test case for add_collection

        Add a new collection to an existing collection
        """
        pass

    def test_add_existing_collection_to_collection(self) -> None:
        """Test case for add_existing_collection_to_collection

        Add an existing collection to a collection
        """
        pass

    def test_add_existing_layer_to_collection(self) -> None:
        """Test case for add_existing_layer_to_collection

        Add an existing layer to a collection
        """
        pass

    def test_add_layer(self) -> None:
        """Test case for add_layer

        Add a new layer to a collection
        """
        pass

    def test_add_provider(self) -> None:
        """Test case for add_provider

        Add a new provider
        """
        pass

    def test_autocomplete_handler(self) -> None:
        """Test case for autocomplete_handler

        Autocompletes the search on the contents of the collection of the given provider
        """
        pass

    def test_delete_provider(self) -> None:
        """Test case for delete_provider

        Delete an existing provider
        """
        pass

    def test_get_provider_definition(self) -> None:
        """Test case for get_provider_definition

        Get an existing provider's definition
        """
        pass

    def test_layer_handler(self) -> None:
        """Test case for layer_handler

        Retrieves the layer of the given provider
        """
        pass

    def test_layer_to_dataset(self) -> None:
        """Test case for layer_to_dataset

        Persist a raster layer from a provider as a dataset.
        """
        pass

    def test_layer_to_workflow_id_handler(self) -> None:
        """Test case for layer_to_workflow_id_handler

        Registers a layer from a provider as a workflow and returns the workflow id
        """
        pass

    def test_list_collection_handler(self) -> None:
        """Test case for list_collection_handler

        List the contents of the collection of the given provider
        """
        pass

    def test_list_providers(self) -> None:
        """Test case for list_providers

        List all providers
        """
        pass

    def test_list_root_collections_handler(self) -> None:
        """Test case for list_root_collections_handler

        List all layer collections
        """
        pass

    def test_provider_capabilities_handler(self) -> None:
        """Test case for provider_capabilities_handler

        """
        pass

    def test_remove_collection(self) -> None:
        """Test case for remove_collection

        Remove a collection
        """
        pass

    def test_remove_collection_from_collection(self) -> None:
        """Test case for remove_collection_from_collection

        Delete a collection from a collection
        """
        pass

    def test_remove_layer(self) -> None:
        """Test case for remove_layer

        Remove a collection
        """
        pass

    def test_remove_layer_from_collection(self) -> None:
        """Test case for remove_layer_from_collection

        Remove a layer from a collection
        """
        pass

    def test_search_handler(self) -> None:
        """Test case for search_handler

        Searches the contents of the collection of the given provider
        """
        pass

    def test_update_collection(self) -> None:
        """Test case for update_collection

        Update a collection
        """
        pass

    def test_update_layer(self) -> None:
        """Test case for update_layer

        Update a layer
        """
        pass

    def test_update_provider_definition(self) -> None:
        """Test case for update_provider_definition

        Update an existing provider's definition
        """
        pass


if __name__ == '__main__':
    unittest.main()
