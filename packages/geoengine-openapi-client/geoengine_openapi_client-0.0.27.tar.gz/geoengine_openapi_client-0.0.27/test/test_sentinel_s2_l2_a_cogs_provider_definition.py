# coding: utf-8

"""
    Geo Engine API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.8.0
    Contact: dev@geoengine.de
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from geoengine_openapi_client.models.sentinel_s2_l2_a_cogs_provider_definition import SentinelS2L2ACogsProviderDefinition

class TestSentinelS2L2ACogsProviderDefinition(unittest.TestCase):
    """SentinelS2L2ACogsProviderDefinition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SentinelS2L2ACogsProviderDefinition:
        """Test SentinelS2L2ACogsProviderDefinition
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SentinelS2L2ACogsProviderDefinition`
        """
        model = SentinelS2L2ACogsProviderDefinition()
        if include_optional:
            return SentinelS2L2ACogsProviderDefinition(
                api_url = '',
                bands = [
                    geoengine_openapi_client.models.stac_band.StacBand(
                        data_type = 'U8', 
                        name = '', 
                        no_data_value = 1.337, )
                    ],
                cache_ttl = 0,
                description = '',
                gdal_retries = 0,
                id = '',
                name = '',
                priority = 56,
                query_buffer = geoengine_openapi_client.models.stac_query_buffer.StacQueryBuffer(
                    end_seconds = 56, 
                    start_seconds = 56, ),
                stac_api_retries = geoengine_openapi_client.models.stac_api_retries.StacApiRetries(
                    exponential_backoff_factor = 1.337, 
                    initial_delay_ms = 0, 
                    number_of_retries = 0, ),
                type = 'SentinelS2L2ACogs',
                zones = [
                    geoengine_openapi_client.models.stac_zone.StacZone(
                        epsg = 0, 
                        name = '', )
                    ]
            )
        else:
            return SentinelS2L2ACogsProviderDefinition(
                api_url = '',
                bands = [
                    geoengine_openapi_client.models.stac_band.StacBand(
                        data_type = 'U8', 
                        name = '', 
                        no_data_value = 1.337, )
                    ],
                description = '',
                id = '',
                name = '',
                type = 'SentinelS2L2ACogs',
                zones = [
                    geoengine_openapi_client.models.stac_zone.StacZone(
                        epsg = 0, 
                        name = '', )
                    ],
        )
        """

    def testSentinelS2L2ACogsProviderDefinition(self):
        """Test SentinelS2L2ACogsProviderDefinition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
