# coding: utf-8

"""
    Geo Engine API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.8.0
    Contact: dev@geoengine.de
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from geoengine_openapi_client.models.ogr_source_dataset import OgrSourceDataset

class TestOgrSourceDataset(unittest.TestCase):
    """OgrSourceDataset unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OgrSourceDataset:
        """Test OgrSourceDataset
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OgrSourceDataset`
        """
        model = OgrSourceDataset()
        if include_optional:
            return OgrSourceDataset(
                attribute_query = '',
                cache_ttl = 0,
                columns = geoengine_openapi_client.models.ogr_source_column_spec.OgrSourceColumnSpec(
                    bool = [
                        ''
                        ], 
                    datetime = [
                        ''
                        ], 
                    float = [
                        ''
                        ], 
                    format_specifics = null, 
                    int = [
                        ''
                        ], 
                    rename = {
                        'key' : ''
                        }, 
                    text = [
                        ''
                        ], 
                    x = '', 
                    y = '', ),
                data_type = 'Data',
                default_geometry = None,
                file_name = '',
                force_ogr_spatial_filter = True,
                force_ogr_time_filter = True,
                layer_name = '',
                on_error = 'ignore',
                sql_query = '',
                time = None
            )
        else:
            return OgrSourceDataset(
                file_name = '',
                layer_name = '',
                on_error = 'ignore',
        )
        """

    def testOgrSourceDataset(self):
        """Test OgrSourceDataset"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
