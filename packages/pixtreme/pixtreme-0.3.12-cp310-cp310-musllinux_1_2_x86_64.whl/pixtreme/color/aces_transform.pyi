from __future__ import annotations
import builtins as __builtins__
import cupy as cp
import cupy
import numpy as np
import os as os
from pixtreme.color.apply_lut import apply_lut
from pixtreme.color.read_lut import read_lut
from pixtreme.utils.dtypes import to_float32
import typing
__all__ = ['aces2065_1_to_acescct', 'aces2065_1_to_acescg', 'aces2065_1_to_rec709', 'aces_to_xyz_matrix', 'acescct_to_aces2065_1', 'acescg_to_aces2065_1', 'ap0_to_ap1_matrix', 'ap1_to_ap0_matrix', 'apply_lut', 'cp', 'current_dir', 'inv_rrt_lut', 'np', 'os', 'read_lut', 'rec709_to_aces2065_1', 'rrt_lut', 'to_float32', 'xyz_to_709_matrix']
def aces2065_1_to_acescct(image: cp.ndarray | np.ndarray) -> cp.ndarray | np.ndarray:
    ...
def aces2065_1_to_acescg(image: cp.ndarray | np.ndarray) -> cp.ndarray | np.ndarray:
    ...
def aces2065_1_to_rec709(image: cp.ndarray | np.ndarray, tonemap: bool = True) -> cp.ndarray | np.ndarray:
    ...
def acescct_to_aces2065_1(image: cp.ndarray | np.ndarray) -> cp.ndarray | np.ndarray:
    ...
def acescg_to_aces2065_1(image: cp.ndarray | np.ndarray) -> cp.ndarray | np.ndarray:
    ...
def rec709_to_aces2065_1(image: cp.ndarray | np.ndarray, tonemap: bool = True) -> cp.ndarray | np.ndarray:
    ...
__test__: dict = {}
aces_to_xyz_matrix: cupy.ndarray  # value = array([[ 9.52552396e-01,  0.00000000e+00,  9.36786000e-05],...
ap0_to_ap1_matrix: cupy.ndarray  # value = array([[ 1.45143932, -0.23651075, -0.21492857],...
ap1_to_ap0_matrix: cupy.ndarray  # value = array([[ 0.69545224,  0.1406787 ,  0.16386906],...
current_dir: str = 'Z:\\Repositories_mia\\pixtreme\\src\\pixtreme\\color'
inv_rrt_lut: cupy.ndarray  # value = array([[[[0.0425838, 0.0425838, 0.0425839],...
rrt_lut: cupy.ndarray  # value = array([[[[0.       , 0.       , 0.       ],...
xyz_to_709_matrix: cupy.ndarray  # value = array([[ 3.2096   , -1.55743  , -0.495805 ],...
