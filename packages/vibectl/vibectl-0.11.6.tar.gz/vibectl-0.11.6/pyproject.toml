[project]
name = "vibectl"
version = "0.11.6"
description = "A vibes-based alternative to kubectl"
authors = [
    { name = "Daniel Klein", email = "othercriteria@gmail.com" }
]
dependencies = [
    "acme>=4.0.0,<5.0.0",
    "aiohttp>=3.9.0,<4.0.0",
    "annotated-types>=0.6.0,<0.7.0",
    "anyio>=4.3.0,<5.0.0",
    "click>=8.1.7,<9.0.0",
    "asyncclick>=8.0.1.2",
    "cryptography>=41.0.0",
    "distro>=1.9.0,<2.0.0",
    "grpcio>=1.60.0,<2.0.0",
    "grpcio-tools>=1.60.0,<2.0.0",
    "httpx>=0.27.0,<0.28.0",
    "josepy>=2.0.0,<3.0.0",
    "kubernetes>=29.0.0,<30.0.0",
    "pyjwt>=2.8.0,<3.0.0",
    "rich>=13.0.0",
    "requests>=2.31.0",
    "pyyaml>=6.0.0",
    "llm>=0.13.0",
    "prometheus_client>=0.18.0,<1.0.0",
]
requires-python = ">=3.11"
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-xdist>=3.5.0",
    "pytest-cov>=4.1.0",
    "pytest-timeout>=2.3.0",
    "pytest-mock>=3.12.0",
    "ruff>=0.3.0",
    "mypy>=1.5.0",
    "types-requests>=2.31.0",
    "pydantic>=2.0.0",
    "types-PyYAML>=6.0.0",
    "types-docker>=6.1.3",
    "types-Flask-SocketIO>=5.0.0",
    "virtualenv>=20.25.0",
    "pytest-asyncio>=0.26.0,<0.27",
    "asyncmock>=0.4.2",
    "grpc-stubs>=1.53.0",
    "types-protobuf>=4.24.0",
    "pre-commit>=3.7.0",  # Needed for git pre-commit hooks to run
    "uv>=0.1.0",  # uv for dependency resolution and locking
    "build>=1.2.1",  # ensure python -m build is available
]

[project.scripts]
vibectl = "vibectl.cli:main"
vibectl-server = "vibectl.server.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = [
    "vibectl/**/*.py",
    "vibectl/**/*.pyi",
    "vibectl/py.typed",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
# Removed -n auto --dist loadfile to fix CoverageWarning issues
# If you need parallel tests, use: pytest -n auto --no-cov
addopts = "--cov=vibectl --cov-report=term --cov-report=xml --cov-config=.coveragerc --timeout=5"
asyncio_mode = "auto"
# Explicitly set the fixture loop scope to function to silence warning and prepare for future default
asyncio_default_fixture_loop_scope = "function"

# Define marker for running fast tests without memory fixtures
markers = [
    "fast: tests that should be very fast",
    "slow: tests that are expected to be slow",
]

# Coverage configuration is in .coveragerc file

[tool.ruff]
line-length = 88
target-version = "py311"
# Exclude generated protobuf/gRPC code
exclude = [
    "vibectl/proto/llm_proxy_pb2.py",
    "vibectl/proto/llm_proxy_pb2_grpc.py",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "RUF", # ruff-specific rules
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["vibectl"]
combine-as-imports = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]
mypy_path = "typings"
# Exclude generated protobuf/gRPC code
exclude = [
    "vibectl/proto/llm_proxy_pb2.py",
    "vibectl/proto/llm_proxy_pb2_grpc.py",
]

[[tool.mypy.overrides]]
module = [
    "kubernetes.*",
    "llm",
    "llm.*",
    "jwt",
    "acme.*",
    "josepy",
    "aiohttp",
    "aiohttp.*",
    "requests.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "vibectl.proto.llm_proxy_pb2",
    "vibectl.proto.llm_proxy_pb2_grpc",
]
ignore_errors = true
