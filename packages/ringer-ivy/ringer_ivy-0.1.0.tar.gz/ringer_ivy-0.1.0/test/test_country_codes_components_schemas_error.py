# coding: utf-8

"""
    Ringer Business API

    This API provides comprehensive endpoints for the Ringer Business system. It includes functionality for managing customer accounts, addresses, sites, phone numbers, payments, users, and other business resources.  Operations typically require authentication and appropriate permissions. 

    The version of the OpenAPI document: 1.0.6
    Contact: support@ringer.tel
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ringer-ringer-business-python.models.country_codes_components_schemas_error import CountryCodesComponentsSchemasError

class TestCountryCodesComponentsSchemasError(unittest.TestCase):
    """CountryCodesComponentsSchemasError unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CountryCodesComponentsSchemasError:
        """Test CountryCodesComponentsSchemasError
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CountryCodesComponentsSchemasError`
        """
        model = CountryCodesComponentsSchemasError()
        if include_optional:
            return CountryCodesComponentsSchemasError(
                status = 'error',
                error = 'Failed to retrieve country codes.',
                error_code = 'COUNTRY_CODE_LIST_ERROR'
            )
        else:
            return CountryCodesComponentsSchemasError(
                status = 'error',
                error = 'Failed to retrieve country codes.',
                error_code = 'COUNTRY_CODE_LIST_ERROR',
        )
        """

    def testCountryCodesComponentsSchemasError(self):
        """Test CountryCodesComponentsSchemasError"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
