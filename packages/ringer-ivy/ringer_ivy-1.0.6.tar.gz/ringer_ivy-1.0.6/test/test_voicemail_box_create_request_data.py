# coding: utf-8

"""
    Ringer Business API

    This API provides comprehensive endpoints for the Ringer Business system. It includes functionality for managing customer accounts, addresses, sites,  phone numbers, payments, users, and other business resources.  Operations typically require authentication and appropriate permissions. 

    The version of the OpenAPI document: 1.0.5
    Contact: support@ringer.tel
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ringer_business.models.voicemail_box_create_request_data import VoicemailBoxCreateRequestData

class TestVoicemailBoxCreateRequestData(unittest.TestCase):
    """VoicemailBoxCreateRequestData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VoicemailBoxCreateRequestData:
        """Test VoicemailBoxCreateRequestData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VoicemailBoxCreateRequestData`
        """
        model = VoicemailBoxCreateRequestData()
        if include_optional:
            return VoicemailBoxCreateRequestData(
                type = 'voicemail-box',
                attributes = {"name":"Support Line VM","pin":"5678","notification_emails":"support@example.com","status":"active"}
            )
        else:
            return VoicemailBoxCreateRequestData(
                type = 'voicemail-box',
                attributes = {"name":"Support Line VM","pin":"5678","notification_emails":"support@example.com","status":"active"},
        )
        """

    def testVoicemailBoxCreateRequestData(self):
        """Test VoicemailBoxCreateRequestData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
