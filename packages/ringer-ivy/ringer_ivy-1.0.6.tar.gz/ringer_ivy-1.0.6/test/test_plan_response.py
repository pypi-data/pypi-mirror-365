# coding: utf-8

"""
    Ringer Business API

    This API provides comprehensive endpoints for the Ringer Business system. It includes functionality for managing customer accounts, addresses, sites, phone numbers, payments, users, and other business resources.  Operations typically require authentication and appropriate permissions. 

    The version of the OpenAPI document: 1.0.6
    Contact: support@ringer.tel
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ringer_business.models.plan_response import PlanResponse

class TestPlanResponse(unittest.TestCase):
    """PlanResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PlanResponse:
        """Test PlanResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlanResponse`
        """
        model = PlanResponse()
        if include_optional:
            return PlanResponse(
                id = 1,
                name = 'Standard Business Plan',
                description = 'Includes core calling features, 1000 domestic minutes, and basic voicemail.',
                total_cost = '49.99',
                currency = 'USD',
                removable = True,
                active = True,
                approved = True,
                finalized = True,
                items = [
                    {"id":449,"name":"Emergency Call Service (E911)","item_type":"service_fee","item_rules":"e911_access","item_price":"1.50","currency":"USD","price_deck_id":10,"tax_category":59,"tax_code":8,"links":[{"href":"/items/449","rel":"self","method":"GET"},{"href":"/price-decks/10","rel":"priceDeck","method":"GET"}]}
                    ],
                packages = ringer_business.models.plan_response_all_of_packages.PlanResponse_allOf_packages(
                    included_packages = [
                        {"id":94,"name":"Plan Subscription Fee","description":"Monthly fee for the Unlimited Device Plan.","item_type":"subscription","item_rules":"base_fee","item_quantity":1,"price":"25.00","currency":"USD","plan_id":1,"included":true,"removable":false,"category":"base_plan","renewable":true,"links":[{"href":"/packages/94","rel":"self","method":"GET"},{"href":"/plans/1","rel":"relatedPlan","method":"GET"}]}
                        ], 
                    optional_packages = [
                        {"id":94,"name":"Plan Subscription Fee","description":"Monthly fee for the Unlimited Device Plan.","item_type":"subscription","item_rules":"base_fee","item_quantity":1,"price":"25.00","currency":"USD","plan_id":1,"included":true,"removable":false,"category":"base_plan","renewable":true,"links":[{"href":"/packages/94","rel":"self","method":"GET"},{"href":"/plans/1","rel":"relatedPlan","method":"GET"}]}
                        ], ),
                links = [
                    ringer_business.models.schemas_link.schemas-Link(
                        href = '', 
                        rel = '', 
                        title = '', 
                        method = 'GET', )
                    ]
            )
        else:
            return PlanResponse(
                id = 1,
                name = 'Standard Business Plan',
                total_cost = '49.99',
                currency = 'USD',
                removable = True,
                active = True,
                approved = True,
                finalized = True,
        )
        """

    def testPlanResponse(self):
        """Test PlanResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
