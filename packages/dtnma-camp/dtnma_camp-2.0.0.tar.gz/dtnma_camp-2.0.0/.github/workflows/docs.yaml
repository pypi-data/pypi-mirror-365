##
## Copyright (c) 2020-2025 The Johns Hopkins University Applied Physics
## Laboratory LLC.
##
## This file is part of the C code generator for AMP (CAMP) under the
## DTN Management Architecture (DTNMA) reference implementaton set from APL.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##     http://www.apache.org/licenses/LICENSE-2.0
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
## Portions of this work were performed for the Jet Propulsion Laboratory,
## California Institute of Technology, sponsored by the United States Government
## under the prime contract 80NM0018D0004 between the Caltech and NASA under
## subcontract 1658085.
##

name: API documentation

on:
  push:
    branches:
      - main
      - 'apl-fy[0-9][0-9]'
  pull_request: {} # any target
  schedule:
    - cron: '0 0 * * 0'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  ACE_REPO: "git+https://github.com/JHUAPL-DTNMA/dtnma-ace.git@main"

jobs:
  apidoc:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y python3-pip
          pip3 install --upgrade pip
          pip3 install ${ACE_REPO}
          pip3 install .[docs]
      - name: build
        run: ./build_docs.sh
      - name: Compress
        run: cd docs/_build && tar -cf html.tar html
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs/_build/html.tar

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: apidoc
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: docs
          path: docs/_build/
      - name: Decompress
        run: cd docs/_build && tar -xf html.tar
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Just the HTML
          path: docs/_build/html/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
