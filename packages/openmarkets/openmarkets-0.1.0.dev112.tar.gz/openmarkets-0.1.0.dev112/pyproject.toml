[project]
name = "openmarkets"
dynamic = ["version"]
description = "A Model Context Protocol (MCP) server for agentic retrieval of financial market data. This server leverages YFinance to provide a simple and efficient way to access historical stock prices, dividends, stock splits, company information, and other financial metrics."
authors = [{ name = "Dobri Danchev", email = "python-dist@danchev.net" }]
classifiers = [
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Development Status :: 3 - Alpha",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: 3 :: Only",
]
keywords = [
    "machinelearning",
    "finance",
    "investment",
    "mcp",
    "modelcontextprotocol",
    "yahoo finance",
    "financial data retrieval",
]
readme = "README.md"
license = { text = "AGPL-3.0-or-later" }
requires-python = ">=3.10"
dependencies = [
    "mcp[cli]>=1.9.4",
    "yfinance>=0.2.63", # Licensed under Apache-2.0
]

[project.urls]
Homepage = "https://openmarkets.dev"
Source = "https://github.com/danchev/openmarkets"
Documentation = "https://danchev.github.io/openmarkets"
Issues = "https://github.com/danchev/openmarkets/issues"

[project.scripts]
openmarkets = "openmarkets.core.server:main"
mcp-server-yfinance = "openmarkets.core.server:main"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/openmarkets"]

[tool.hatch.build.hooks.vcs]
version-file = "src/openmarkets/_version.py"

[tool.hatch.envs.default]
installer = "uv"

[tool.hatch.version]
source = "vcs"
raw-options.version_scheme = "release-branch-semver" # "calver-by-date"
raw-options.local_scheme = "no-local-version"
raw-options.fallback_version = "0.0.0"

[dependency-groups]
dev = [
    "pyright>=1.1.402",
    "refurb>=2.1.0",
    "ruff>=0.12.0",
    "ty>=0.0.1a11",
    {include-group = "test"},
    {include-group = "commit"},
]
test = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-xdist>=3.7.0",
    "pytest-asyncio>= 1.0.0",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-glightbox>=0.4.0",
    "mkdocs-material[imaging]>=9.6.14",
    "mkdocstrings-python>=1.16.12",
]
commit = [
    "commitizen>=4.8.3", 
    "pre-commit>=4.2.0",
]

[tool.ruff]
fix = true
show-fixes = true
output-format = "full"
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "Q"]
ignore = ["E203", "E501"]

[tool.ruff.lint.isort]
known-first-party = ["openmarkets"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
addopts = "-n auto --cov=src/openmarkets --cov-report=html --cov-report=term-missing --cov-fail-under=70"
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"

[tool.mypy]
custom_typeshed_dir = "typings"
plugins = ["mypy_ruff"]
