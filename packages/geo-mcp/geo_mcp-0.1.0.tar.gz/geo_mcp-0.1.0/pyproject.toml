[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "geo-mcp"
dynamic = ["version"]
description = "A Model Context Protocol (MCP) server for accessing GEO (Gene Expression Omnibus) data through NCBI E-Utils API"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
keywords = ["mcp", "geo", "bioinformatics", "gene-expression", "ncbi", "e-utils"]
authors = [
    {name ="MCPmed Contributors", email = "matthias.flotho@ccb.uni-saarland.de"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "mcp[cli]>=1.9.4",
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
    "aiofiles>=23.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
]

[project.urls]
Homepage = "https://github.com/MCPmed/geomcp"
Repository = "https://github.com/MCPmed/geomcp"
Documentation = "https://github.com/MCPmed/geomcp#readme"
"Bug Tracker" = "https://github.com/MCPmed/geomcp/issues"

[project.scripts]
geo-mcp = "geomcp.main:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["geomcp"]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
