"""empty message

Revision ID: 9814f1caae60
Revises:
Create Date: 2025-07-27 20:05:32.607548

"""

from __future__ import annotations

import sqlalchemy as sa
from alembic import context, op
from edgy import monkay, run_sync


# revision identifiers, used by Alembic.
revision = "9814f1caae60"
down_revision = None
branch_labels = None
depends_on = None


def hash_to_identifier(key: str | bytes) -> str:
    from base64 import b32encode
    from hashlib import blake2b

    if isinstance(key, str):
        key = key.encode()
    return f"_{b32encode(blake2b(key, digest_size=16).digest()).decode().rstrip('=')}"


force_fields_nullable: list[tuple[str, str]] = []


def upgrade(engine_name: str = "") -> None:
    # hash_to_identifier adds already an "_"
    fn = globals().get(f"upgrade{hash_to_identifier(engine_name)}")
    if fn is not None:
        fn()


def downgrade(engine_name: str = "") -> None:
    # hash_to_identifier adds already an "_"
    fn = globals().get(f"downgrade{hash_to_identifier(engine_name)}")
    if fn is not None:
        fn()


def upgrade_ZLTGSQOZ566UATSNRB2Y5JTWOA():
    # Migration of:
    # main database
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auths",
        sa.Column("token", sa.String(length=255), autoincrement=False, nullable=False),
        sa.Column(
            "id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            autoincrement=True,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column(
            "is_active",
            sa.Boolean(),
            server_default=sa.text("1"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "first_name", sa.String(length=50), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_name", sa.String(length=50), autoincrement=False, nullable=True
        ),
        sa.Column("email", sa.String(length=255), autoincrement=False, nullable=False),
        sa.Column(
            "password", sa.String(length=1000), autoincrement=False, nullable=True
        ),
        sa.Column(
            "id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            autoincrement=True,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "profiles",
        sa.Column(
            "user",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            autoincrement=True,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user"],
            ["users.id"],
            name="fk_profiles_users_user",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###
    if not context.is_offline_mode():
        try:
            with monkay.instance.registry.with_async_env():
                run_sync(
                    monkay.instance.registry.apply_default_force_nullable_fields(
                        force_fields_nullable=force_fields_nullable,
                        filter_db_name="",
                        model_defaults={},
                    )
                )
        except Exception as exc:
            print("failure migrating defaults", exc)


def downgrade_ZLTGSQOZ566UATSNRB2Y5JTWOA():
    # Migration of:
    # main database
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("profiles")
    op.drop_table("users")
    op.drop_table("auths")
    # ### end Alembic commands ###
