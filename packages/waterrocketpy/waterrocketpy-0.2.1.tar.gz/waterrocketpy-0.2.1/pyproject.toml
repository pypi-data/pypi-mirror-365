[project]
name = "waterrocketpy"
version = "0.2.1"
dynamic = [
    "dependencies",
]
description = "A modular Python package for simulating water rockets."
readme = "README.md"
requires-python = ">=3.8"
keywords = [
    "waterrocketpy",
]
license = {text = "MIT License"}
authors = [
  {name = "Pablo M", email = "pablo.marg8@gmail.com"},
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.entry-points."console_scripts"]
waterrocketpy = "waterrocketpy.cli:main"

[project.optional-dependencies]
extra = [
    "pandas",
]

dev = [
    "pytest>=7.0",
    "pytest-cov",  
    "coverage",  # optional, useful for test coverage
    "ruff",      # optional, for linting
    "mypy",      # optional, for type checking
    
]

all = [
    "waterrocketpy[extra]",
    "waterrocketpy[dev]",
]


[tool]
[tool.setuptools.packages.find]
include = ["waterrocketpy*"]
exclude = ["docs*"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
#dev = {file = ["requirements_dev.txt"]}


[tool.distutils.bdist_wheel]
universal = true


[tool.bumpversion]
current_version = "0.2.1"
commit = true
tag = true

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "waterrocketpy/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'


[tool.flake8]
exclude = [
    "docs",
]
max-line-length = 88


[project.urls]
Homepage = "https://github.com/Cube002/waterrocketpy"

[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
addopts = "-ra --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]