[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "teklia-yolo"
license = { file = "LICENSE" }
version = "0.2.3"
description = "Scripts to train and evaluate YOLOv8 models"
dependencies = [
    "arkindex-export==0.1.12",
    "more-itertools==10.1.0",
    "opencv-python==4.10.0.84",
    "Pillow==11.3.0",
    "pyyaml==6.0.2",
    "requests~=2.28",
    "shapely==2.0.6",
    "tenacity~=9.1",
    "tqdm==4.66.1",
]
authors = [
    { name = "Teklia", email = "contact@teklia.com" },
]
maintainers = [
    { name = "Teklia", email = "contact@teklia.com" },
]
requires-python = ">=3.10"
readme = { file = "README.md", content-type = "text/markdown" }
keywords = ["python"]
classifiers = [
    # Specify the Python versions you support here.
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.optional-dependencies]
docs = [
    "black==23.7.0",
    "doc8==1.1.1",
    "mkdocs==1.5.2",
    "mkdocs-material==9.1.21",
    "mkdocstrings==0.22.0",
    "mkdocstrings-python==1.3.0",
    "recommonmark==0.7.1",
]

[project.scripts]
"teklia-yolo" = "teklia_yolo.cli:main"

[tool.setuptools.packages]
find = {}

[tool.ruff]
exclude = [".git", "__pycache__"]

[tool.ruff.lint]
ignore = ["E501"]
select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # Flake8 Debugger
    "T1",
    # Isort
    "I",
    # Implicit Optional
    "RUF013",
    # Invalid pyproject.toml
    "RUF200",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # flake8-pytest-style
    "PT",
    # flake8-use-pathlib
    "PTH",
]

[tool.ruff.lint.per-file-ignores]
# Ignore `pytest-composite-assertion` rules of `flake8-pytest-style` linter for non-test files
"teklia_yolo/**/*.py" = ["PT018"]

[tool.ruff.lint.isort]
known-third-party = ["pytest", "setuptools"]
