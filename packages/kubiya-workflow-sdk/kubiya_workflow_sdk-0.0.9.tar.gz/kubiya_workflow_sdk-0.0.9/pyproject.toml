[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "kubiya-workflow-sdk"
version = "0.0.9"
description = "SDK for building and managing Kubiya workflows"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Kubiya Team", email = "support@kubiya.ai"}
]
keywords = ["kubiya", "workflow", "sdk", "automation", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
requires-python = ">=3.10,<4.0"
dependencies = [
    "pydantic>=2.0.0",
    "httpx>=0.24.0",
    "aiohttp>=3.8.0",
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "PyYAML>=6.0",
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

mcp = [
    "fastmcp>=1.1.4",
    "mcp>=1.1.3",
    "pyee>=12.1.1",
    "fastapi>=0.115",
    "sse_starlette>=2.3",
    "aiofiles>=24.1",
]
auth = [
    "mcpauth>=0.1.0",
    "starlette>=0.46.0",
    "uvicorn>=0.30.0",
]

sentry = [
    "sentry-sdk>=2.0.0",
]

all = [
    "fastmcp>=1.1.4",
    "mcp>=1.1.3",
    "pyee>=12.1.1",
    "fastapi>=0.115",
    "sse_starlette>=2.3",
    "aiofiles>=24.1",
    "mcpauth>=0.1.0",
    "starlette>=0.46.0",
    "uvicorn>=0.30.0",
    "sentry-sdk>=2.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/kubiyabot/workflow_sdk"
Documentation = "https://docs.kubiya.ai/workflow_sdk"
Repository = "https://github.com/kubiyabot/workflow_sdk"
Issues = "https://github.com/kubiyabot/workflow_sdk/issues"

[project.scripts]
kubiya-workflow = "kubiya_workflow_sdk.cli:main"

[tool.setuptools]
packages = {find = {include = ["kubiya_workflow_sdk*"]}}

[tool.setuptools.package-data]
kubiya_workflow_sdk = ["py.typed"]


[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.mypy]
python_version = "0.0.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto" 
[tool.poetry.group.dev.dependencies]
mcp = "^1.10.0"
pytest = "^8.4.1"
black = "^25.1.0"
pytest-xdist = "^3.7.0"
pylint = "^3.3.7"

