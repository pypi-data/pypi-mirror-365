{
  "enable_runners": true,
  "allow_platform_apis": false,
  "enable_opa_policies": false,
  "allow_dynamic_tools": false,
  "verbose_logging": true,
  "whitelisted_tools": [
    {
      "name": "kubectl",
      "alias": "",
      "description": "Executes kubectl commands. For namespace-scoped resources, include '-n <namespace>' in the command. Use '--all-namespaces' for cluster-wide queries. Some resources like nodes and persistent volumes are cluster-scoped and don't require a namespace.",
      "type": "docker",
      "content": "\nset -eu\nTOKEN_LOCATION=\"/tmp/kubernetes_context_token\"\nCERT_LOCATION=\"/tmp/kubernetes_context_cert\"\n# Inject in-cluster context using the temporary token file\nif [ -f $TOKEN_LOCATION ] && [ -f $CERT_LOCATION ]; then\n    KUBE_TOKEN=$(cat $TOKEN_LOCATION)\n    kubectl config set-cluster in-cluster --server=https://kubernetes.default.svc --certificate-authority=$CERT_LOCATION > /dev/null 2>&1\n    kubectl config set-credentials in-cluster --token=$KUBE_TOKEN > /dev/null 2>&1\n    kubectl config set-context in-cluster --cluster=in-cluster --user=in-cluster > /dev/null 2>&1\n    kubectl config use-context in-cluster > /dev/null 2>&1\nelse\n    echo \"Error: Kubernetes context token or cert file not found at $TOKEN_LOCATION or $CERT_LOCATION respectively.\"\n    exit 1\nfi\n\n\n    #!/bin/bash\n    set -e\n\n    # Show the command being executed\n    echo \"üîß Executing: kubectl $command\"\n\n    # Run the kubectl command\n    if eval \"kubectl $command\"; then\n        echo \"‚úÖ Command executed successfully\"\n    else\n        echo \"‚ùå Command failed: kubectl $command\"\n        exit 1\n    fi\n    ",
      "args": [
        {
          "name": "command",
          "type": "string",
          "description": "The full kubectl command to execute. Examples include (but are not limited to):\n- 'get pods -n default'\n- 'create namespace test'\n- 'get pods --all-namespaces'\n- 'get nodes'  # cluster-scoped resource, no namespace needed\n- 'describe node my-node-1'",
          "required": true
        }
      ],
      "env": null,
      "with_files": [
        {
          "source": "/var/run/secrets/kubernetes.io/serviceaccount/token",
          "destination": "/tmp/kubernetes_context_token"
        },
        {
          "source": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
          "destination": "/tmp/kubernetes_context_cert"
        }
      ],
      "with_volumes": null,
      "icon_url": "https://kubernetes.io/icons/icon-128x128.png",
      "image": "kubiya/kubectl-light:latest",
      "runner": "core-testing-2"
    }
  ]
}