name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: |
          pyproject.toml
          requirements*.txt
    
    - name: Install dependencies
      run: |
        uv pip install --system -e ".[dev]"
    
    - name: Run tests with pytest
      run: |
        uv run pytest tests -v --cov=aceiot_models_cli --cov-report=term-missing --cov-report=xml
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.13'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
    
    - name: Install dependencies
      run: |
        uv pip install --system ruff
    
    - name: Run ruff check
      run: |
        uv run ruff check src tests
    
    - name: Run ruff format check
      run: |
        uv run ruff format --check src tests

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
    
    - name: Install dependencies
      run: |
        uv pip install --system -e ".[dev]"
        uv pip install --system pyright
    
    - name: Run pyright
      run: |
        uv run pyright src

  tox:
    name: Tox Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
    
    - name: Install tox and tox-uv
      run: |
        uv pip install --system tox tox-uv
    
    - name: Run tox
      run: |
        uv run tox