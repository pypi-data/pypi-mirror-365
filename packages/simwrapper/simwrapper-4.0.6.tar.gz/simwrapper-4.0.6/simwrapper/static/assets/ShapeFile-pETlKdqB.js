import{a}from"./ShapeFile.vue_vue_type_style_index_0_scoped_e7733128_lang-DsmdsuDw.js";import{l as se}from"./ShapeFile.vue_vue_type_style_index_0_scoped_e7733128_lang-DsmdsuDw.js";import{n as l}from"./index-SKCiK1zC.js";import"./index-CrY58g0x.js";import"./turf.es-DhhXp8l8.js";import"./avro-Dd9UqmeZ.js";import"./index-DksM12c3.js";import"./Coords-Com0YmOE.js";import"./index-WYdOAFlo.js";import"./HTTPFileSystem-BuB8fZgO.js";import"./fxp-DXsl1rlp.js";import"./papaparse.min-v0TNBzJj.js";import"./DrawingTool-DkPs1xTR.js";import"./set-rtl-text-plugin-DzNy9J29.js";import"./geojson-layer-By_hfVqo.js";import"./text-layer-DB5OKgrd.js";import"./path-layer-D9CUlC4w.js";import"./cut-by-mercator-bounds-BNp6eabq.js";import"./solid-polygon-layer-CTv0ZA23.js";import"./ColorsAndWidths-C-Lh42fR.js";import"./color-DZRtpOAM.js";import"./cubehelix-Bg3rkAQA.js";import"./Set3-Dyl9Llxj.js";import"./index-_doEQLKC.js";import"./rainbow-Dz4seJAz.js";import"./LineOffsetLayer-DOA-Ysbh.js";import"./line-layer-BJXrAtPR.js";import"./PathOffsetLayer-D_6tS9qG.js";import"./screenshots-Tas2EtGs.js";import"./data-filter-DzTA4XRG.js";import"./layer-extension-Np6Avtxt.js";import"./BackgroundMapOnTop-BYgkcgTO.js";import"./VizConfigurator-WNJuzIpG.js";import"./lodash-CDl-QJqF.js";import"./DashboardDataManager-DmbdSxPe.js";import"./RoadNetworkLoader.worker-CZuyU4Ze.js";import"./group-DobYzF2-.js";import"./index-DTU2ei1N.js";import"./LegendBox-DllzebBi.js";import"./ZoomButtons-Dje-VE6e.js";import"./LegendStore-CGgeb9zL.js";import"./sequential-CKBnvidU.js";import"./pow-BDr0uoeQ.js";import"./round-D-ROWHlE.js";var r=function(){var e=this,t=e._self._c;return e._self._setupProxy,t("div",{staticClass:"shapefile-viewer",class:{"hide-thumbnail":!e.thumbnail},style:{background:e.urlThumbnail},attrs:{oncontextmenu:"return false"}},[e.showJoiner?t("modal-id-column-picker",e._b({attrs:{header:"Which column contains the unique ID for each shape/feature?"},on:{join:e.cbDatasetJoined}},"modal-id-column-picker",e.datasetJoinSelector,!1)):e._e(),e.statusText?t("div",{staticClass:"status-box"},[t("p",[e._v(e._s(e.statusText))]),e.loadProgress>0?t("b-progress",{staticClass:"load-progress",attrs:{value:e.loadProgress,rounded:!1,type:"is-success"}}):e._e()],1):e._e(),t("div",{staticClass:"main-layout",on:{mousemove:e.dividerDragging}},[t("div",{directives:[{name:"show",rawName:"v-show",value:e.showLegend,expression:"showLegend"}],staticClass:"dragger",on:{mousedown:e.dividerDragStart,mouseup:e.dividerDragEnd,mousemove:function(i){return i.stopPropagation(),e.dividerDragging.apply(null,arguments)}}}),t("div",{directives:[{name:"show",rawName:"v-show",value:e.showLegend,expression:"showLegend"}],staticClass:"new-rightside-info-panel",style:{width:`${e.legendSectionWidth}px`}},[t("div",{staticClass:"legend-panel"},[e.legendStore.state?.sections?.length?e._e():t("p",{staticStyle:{"font-size":"1.1rem"}},[t("b",[e._v("INFO PANEL")])]),t("legend-box",{attrs:{legendStore:e.legendStore}}),Object.keys(e.bgLayers).length?t("div",{staticClass:"bglayer-section flex-col"},[t("h5",[e._v("Layers")]),e._l(Object.keys(e.bgLayers),function(i){return t("b-checkbox",{key:i,staticClass:"simple-checkbox",on:{input:e.updateBgLayers},model:{value:e.bgLayers[i].visible,callback:function(s){e.$set(e.bgLayers[i],"visible",s)},expression:"bgLayers[layer].visible"}},[e._v(e._s(i))])})],2):e._e()],1),e.tooltipHtml&&!e.statusText?t("div",{staticClass:"tooltip-html flex-col",on:{mouseover:function(i){e.wantToClearTooltip=!1},mouseout:function(i){e.wantToClearTooltip=!0}}},[t("div",{staticClass:"the-html",domProps:{innerHTML:e._s(e.tooltipHtml)}}),e.tooltipDesiredColumns.length?t("div",{staticClass:"edit-hint",staticStyle:{"text-align":"right"}},[t("a",{on:{click:function(i){e.showTooltipConfigurator=!0}}},[e._v("Show/hide...")])]):e._e()]):e._e()]),e.thumbnail?e._e():t("div",{staticClass:"area-map",attrs:{id:`container-${e.layerId}`}},[!e.showLegend&&!e.statusText&&e.tooltipHtml?t("div",{staticClass:"tooltip-when-no-legend-present flex-col",on:{mouseover:function(i){e.wantToClearTooltip=!1},mouseout:function(i){e.wantToClearTooltip=!0}}},[t("div",{staticClass:"the-html",domProps:{innerHTML:e._s(e.tooltipHtml)}}),e.tooltipDesiredColumns.length?t("a",{staticStyle:{textAlign:"right"},on:{click:function(i){e.showTooltipConfigurator=!0}}},[e._v("Show/hide...")]):e._e()]):e._e(),e.needsInitialMapExtent?e._e():t("geojson-layer",{staticClass:"map-layers",attrs:{viewId:e.layerId,fillColors:e.dataFillColors,lineColors:e.dataLineColors,lineWidths:e.dataLineWidths,fillHeights:e.dataFillHeights,screenshot:e.triggerScreenshot,featureFilter:e.boundaryFilters,opacity:e.sliderOpacity/100*(e.sliderOpacity/100),pointRadii:e.dataPointRadii,cbTooltip:e.cbTooltip,cbClickEvent:e.handleClickEvent,bgLayers:e.bgLayers,highlightedLinkIndex:e.highlightedLinkIndex,redraw:e.redraw,features:e.boundaries,dark:e.globalState.isDarkMode,isRGBA:e.isRGBA,mapIsIndependent:e.vizDetails.mapIsIndependent,initialView:e.initialView,isAtlantis:e.isAtlantis}}),e.isLoaded&&e.isAreaMode?t("background-map-on-top"):e._e(),e.showTooltipConfigurator?t("div",{staticClass:"modal modal-tooltip-picker flex-col",on:{mouseover:function(i){e.wantToClearTooltip=!1}}},[t("h4",[e._v("Configure tooltips")]),t("p",{staticStyle:{margin:"0.5rem auto 0 0.75rem"}},[e._v("Select feature columns to be displayed in default tooltips.")]),t("div",{staticClass:"flex-row",staticStyle:{margin:"0.25rem auto 0 0.75rem",gap:"0.25rem"}},[t("b-button",{staticClass:"is-small",attrs:{type:"is-link",outlined:""},on:{click:e.setDesiredTooltipsNone}},[e._v("None")]),t("b-button",{staticClass:"is-small",attrs:{type:"is-link",outlined:""},on:{click:e.setDesiredTooltipsAll}},[e._v(" All ")])],1),t("div",{staticClass:"tooltip-items flex-col flex1"},e._l(e.tooltipDesiredColumns,function(i,s){return t("b-checkbox",{key:i.col,staticClass:"cbspace",model:{value:i.enabled,callback:function(o){e.$set(i,"enabled",o)},expression:"item.enabled"}},[e._v(" "+e._s(i.col))])}),1),t("div",{staticClass:"close-row flex-row",staticStyle:{padding:"0.5rem","margin-left":"auto",gap:"0.25rem"}},[t("b-button",{staticClass:"is-small",attrs:{type:"is-success"},on:{click:function(i){e.showTooltipConfigurator=!1}}},[e._v(" Close ")])],1)]):e._e(),e.isLoaded?t("viz-configurator",{attrs:{embedded:e.isEmbedded,sections:e.configuratorSections,fileSystem:e.fileSystem,subfolder:e.subfolder,yamlConfig:e.generatedExportFilename,vizDetails:e.vizDetails,datasets:e.datasets,legendStore:e.legendStore,filterDefinitions:e.currentUIFilterDefinitions},on:{update:e.changeConfiguration,screenshot:e.takeScreenshot,toggleLegend:function(i){e.showLegend=!e.showLegend}}}):e._e(),e.isAreaMode?t("div",{staticClass:"width-sliders flex-row",style:{backgroundColor:e.globalState.isDarkMode?"#00000099":"#ffffffaa"}},[t("img",{staticClass:"icon-blue-ramp",attrs:{src:e.icons.blueramp}}),t("b-slider",{staticClass:"pie-slider",attrs:{type:"is-success",tooltip:!0,size:"is-small",min:0,max:100},model:{value:e.sliderOpacity,callback:function(i){e.sliderOpacity=i},expression:"sliderOpacity"}})],1):e._e(),e.isLoaded&&!e.thumbnail&&!e.vizDetails.mapIsIndependent?t("zoom-buttons"):e._e(),!e.thumbnail&&!e.isEmbedded&&e.isLoaded&&Object.keys(e.filters).length?t("div",{staticClass:"config-bar",class:{"is-standalone":!e.configFromDashboard,"is-disabled":!e.isLoaded}}):e._e(),e._l(Object.keys(e.filters),function(i){return t("div",{staticClass:"filter"},[t("p",[e._v(e._s(i))]),t("b-dropdown",{attrs:{scrollable:e.filters[i].active.length>10,"max-height":"250",multiple:"","aria-role":"list","mobile-modal":!1,"close-on-click":!0},on:{change:function(s){return e.handleUserSelectedNewFilters(i)}},scopedSlots:e._u([{key:"trigger",fn:function({active:s}){return[t("b-button",{staticClass:"is-primary",attrs:{type:e.filters[i].active.length?"":"is-outlined",label:e.filterLabel(i)}})]}}],null,!0),model:{value:e.filters[i].active,callback:function(s){e.$set(e.filters[i],"active",s)},expression:"filters[filter].active"}},e._l(e.filters[i].options,function(s){return t("b-dropdown-item",{key:s,attrs:{value:s,"aria-role":"listitem"}},[e._v(e._s(s))])}),1)],1)})],2)])],1)},n=[],d=l(a,r,n,!1,null,"e7733128");const ee=d.exports;export{ee as default,se as loadGeoPackageFromBuffer};
