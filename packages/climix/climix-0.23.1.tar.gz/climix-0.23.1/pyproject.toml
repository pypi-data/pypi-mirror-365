[build-system]
requires = ["setuptools>=77", "wheel", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "climix"
authors = [
    {name = "Lars Bärring", email = "lars.barring@smhi.se"},
    {name = "Klaus Zimmermann", email = "klaus.zimmermann@smhi.se"},
    {name = "Joakim Löw", email = "joakim.low@smhi.se"},
    {name = "Carolina Nilsson", email = "carolina.nilsson@smhi.se"},
]
license = "Apache-2.0"
license-files = ["LICENSE"]
description = "A climate index package"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: GIS",
]
requires-python = ">=3.10"
dependencies = [
    "cftime",
    "cf-units",
    "dask>=2023.1.0",
    "distributed>=2023.1.0",
    "gordias",
    "numba",
    "numpy<2",
    "pyxdg",
    "PyYAML",
    "regex",
    "scitools-iris>=3,<4",
    "sparse",
]
dynamic = ["version"]
readme = "README.md"

[project.urls]
Homepage = "https://git.smhi.se/climix/climix"
"Bug Reports" = "https://git.smhi.se/climix/climix/issues"
Source = "https://git.smhi.se/climix/climix"

[project.scripts]
climix = "climix.main:main"
climix-index-docs = "climix.index_docs:main"

[project.entry-points."climix.index_functions"]
count_level_crossings = "climix.index_functions:CountLevelCrossings"
count_occurrences = "climix.index_functions:CountOccurrences"
count_percentile_occurrences = "climix.index_functions:CountPercentileOccurrences"
count_thresholded_percentile_occurrences = "climix.index_functions:CountThresholdedPercentileOccurrences"
count_joint_occurrences_precipitation_temperature = "climix.index_functions:CountJointOccurrencesPrecipitationTemperature"
count_joint_occurrences_precipitation_double_temperature = "climix.index_functions:CountJointOccurrencesPrecipitationDoubleTemperature"
count_joint_occurrences_temperature = "climix.index_functions:CountJointOccurrencesTemperature"
diurnal_temperature_range = "climix.index_functions:DiurnalTemperatureRange"
extreme_temperature_range = "climix.index_functions:ExtremeTemperatureRange"
first_occurrence = "climix.index_functions:FirstOccurrence"
first_spell = "climix.index_functions:FirstSpell"
interday_diurnal_temperature_range = "climix.index_functions:InterdayDiurnalTemperatureRange"
last_occurrence = "climix.index_functions:LastOccurrence"
percentile = "climix.index_functions:Percentile"
running_statistics = "climix.index_functions:RunningStatistics"
season_end = "climix.index_functions:SeasonEnd"
season_length = "climix.index_functions:SeasonLength"
season_start = "climix.index_functions:SeasonStart"
start_of_spring = "climix.index_functions:StartOfSpring"
start_of_summer = "climix.index_functions:StartOfSummer"
start_of_winter = "climix.index_functions:StartOfWinter"
spell_length = "climix.index_functions:SpellLength"
statistics = "climix.index_functions:Statistics"
temperature_sum = "climix.index_functions:TemperatureSum"
thresholded_percentile = "climix.index_functions:ThresholdedPercentile"
thresholded_running_statistics = "climix.index_functions:ThresholdedRunningStatistics"
thresholded_statistics = "climix.index_functions:ThresholdedStatistics"

[tool.setuptools_scm]
version_scheme = "release-branch-semver"

[tool.setuptools.packages.find]
include = ["climix*"]

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]
testpaths = "tests"
