Metadata-Version: 2.3
Name: repo-radar
Version: 0.1.1
Summary: GitHub Pull Request audit toolkit with LLM and CLI support
Author: Karthick Shanmuga Rao
Author-email: Karthick Shanmuga Rao <karthikssfeb@gmail.com>
Requires-Dist: pygithub>=2.1.1
Requires-Dist: pydantic>=2.0
Requires-Dist: fastapi>=0.103.0
Requires-Dist: uvicorn>=0.23.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: tqdm>=4.67.1
Requires-Dist: openai>=1.97.1
Requires-Python: >=3.9
Description-Content-Type: text/markdown

# RepoRadar 🛰️

**RepoRadar** is a GitHub Pull Request audit and analytics toolkit built with Python.

It can be run in two modes:
- ✅ **Standalone** CLI-based audit with simple config input.
- 🤖 **LLM-integrated** server (via MCP protocol) for natural language-driven code review analytics.

---

## 🔧 Features

- 📊 Pull request insights by team, author, or date range
- ✅ Track test failures, large PRs, non-main merges
- 🧠 LLM integration (e.g., GPT-4o / o3-mini) via MCP (Model Context Protocol)
- 📁 Output as JSON or Markdown
- 🔌 GitHub API (via `PyGithub`)
- ⚙️ Designed for CI, cron, or local use

---

## 📦 Steps to Install and Use the toolkit
1. Install using the below command
    ```bash
    pip install repo-radar
    ```
2. Copy and use the example json to include required configurations.
config.example.json at repo_radar/examples
3. Run the following CLI by passing the config.json path
    ```bash
    repo-radar-config-audit --config path/to/config.json
    ```
4. To automatically pick and run the query using LLM
   1. Add the OpenAI API token to .env file, and use the below command
   2. Run the following CLI by passing the config.json path and the prompt
    ```bash
    repo-radar-llm-audit --config path/to/config.json --prompt "Which were stale PRs last week"
    ```

### ⬇️ To Contribute: Clone the repository and install the dependencies as follows:

```bash
git clone https://github.com/karthickshanmugarao/repo-radar.git
cd repo-radar
pip install uv
uv pip install .
