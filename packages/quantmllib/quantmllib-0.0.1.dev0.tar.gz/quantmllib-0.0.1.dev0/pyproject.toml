[project]
name = "quantmllib"
version = "0.0.1dev0"
description = "Quant ML Lib helps portfolio managers and traders who want to leverage the power of machine learning by providing reproducible, interpretable, and easy to use tools."
readme = "README.md"
authors = [
    { name = "D. Danchev", email = "12420863+danchev@users.noreply.github.com" },
]
requires-python = ">=3.11"
dependencies = [
    "numpy>=2.1.3",
    "matplotlib>=3.10.3",
    "pandas>=2.3.0",
    "scikit-learn>=1.7.0",
    "scipy>=1.15.3",
    "statsmodels>=0.14.5",
    "cython>=3.1.2",
    "POT>=0.9.5",
    "numba>=0.61.2",
    "networkx>=3.3.1",
    "dash>=3.1.1",
    "dash-cytoscape>=1.0.2",
    "dash-bootstrap-components>=2.0.3",
    "tensorflow>=2.19.0",
    "joblib>=1.5.1",
    "decorator>=4.4.2",
    "analytics-python>=1.4.post1",
    "getmac>=0.9.5",
    "cvxpy>=1.6.5",
    "tf-keras>=2.19.0",
]
license = { text = "AGPL-3.0-or-later" }
classifiers = [
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Office/Business :: Financial :: Investment",
]
keywords = ["machinelearning", "finance", "investment", "education"]

[project.optional-dependencies]
gpu = [
    "cupy-cuda12x>=13.4.1",
    # "cudf-cu12==25.6.*",
]

[project.urls]
"Documentation" = "https://danchev.github.io/quantmllib/"
"Bug Reports" = "https://github.com/danchev/quantmllib/issues"
"Project Boards" = "https://github.com/danchev/projects"
"Source" = "https://github.com/danchev/quantmllib"

[build-system]
requires = ["uv-build>=0.7.19,<0.8.0"]
build-backend = "uv_build"

[tool.hatch.build.targets.wheel]
packages = ["src/quantmllib"]

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[[tool.uv.index]]
name = "nvidia"
url = "https://pypi.nvidia.com"

[tool.uv.sources]
microsoft-python-type-stubs = { git = "https://github.com/microsoft/python-type-stubs.git" }

[dependency-groups]
test = [
    "coverage[toml]>=7.9.1",
    "pytest>=8.4.1",
    "pytest-asyncio>= 1.0.0",
    "pytest-cov>=6.2.1",
    "pytest-randomly>=3.16.0",
    "pytest-xdist>=3.7.0",
]
typing = [
    "pyright>=1.1.402",
    "ty>=0.0.1a11",
    "microsoft-python-type-stubs",
    "types-tensorflow>=2.18.0",
]
docs = [
    "ipython>=9.3.0",
    "nbsphinx>=0.9.7",
    "sphinx>=8.1.1",
    "sphinx_rtd_theme",
    "sphinx_changelog>=0.3.0",
    "sphinx-design>=0.6.1",
    "sphinxcontrib-bibtex>=2.6.3",
]
commit = [
    "commitizen>=4.8.3",
    "pre-commit>=4.2.0",
]
benchmark = [
    "pytest-benchmark>=5.1.0",
    "pytest-memray>=1.7.0",
]
notebooks = [
    "jupyter>=1.1.1",
    "nbconvert>=6.0.0",
    "nbformat>=5.0.0",
    "seaborn>=0.13.2",
]
dev = [
    "refurb>=2.1.0",
    "ruff>=0.12.0",
    {include-group = "test"},
    {include-group = "typing"},
    {include-group = "commit"},
]

[tool.scikit-build]
cmake.verbose = true
logging.level = "INFO"

[tool.ruff]
fix = true
show-fixes = true
output-format = "full"
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "Q"]
ignore = ["E203", "E501"]

[tool.ruff.lint.isort]
known-first-party = ["quantmllib"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
addopts = "-n auto --cov=src/quantmllib --cov-report=html --junitxml=junit/test-results.xml --cov-report xml:coverage.xml --cov-report=term-missing --cov-fail-under=70"
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
filterwarnings = ["once::Warning"]
maxfail = 10

[tool.coverage.run]
command_line = "-m pytest --config-file=pyproject.toml"
branch = true
parallel = true
source = [
  "quantmllib",
  "tests",
]
omit = [
    "noxfile.py"
]

[tool.coverage.paths]
source = [
  "src",
  "**/site-packages",
]

[tool.coverage.report]
show_missing = true

[tool.commitizen]
name = "cz_conventional_commits"
version_provider = "pep621"
tag_format = "$version"
version_files = ["pyproject.toml:version", "docs/source/conf.py:release"]
update_changelog_on_bump = true
