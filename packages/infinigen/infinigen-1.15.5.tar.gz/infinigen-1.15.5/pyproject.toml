[build-system]
requires = ["setuptools", "numpy", "Cython"]
build-backend = "setuptools.build_meta"

[project]
name = "infinigen"
readme = "README.md"
license = {text = "BSD-3-Clause"}
dynamic = ["version"]

description = "Infinite Photorealistic Worlds using Procedural Generation"
keywords = [
    "computer vision",
    "data generation",
    "procedural"
]
classifiers = [
    "Programming Language :: Python :: 3",
]

requires-python = "==3.11.*"
dependencies = [

    # NOTE: many less-than dependencies could likely be loosened
    #   we attempted to restrict to only versions that are known to be working

    "bpy==4.2.0",
    "coacd",
    "gin_config>=0.5.0",
    "imageio<2.32.0",      # e.g. 2.31.1
    "matplotlib",
    "networkx",
    "numpy<2",
    "opencv-python<4.9.0", # e.g. 4.8.0.74
    "pandas",
    "psutil",
    "scikit-image<0.20.0", # e.g 0.19.3
    "scikit-learn<1.4.0",  # e.g 1.3.0
    "scipy",
    "shapely<=2.0.5",
    "tqdm",
    "trimesh<3.23.0",
    "OpenEXR",

    "submitit", # can be removed so long as you dont use slurm.gin or --slurm args

    "geomdl", # can be removed so long as you do not generate any creatures

    # used by trimesh, we could specify "trimesh[easy]" but this brings more packages
    "python-fcl",
    "rtree",
]

[project.optional-dependencies]
terrain = [
    "landlab==2.6.0",
    "pyrender<0.2.0",
    # landlab depends on `setuptools` but doesn't explicitly list it as a
    # dependency; We include it to avoid problems with newer Python versions.
    "setuptools"
]
vis = [
    "einops",
    "flow_vis",
    "numba", # for ground truth visuals
    "pyglet<2" # for trimesh_scene.show()
]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "pytest-timeout",
    "pytype",
    "ruff",
    "isort",
    "tabulate",
    "rapidfuzz",
    "pre-commit"
]

wandb = [
    "wandb"
]

[tool.setuptools]
# include-package-data is terribly named. package-data is still included if false,
# just not the package-data setuptools would otherwise autogenerate from MANIFEST.in or version control
include-package-data = false
license-files = []

[tool.setuptools.packages.find]
include = ["infinigen*"]

# must be specified as module paths with ., using classic filepaths with / will silently not do anything
exclude = [
    "infinigen.datagen.customgt.dependencies*",
    "infinigen.datagen.customgt.build*",
]

[tool.setuptools.package-data]

"*" = ["*.gin", "*.txt", "*.json"]

# Must be specified as paths relative to infinigen/
"infinigen" = [
    "terrain/**/*.soil", # extra files for SoilMachine
    "terrain/lib/**/*.so", # created by terrain compilation
    "terrain/lib/**/*.o", # created by terrain compilation
    "datagen/customgt/build/customgt", # created during opengl compilation
    "assets/objects/creatures/parts/nurbs_data/*.npy", # stores creature nurbs centroids data, ideally will be deprecated
]

[tool.setuptools.dynamic]
version = {attr = "infinigen.__version__"}

[tool.pytest.ini_options]
testpaths = "tests"
junit_family = "xunit2"
markers = ["nature", "indoors", "skip_for_ci"]
timeout = 480

filterwarnings = [

    "ignore:The value of the smallest subnormal for <class 'numpy.float:UserWarning",

    # ignore warnings from landlab, not our problem
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
    "ignore:Importing from numpy.matlib is deprecated since 1.19.0:PendingDeprecationWarning",
    "ignore:Please import `label` from the `scipy.ndimage` namespace; the `scipy.ndimage.measurements` namespace is deprecated and will be removed in SciPy 2.0.0:DeprecationWarning"

]

[tool.cibuildwheel]
test-extras = ["dev"]
test-command = "pytest tests"

[tool.ruff]
target-version = "py310"

exclude = [

    "*.ipynb",

    # exclude known submodules
    "infinigen/datagen/customgt/dependencies/",
    "infinigen/OcMesher",
    "infinigen/infinigen_gpl",

    # exclude copied-in external code
    "infinigen/terrain/mesh_to_sdf",
    "infinigen/terrain/mesher/_marching_cubes_lewiner*"
]

[tool.ruff.lint]

select = [
    "E",
    "I",
    "F",
    "S102", # no exec(),
    "TID252", # relative imports only allowed for siblings

]
ignore = [
    "E501", # over-length lines, formatter should handle it
    "E741", # ambigous variable name
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = [
    "F401",
    "CPY001", # runs during PRs, but no need for copyright on boilerplate/often-empty __init__.py
]
"infinigen/assets/*" = ["F841"] #transpiler currently creates lots of unused variables

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.pytype]
inputs = ['infinigen', 'infinigen_examples']
