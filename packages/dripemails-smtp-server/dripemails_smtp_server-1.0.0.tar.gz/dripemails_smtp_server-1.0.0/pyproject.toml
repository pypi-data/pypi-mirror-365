[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dripemails-smtp-server"
version = "1.0.0"
description = "A modern, async SMTP server built with aiosmtpd for Python 3.11+"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "DripEmails Team", email = "founders@dripemails.org"}
]
maintainers = [
    {name = "DripEmails Team", email = "founders@dripemails.org"}
]
keywords = ["smtp", "email", "server", "aiosmtpd", "async", "python"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Email :: Mail Transport Agents",
    "Topic :: Internet :: Name Service (DNS)",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking :: Monitoring",
]
requires-python = ">=3.11"
dependencies = [
    "aiosmtpd>=1.4.4",
    "atpublic>=2.3",
    "attrs>=21.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "coverage>=7.0.0",
]
django = [
    "django>=4.0.0",
]
webhook = [
    "aiohttp>=3.8.0",
]

[project.urls]
Homepage = "https://github.com/dripemails/dripemails-smtp"
Documentation = "https://github.com/dripemails/dripemails-smtp/blob/main/README.md"
Repository = "https://github.com/dripemails/dripemails-smtp"
"Bug Tracker" = "https://github.com/dripemails/dripemails-smtp/issues"
"Discussions" = "https://github.com/dripemails/dripemails-smtp/discussions"

[project.scripts]
dripemails-smtp = "core.smtp_server:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["core*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["core"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 