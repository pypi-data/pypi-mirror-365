# Generated by ariadne-codegen
# Source: ./src/binaryai/query.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class License(BaseModel):
    file: Optional["LicenseFile"]


class LicenseFile(BaseModel):
    scainfo: Optional[List["LicenseFileScainfo"]]


class LicenseFileScainfo(BaseModel):
    licenselist: Optional[List["LicenseFileScainfoLicenselist"]]


class LicenseFileScainfoLicenselist(BaseModel):
    checkreason: Optional[str]
    content: str
    extra: Optional[str]
    full_name: str = Field(alias="fullName")
    pass_: Optional[bool] = Field(alias="pass")
    risk: Optional[str]
    short_name: str = Field(alias="shortName")
    source: str
    url: str
    tags: Optional["LicenseFileScainfoLicenselistTags"]


class LicenseFileScainfoLicenselistTags(BaseModel):
    permission: Optional[List["LicenseFileScainfoLicenselistTagsPermission"]]
    condition: Optional[List["LicenseFileScainfoLicenselistTagsCondition"]]
    forbidden: Optional[List["LicenseFileScainfoLicenselistTagsForbidden"]]


class LicenseFileScainfoLicenselistTagsPermission(BaseModel):
    tag_name: str = Field(alias="tagName")
    description: str


class LicenseFileScainfoLicenselistTagsCondition(BaseModel):
    tag_name: str = Field(alias="tagName")
    description: str


class LicenseFileScainfoLicenselistTagsForbidden(BaseModel):
    tag_name: str = Field(alias="tagName")
    description: str


License.model_rebuild()
LicenseFile.model_rebuild()
LicenseFileScainfo.model_rebuild()
LicenseFileScainfoLicenselist.model_rebuild()
LicenseFileScainfoLicenselistTags.model_rebuild()
