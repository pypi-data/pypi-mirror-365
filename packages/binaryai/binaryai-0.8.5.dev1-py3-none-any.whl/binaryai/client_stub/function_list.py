# Generated by ariadne-codegen
# Source: ./src/binaryai/query.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class FunctionList(BaseModel):
    file: Optional["FunctionListFile"]


class FunctionListFile(BaseModel):
    decompile_result: Optional["FunctionListFileDecompileResult"] = Field(
        alias="decompileResult"
    )


class FunctionListFileDecompileResult(BaseModel):
    functions: Optional[List["FunctionListFileDecompileResultFunctions"]]


class FunctionListFileDecompileResultFunctions(BaseModel):
    offset: Any


FunctionList.model_rebuild()
FunctionListFile.model_rebuild()
FunctionListFileDecompileResult.model_rebuild()
