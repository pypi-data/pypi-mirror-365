# Generated by ariadne-codegen
# Source: ./src/binaryai/query.graphql

from typing import Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import Status


class FileMalwareProbability(BaseModel):
    file: Optional["FileMalwareProbabilityFile"]


class FileMalwareProbabilityFile(BaseModel):
    decompile_result: Optional["FileMalwareProbabilityFileDecompileResult"] = Field(
        alias="decompileResult"
    )
    analyze_status: Optional["FileMalwareProbabilityFileAnalyzeStatus"] = Field(
        alias="analyzeStatus"
    )


class FileMalwareProbabilityFileDecompileResult(BaseModel):
    malware_probability: Optional[float] = Field(alias="malwareProbability")


class FileMalwareProbabilityFileAnalyzeStatus(BaseModel):
    status: Status


FileMalwareProbability.model_rebuild()
FileMalwareProbabilityFile.model_rebuild()
