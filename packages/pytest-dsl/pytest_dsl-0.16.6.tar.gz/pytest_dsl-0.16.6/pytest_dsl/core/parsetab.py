
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMMAleftGTLTGELEEQNEleftPLUSMINUSleftTIMESDIVIDEMODULOrightEQUALSAS AUTHOR_KEYWORD BREAK COLON COMMA CONTINUE DATA_KEYWORD DATE DATE_KEYWORD DESCRIPTION_KEYWORD DIVIDE DO ELIF ELSE END EQ EQUALS FALSE FOR FUNCTION GE GT ID IF IMPORT_KEYWORD IN LBRACE LBRACKET LE LPAREN LT MINUS MODULO NAME_KEYWORD NE NUMBER PIPE PLACEHOLDER PLUS RANGE RBRACE RBRACKET REMOTE_KEYWORD RETURN RPAREN STRING TAGS_KEYWORD TEARDOWN TIMES TRUE USINGstart : metadata statements teardown\n             | metadata statements\n             | statements teardown\n             | statementsmetadata : metadata_items\n                | emptyempty :metadata_items : metadata_item metadata_items\n                     | metadata_itemmetadata_item : NAME_KEYWORD COLON metadata_value\n                    | DESCRIPTION_KEYWORD COLON metadata_value\n                    | TAGS_KEYWORD COLON LBRACKET tags RBRACKET\n                    | AUTHOR_KEYWORD COLON metadata_value\n                    | DATE_KEYWORD COLON DATE\n                    | DATE_KEYWORD COLON STRING\n                    | DATA_KEYWORD COLON data_source\n                    | IMPORT_KEYWORD COLON STRING\n                    | REMOTE_KEYWORD COLON STRING AS IDmetadata_value : STRING\n                     | IDtags : tag COMMA tags\n            | tagtag : STRING\n           | IDstatements : statement statements\n                  | statementstatement : assignment\n                | keyword_call\n                | remote_keyword_call\n                | loop\n                | custom_keyword\n                | return_statement\n                | if_statement\n                | break_statement\n                | continue_statementassignment : ID EQUALS expression\n                 | ID EQUALS keyword_call\n                 | ID EQUALS remote_keyword_callexpression : expr_atom\n                  | comparison_expr\n                  | arithmetic_exprexpr_atom : NUMBER\n                 | STRING\n                 | PLACEHOLDER\n                 | ID\n                 | boolean_expr\n                 | list_expr\n                 | dict_expr\n                 | LPAREN expression RPARENboolean_expr : TRUE\n                    | FALSElist_expr : LBRACKET list_items RBRACKET\n                 | LBRACKET RBRACKETlist_items : list_item\n                  | list_item COMMA list_itemslist_item : expressiondict_expr : LBRACE dict_items RBRACE\n                 | LBRACE RBRACEdict_items : dict_item\n                  | dict_item COMMA dict_itemsdict_item : expression COLON expressionloop : FOR ID IN RANGE LPAREN expression COMMA expression RPAREN DO statements END\n            | FOR ID IN expression DO statements END\n            | FOR ID COMMA ID IN expression DO statements ENDkeyword_call : LBRACKET ID RBRACKET COMMA parameter_list\n                   | LBRACKET ID RBRACKETparameter_list : parameter_itemsparameter_items : parameter_item COMMA parameter_items\n                     | parameter_itemparameter_item : ID COLON expressionteardown : TEARDOWN DO statements ENDdata_source : STRING USING IDcustom_keyword : FUNCTION ID LPAREN param_definitions RPAREN DO statements ENDparam_definitions : param_def_list\n                        | param_def_list : param_def COMMA param_def_list\n                     | param_defparam_def : ID EQUALS STRING\n                | ID EQUALS NUMBER\n                | IDreturn_statement : RETURN expressionbreak_statement : BREAKcontinue_statement : CONTINUEif_statement : IF expression DO statements END\n                   | IF expression DO statements elif_clauses END\n                   | IF expression DO statements ELSE statements END\n                   | IF expression DO statements elif_clauses ELSE statements ENDelif_clauses : elif_clause\n                    | elif_clause elif_clauseselif_clause : ELIF expression DO statementscomparison_expr : expr_atom GT expr_atom\n                      | expr_atom LT expr_atom\n                      | expr_atom GE expr_atom\n                      | expr_atom LE expr_atom\n                      | expr_atom EQ expr_atom\n                      | expr_atom NE expr_atomarithmetic_expr : expression PLUS expression\n                       | expression MINUS expression\n                       | expression TIMES expression\n                       | expression DIVIDE expression\n                       | expression MODULO expressionremote_keyword_call : ID PIPE LBRACKET ID RBRACKET COMMA parameter_list\n                          | ID PIPE LBRACKET ID RBRACKET'
    
_lr_action_items = {'ID':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,20,27,28,29,30,31,32,37,38,39,42,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,109,112,118,119,120,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,150,152,153,154,155,156,157,158,159,160,163,167,169,171,173,174,175,181,183,184,188,189,190,191,192,193,196,197,200,201,204,205,207,],[26,26,-5,-6,26,-9,-27,-28,-29,-30,-31,-32,-33,-34,-35,41,49,50,58,58,-82,-83,-8,72,72,72,83,-81,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,58,-50,-51,58,58,26,-10,-19,-20,-11,117,-66,-13,-14,-15,-16,-17,-45,-36,-37,-38,121,122,58,125,126,58,58,58,58,58,58,58,58,58,58,58,-53,-58,26,151,155,156,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,58,-57,58,58,-12,117,-65,-67,-69,-72,-18,-103,58,26,58,126,-84,26,58,58,151,151,26,-85,26,-70,-68,-102,58,-63,26,-86,26,-73,-87,-64,26,-62,]),'LBRACKET':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,29,30,31,32,37,40,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,75,76,77,78,79,81,83,84,85,86,87,89,92,93,94,95,96,97,98,99,100,101,102,105,109,112,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,152,153,154,155,156,157,158,159,160,167,169,171,173,181,183,184,188,189,190,191,192,193,196,197,200,201,204,205,207,],[20,20,-5,-6,20,-9,-27,-28,-29,-30,-31,-32,-33,-34,-35,65,65,-82,-83,-8,74,87,88,-81,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,65,-50,-51,65,65,20,-10,-19,-20,-11,-66,-13,-14,-15,-16,-17,-45,-36,-37,-38,65,65,65,65,65,65,65,65,65,65,65,65,65,-53,-58,20,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,65,-57,65,65,-12,-65,-67,-69,-72,-18,-103,65,20,65,-84,20,65,65,20,-85,20,-70,-68,-102,65,-63,20,-86,20,-73,-87,-64,20,-62,]),'FOR':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,31,32,37,51,52,53,54,55,56,57,58,59,60,61,63,64,69,70,71,72,73,75,76,77,78,79,81,83,84,85,86,105,109,112,130,131,132,133,134,135,136,137,138,139,140,141,142,144,149,152,153,154,155,156,157,159,167,169,181,183,184,188,189,190,192,193,196,197,200,201,204,205,207,],[27,27,-5,-6,27,-9,-27,-28,-29,-30,-31,-32,-33,-34,-35,-82,-83,-8,-81,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,27,-10,-19,-20,-11,-66,-13,-14,-15,-16,-17,-45,-36,-37,-38,-53,-58,27,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,-12,-65,-67,-69,-72,-18,-103,27,-84,27,27,-85,27,-70,-68,-102,-63,27,-86,27,-73,-87,-64,27,-62,]),'FUNCTION':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,31,32,37,51,52,53,54,55,56,57,58,59,60,61,63,64,69,70,71,72,73,75,76,77,78,79,81,83,84,85,86,105,109,112,130,131,132,133,134,135,136,137,138,139,140,141,142,144,149,152,153,154,155,156,157,159,167,169,181,183,184,188,189,190,192,193,196,197,200,201,204,205,207,],[28,28,-5,-6,28,-9,-27,-28,-29,-30,-31,-32,-33,-34,-35,-82,-83,-8,-81,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,28,-10,-19,-20,-11,-66,-13,-14,-15,-16,-17,-45,-36,-37,-38,-53,-58,28,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,-12,-65,-67,-69,-72,-18,-103,28,-84,28,28,-85,28,-70,-68,-102,-63,28,-86,28,-73,-87,-64,28,-62,]),'RETURN':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,31,32,37,51,52,53,54,55,56,57,58,59,60,61,63,64,69,70,71,72,73,75,76,77,78,79,81,83,84,85,86,105,109,112,130,131,132,133,134,135,136,137,138,139,140,141,142,144,149,152,153,154,155,156,157,159,167,169,181,183,184,188,189,190,192,193,196,197,200,201,204,205,207,],[29,29,-5,-6,29,-9,-27,-28,-29,-30,-31,-32,-33,-34,-35,-82,-83,-8,-81,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,29,-10,-19,-20,-11,-66,-13,-14,-15,-16,-17,-45,-36,-37,-38,-53,-58,29,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,-12,-65,-67,-69,-72,-18,-103,29,-84,29,29,-85,29,-70,-68,-102,-63,29,-86,29,-73,-87,-64,29,-62,]),'IF':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,31,32,37,51,52,53,54,55,56,57,58,59,60,61,63,64,69,70,71,72,73,75,76,77,78,79,81,83,84,85,86,105,109,112,130,131,132,133,134,135,136,137,138,139,140,141,142,144,149,152,153,154,155,156,157,159,167,169,181,183,184,188,189,190,192,193,196,197,200,201,204,205,207,],[30,30,-5,-6,30,-9,-27,-28,-29,-30,-31,-32,-33,-34,-35,-82,-83,-8,-81,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,30,-10,-19,-20,-11,-66,-13,-14,-15,-16,-17,-45,-36,-37,-38,-53,-58,30,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,-12,-65,-67,-69,-72,-18,-103,30,-84,30,30,-85,30,-70,-68,-102,-63,30,-86,30,-73,-87,-64,30,-62,]),'BREAK':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,31,32,37,51,52,53,54,55,56,57,58,59,60,61,63,64,69,70,71,72,73,75,76,77,78,79,81,83,84,85,86,105,109,112,130,131,132,133,134,135,136,137,138,139,140,141,142,144,149,152,153,154,155,156,157,159,167,169,181,183,184,188,189,190,192,193,196,197,200,201,204,205,207,],[31,31,-5,-6,31,-9,-27,-28,-29,-30,-31,-32,-33,-34,-35,-82,-83,-8,-81,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,31,-10,-19,-20,-11,-66,-13,-14,-15,-16,-17,-45,-36,-37,-38,-53,-58,31,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,-12,-65,-67,-69,-72,-18,-103,31,-84,31,31,-85,31,-70,-68,-102,-63,31,-86,31,-73,-87,-64,31,-62,]),'CONTINUE':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,31,32,37,51,52,53,54,55,56,57,58,59,60,61,63,64,69,70,71,72,73,75,76,77,78,79,81,83,84,85,86,105,109,112,130,131,132,133,134,135,136,137,138,139,140,141,142,144,149,152,153,154,155,156,157,159,167,169,181,183,184,188,189,190,192,193,196,197,200,201,204,205,207,],[32,32,-5,-6,32,-9,-27,-28,-29,-30,-31,-32,-33,-34,-35,-82,-83,-8,-81,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,32,-10,-19,-20,-11,-66,-13,-14,-15,-16,-17,-45,-36,-37,-38,-53,-58,32,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,-12,-65,-67,-69,-72,-18,-103,32,-84,32,32,-85,32,-70,-68,-102,-63,32,-86,32,-73,-87,-64,32,-62,]),'NAME_KEYWORD':([0,7,70,71,72,73,76,77,78,79,81,149,155,156,],[17,17,-10,-19,-20,-11,-13,-14,-15,-16,-17,-12,-72,-18,]),'DESCRIPTION_KEYWORD':([0,7,70,71,72,73,76,77,78,79,81,149,155,156,],[18,18,-10,-19,-20,-11,-13,-14,-15,-16,-17,-12,-72,-18,]),'TAGS_KEYWORD':([0,7,70,71,72,73,76,77,78,79,81,149,155,156,],[19,19,-10,-19,-20,-11,-13,-14,-15,-16,-17,-12,-72,-18,]),'AUTHOR_KEYWORD':([0,7,70,71,72,73,76,77,78,79,81,149,155,156,],[21,21,-10,-19,-20,-11,-13,-14,-15,-16,-17,-12,-72,-18,]),'DATE_KEYWORD':([0,7,70,71,72,73,76,77,78,79,81,149,155,156,],[22,22,-10,-19,-20,-11,-13,-14,-15,-16,-17,-12,-72,-18,]),'DATA_KEYWORD':([0,7,70,71,72,73,76,77,78,79,81,149,155,156,],[23,23,-10,-19,-20,-11,-13,-14,-15,-16,-17,-12,-72,-18,]),'IMPORT_KEYWORD':([0,7,70,71,72,73,76,77,78,79,81,149,155,156,],[24,24,-10,-19,-20,-11,-13,-14,-15,-16,-17,-12,-72,-18,]),'REMOTE_KEYWORD':([0,7,70,71,72,73,76,77,78,79,81,149,155,156,],[25,25,-10,-19,-20,-11,-13,-14,-15,-16,-17,-12,-72,-18,]),'$end':([1,3,6,8,9,10,11,12,13,14,15,16,31,32,33,34,36,51,52,53,54,55,56,57,58,59,60,61,63,64,68,75,83,84,85,86,105,109,130,131,132,133,134,135,136,137,138,139,140,141,142,144,148,152,153,154,157,167,183,188,189,190,192,196,200,201,204,207,],[0,-4,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-82,-83,-2,-3,-25,-81,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,-1,-66,-45,-36,-37,-38,-53,-58,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,-71,-65,-67,-69,-103,-84,-85,-70,-68,-102,-63,-86,-73,-87,-64,-62,]),'TEARDOWN':([3,6,8,9,10,11,12,13,14,15,16,31,32,33,36,51,52,53,54,55,56,57,58,59,60,61,63,64,75,83,84,85,86,105,109,130,131,132,133,134,135,136,137,138,139,140,141,142,144,152,153,154,157,167,183,188,189,190,192,196,200,201,204,207,],[35,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-82,-83,35,-25,-81,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,-66,-45,-36,-37,-38,-53,-58,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,-65,-67,-69,-103,-84,-85,-70,-68,-102,-63,-86,-73,-87,-64,-62,]),'END':([6,8,9,10,11,12,13,14,15,16,31,32,36,51,52,53,54,55,56,57,58,59,60,61,63,64,75,83,84,85,86,105,109,113,130,131,132,133,134,135,136,137,138,139,140,141,142,144,147,152,153,154,157,167,168,170,177,183,185,186,188,189,190,192,194,195,196,199,200,201,202,204,206,207,],[-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-82,-83,-25,-81,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,-66,-45,-36,-37,-38,-53,-58,148,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,167,-65,-67,-69,-103,-84,183,-88,192,-85,196,-89,-70,-68,-102,-63,200,201,-86,204,-73,-87,-90,-64,207,-62,]),'ELSE':([6,8,9,10,11,12,13,14,15,16,31,32,36,51,52,53,54,55,56,57,58,59,60,61,63,64,75,83,84,85,86,105,109,130,131,132,133,134,135,136,137,138,139,140,141,142,144,147,152,153,154,157,167,168,170,183,186,188,189,190,192,196,200,201,202,204,207,],[-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-82,-83,-25,-81,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,-66,-45,-36,-37,-38,-53,-58,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,169,-65,-67,-69,-103,-84,184,-88,-85,-89,-70,-68,-102,-63,-86,-73,-87,-90,-64,-62,]),'ELIF':([6,8,9,10,11,12,13,14,15,16,31,32,36,51,52,53,54,55,56,57,58,59,60,61,63,64,75,83,84,85,86,105,109,130,131,132,133,134,135,136,137,138,139,140,141,142,144,147,152,153,154,157,167,170,183,188,189,190,192,196,200,201,202,204,207,],[-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-82,-83,-25,-81,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,-66,-45,-36,-37,-38,-53,-58,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,171,-65,-67,-69,-103,-84,171,-85,-70,-68,-102,-63,-86,-73,-87,-90,-64,-62,]),'COLON':([17,18,19,21,22,23,24,25,52,53,54,55,56,57,58,59,60,61,63,64,105,109,111,130,131,132,133,134,135,136,137,138,139,140,141,142,144,151,],[38,39,40,42,43,44,45,46,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,-53,-58,146,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,173,]),'EQUALS':([26,126,],[47,161,]),'PIPE':([26,83,],[48,48,]),'NUMBER':([29,30,47,62,65,66,87,89,92,93,94,95,96,97,98,99,100,101,102,143,145,146,158,160,161,171,173,191,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,180,55,55,55,]),'STRING':([29,30,38,39,42,43,44,45,46,47,62,65,66,74,87,89,92,93,94,95,96,97,98,99,100,101,102,143,145,146,150,158,160,161,171,173,191,],[56,56,71,71,71,78,80,81,82,56,56,56,56,116,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,116,56,56,179,56,56,56,]),'PLACEHOLDER':([29,30,47,62,65,66,87,89,92,93,94,95,96,97,98,99,100,101,102,143,145,146,158,160,171,173,191,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'LPAREN':([29,30,47,50,62,65,66,87,89,92,93,94,95,96,97,98,99,100,101,102,123,143,145,146,158,160,171,173,191,],[62,62,62,91,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,158,62,62,62,62,62,62,62,62,]),'TRUE':([29,30,47,62,65,66,87,89,92,93,94,95,96,97,98,99,100,101,102,143,145,146,158,160,171,173,191,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'FALSE':([29,30,47,62,65,66,87,89,92,93,94,95,96,97,98,99,100,101,102,143,145,146,158,160,171,173,191,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'LBRACE':([29,30,47,62,65,66,87,89,92,93,94,95,96,97,98,99,100,101,102,143,145,146,158,160,171,173,191,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'DO':([35,52,53,54,55,56,57,58,59,60,61,63,64,67,105,109,124,130,131,132,133,134,135,136,137,138,139,140,141,142,144,162,178,187,203,],[69,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,112,-53,-58,159,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,181,193,197,205,]),'RBRACKET':([41,52,53,54,55,56,57,58,59,60,61,63,64,65,87,104,105,106,107,109,114,115,116,117,121,122,130,131,132,133,134,135,136,137,138,139,140,141,142,144,164,172,],[75,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,105,105,142,-53,-54,-56,-58,149,-22,-23,-24,75,157,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,-55,-21,]),'DATE':([43,],[77,]),'IN':([49,125,],[89,160,]),'COMMA':([49,52,53,54,55,56,57,58,59,60,61,63,64,75,105,106,107,109,110,115,116,117,121,126,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,154,157,166,176,179,180,188,],[90,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,118,-53,143,-56,-58,145,150,-23,-24,-45,-80,163,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,174,175,-61,191,-78,-79,-70,]),'PLUS':([51,52,53,54,55,56,57,58,59,60,61,63,64,67,83,84,103,105,107,109,111,121,124,130,131,132,133,134,135,136,137,138,139,140,141,142,144,166,176,178,187,188,198,],[92,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,92,-45,92,92,-53,92,-58,92,-45,92,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,92,92,92,92,92,92,]),'MINUS':([51,52,53,54,55,56,57,58,59,60,61,63,64,67,83,84,103,105,107,109,111,121,124,130,131,132,133,134,135,136,137,138,139,140,141,142,144,166,176,178,187,188,198,],[93,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,93,-45,93,93,-53,93,-58,93,-45,93,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,93,93,93,93,93,93,]),'TIMES':([51,52,53,54,55,56,57,58,59,60,61,63,64,67,83,84,103,105,107,109,111,121,124,130,131,132,133,134,135,136,137,138,139,140,141,142,144,166,176,178,187,188,198,],[94,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,94,-45,94,94,-53,94,-58,94,-45,94,94,94,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,94,94,94,94,94,94,]),'DIVIDE':([51,52,53,54,55,56,57,58,59,60,61,63,64,67,83,84,103,105,107,109,111,121,124,130,131,132,133,134,135,136,137,138,139,140,141,142,144,166,176,178,187,188,198,],[95,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,95,-45,95,95,-53,95,-58,95,-45,95,95,95,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,95,95,95,95,95,95,]),'MODULO':([51,52,53,54,55,56,57,58,59,60,61,63,64,67,83,84,103,105,107,109,111,121,124,130,131,132,133,134,135,136,137,138,139,140,141,142,144,166,176,178,187,188,198,],[96,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,96,-45,96,96,-53,96,-58,96,-45,96,96,96,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,96,96,96,96,96,96,]),'RPAREN':([52,53,54,55,56,57,58,59,60,61,63,64,91,103,105,109,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,179,180,182,198,],[-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,-75,141,-53,-58,-80,162,-74,-77,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,-78,-79,-76,203,]),'RBRACE':([52,53,54,55,56,57,58,59,60,61,63,64,66,105,108,109,110,130,131,132,133,134,135,136,137,138,139,140,141,142,144,165,166,],[-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-50,-51,109,-53,144,-58,-59,-97,-98,-99,-100,-101,-91,-92,-93,-94,-95,-96,-49,-52,-57,-60,-61,]),'GT':([52,55,56,57,58,59,60,61,63,64,83,105,109,121,141,142,144,],[97,-42,-43,-44,-45,-46,-47,-48,-50,-51,-45,-53,-58,-45,-49,-52,-57,]),'LT':([52,55,56,57,58,59,60,61,63,64,83,105,109,121,141,142,144,],[98,-42,-43,-44,-45,-46,-47,-48,-50,-51,-45,-53,-58,-45,-49,-52,-57,]),'GE':([52,55,56,57,58,59,60,61,63,64,83,105,109,121,141,142,144,],[99,-42,-43,-44,-45,-46,-47,-48,-50,-51,-45,-53,-58,-45,-49,-52,-57,]),'LE':([52,55,56,57,58,59,60,61,63,64,83,105,109,121,141,142,144,],[100,-42,-43,-44,-45,-46,-47,-48,-50,-51,-45,-53,-58,-45,-49,-52,-57,]),'EQ':([52,55,56,57,58,59,60,61,63,64,83,105,109,121,141,142,144,],[101,-42,-43,-44,-45,-46,-47,-48,-50,-51,-45,-53,-58,-45,-49,-52,-57,]),'NE':([52,55,56,57,58,59,60,61,63,64,83,105,109,121,141,142,144,],[102,-42,-43,-44,-45,-46,-47,-48,-50,-51,-45,-53,-58,-45,-49,-52,-57,]),'USING':([80,],[119,]),'AS':([82,],[120,]),'RANGE':([89,],[123,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'metadata':([0,],[2,]),'statements':([0,2,6,69,112,159,169,181,184,193,197,205,],[3,33,36,113,147,177,185,194,195,199,202,206,]),'metadata_items':([0,7,],[4,37,]),'empty':([0,],[5,]),'statement':([0,2,6,69,112,159,169,181,184,193,197,205,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'metadata_item':([0,7,],[7,7,]),'assignment':([0,2,6,69,112,159,169,181,184,193,197,205,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'keyword_call':([0,2,6,47,69,112,159,169,181,184,193,197,205,],[9,9,9,85,9,9,9,9,9,9,9,9,9,]),'remote_keyword_call':([0,2,6,47,69,112,159,169,181,184,193,197,205,],[10,10,10,86,10,10,10,10,10,10,10,10,10,]),'loop':([0,2,6,69,112,159,169,181,184,193,197,205,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'custom_keyword':([0,2,6,69,112,159,169,181,184,193,197,205,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'return_statement':([0,2,6,69,112,159,169,181,184,193,197,205,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'if_statement':([0,2,6,69,112,159,169,181,184,193,197,205,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'break_statement':([0,2,6,69,112,159,169,181,184,193,197,205,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'continue_statement':([0,2,6,69,112,159,169,181,184,193,197,205,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'teardown':([3,33,],[34,68,]),'expression':([29,30,47,62,65,66,87,89,92,93,94,95,96,143,145,146,158,160,171,173,191,],[51,67,84,103,107,111,107,124,130,131,132,133,134,107,111,166,176,178,187,188,198,]),'expr_atom':([29,30,47,62,65,66,87,89,92,93,94,95,96,97,98,99,100,101,102,143,145,146,158,160,171,173,191,],[52,52,52,52,52,52,52,52,52,52,52,52,52,135,136,137,138,139,140,52,52,52,52,52,52,52,52,]),'comparison_expr':([29,30,47,62,65,66,87,89,92,93,94,95,96,143,145,146,158,160,171,173,191,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'arithmetic_expr':([29,30,47,62,65,66,87,89,92,93,94,95,96,143,145,146,158,160,171,173,191,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'boolean_expr':([29,30,47,62,65,66,87,89,92,93,94,95,96,97,98,99,100,101,102,143,145,146,158,160,171,173,191,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'list_expr':([29,30,47,62,65,66,87,89,92,93,94,95,96,97,98,99,100,101,102,143,145,146,158,160,171,173,191,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'dict_expr':([29,30,47,62,65,66,87,89,92,93,94,95,96,97,98,99,100,101,102,143,145,146,158,160,171,173,191,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'metadata_value':([38,39,42,],[70,73,76,]),'data_source':([44,],[79,]),'list_items':([65,87,143,],[104,104,164,]),'list_item':([65,87,143,],[106,106,106,]),'dict_items':([66,145,],[108,165,]),'dict_item':([66,145,],[110,110,]),'tags':([74,150,],[114,172,]),'tag':([74,150,],[115,115,]),'param_definitions':([91,],[127,]),'param_def_list':([91,163,],[128,182,]),'param_def':([91,163,],[129,129,]),'parameter_list':([118,175,],[152,190,]),'parameter_items':([118,174,175,],[153,189,153,]),'parameter_item':([118,174,175,],[154,154,154,]),'elif_clauses':([147,170,],[168,186,]),'elif_clause':([147,170,],[170,170,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> metadata statements teardown','start',3,'p_start','parser.py',41),
  ('start -> metadata statements','start',2,'p_start','parser.py',42),
  ('start -> statements teardown','start',2,'p_start','parser.py',43),
  ('start -> statements','start',1,'p_start','parser.py',44),
  ('metadata -> metadata_items','metadata',1,'p_metadata','parser.py',66),
  ('metadata -> empty','metadata',1,'p_metadata','parser.py',67),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',75),
  ('metadata_items -> metadata_item metadata_items','metadata_items',2,'p_metadata_items','parser.py',80),
  ('metadata_items -> metadata_item','metadata_items',1,'p_metadata_items','parser.py',81),
  ('metadata_item -> NAME_KEYWORD COLON metadata_value','metadata_item',3,'p_metadata_item','parser.py',89),
  ('metadata_item -> DESCRIPTION_KEYWORD COLON metadata_value','metadata_item',3,'p_metadata_item','parser.py',90),
  ('metadata_item -> TAGS_KEYWORD COLON LBRACKET tags RBRACKET','metadata_item',5,'p_metadata_item','parser.py',91),
  ('metadata_item -> AUTHOR_KEYWORD COLON metadata_value','metadata_item',3,'p_metadata_item','parser.py',92),
  ('metadata_item -> DATE_KEYWORD COLON DATE','metadata_item',3,'p_metadata_item','parser.py',93),
  ('metadata_item -> DATE_KEYWORD COLON STRING','metadata_item',3,'p_metadata_item','parser.py',94),
  ('metadata_item -> DATA_KEYWORD COLON data_source','metadata_item',3,'p_metadata_item','parser.py',95),
  ('metadata_item -> IMPORT_KEYWORD COLON STRING','metadata_item',3,'p_metadata_item','parser.py',96),
  ('metadata_item -> REMOTE_KEYWORD COLON STRING AS ID','metadata_item',5,'p_metadata_item','parser.py',97),
  ('metadata_value -> STRING','metadata_value',1,'p_metadata_value','parser.py',116),
  ('metadata_value -> ID','metadata_value',1,'p_metadata_value','parser.py',117),
  ('tags -> tag COMMA tags','tags',3,'p_tags','parser.py',122),
  ('tags -> tag','tags',1,'p_tags','parser.py',123),
  ('tag -> STRING','tag',1,'p_tag','parser.py',131),
  ('tag -> ID','tag',1,'p_tag','parser.py',132),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',137),
  ('statements -> statement','statements',1,'p_statements','parser.py',138),
  ('statement -> assignment','statement',1,'p_statement','parser.py',146),
  ('statement -> keyword_call','statement',1,'p_statement','parser.py',147),
  ('statement -> remote_keyword_call','statement',1,'p_statement','parser.py',148),
  ('statement -> loop','statement',1,'p_statement','parser.py',149),
  ('statement -> custom_keyword','statement',1,'p_statement','parser.py',150),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',151),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',152),
  ('statement -> break_statement','statement',1,'p_statement','parser.py',153),
  ('statement -> continue_statement','statement',1,'p_statement','parser.py',154),
  ('assignment -> ID EQUALS expression','assignment',3,'p_assignment','parser.py',159),
  ('assignment -> ID EQUALS keyword_call','assignment',3,'p_assignment','parser.py',160),
  ('assignment -> ID EQUALS remote_keyword_call','assignment',3,'p_assignment','parser.py',161),
  ('expression -> expr_atom','expression',1,'p_expression','parser.py',176),
  ('expression -> comparison_expr','expression',1,'p_expression','parser.py',177),
  ('expression -> arithmetic_expr','expression',1,'p_expression','parser.py',178),
  ('expr_atom -> NUMBER','expr_atom',1,'p_expr_atom','parser.py',187),
  ('expr_atom -> STRING','expr_atom',1,'p_expr_atom','parser.py',188),
  ('expr_atom -> PLACEHOLDER','expr_atom',1,'p_expr_atom','parser.py',189),
  ('expr_atom -> ID','expr_atom',1,'p_expr_atom','parser.py',190),
  ('expr_atom -> boolean_expr','expr_atom',1,'p_expr_atom','parser.py',191),
  ('expr_atom -> list_expr','expr_atom',1,'p_expr_atom','parser.py',192),
  ('expr_atom -> dict_expr','expr_atom',1,'p_expr_atom','parser.py',193),
  ('expr_atom -> LPAREN expression RPAREN','expr_atom',3,'p_expr_atom','parser.py',194),
  ('boolean_expr -> TRUE','boolean_expr',1,'p_boolean_expr','parser.py',228),
  ('boolean_expr -> FALSE','boolean_expr',1,'p_boolean_expr','parser.py',229),
  ('list_expr -> LBRACKET list_items RBRACKET','list_expr',3,'p_list_expr','parser.py',234),
  ('list_expr -> LBRACKET RBRACKET','list_expr',2,'p_list_expr','parser.py',235),
  ('list_items -> list_item','list_items',1,'p_list_items','parser.py',243),
  ('list_items -> list_item COMMA list_items','list_items',3,'p_list_items','parser.py',244),
  ('list_item -> expression','list_item',1,'p_list_item','parser.py',252),
  ('dict_expr -> LBRACE dict_items RBRACE','dict_expr',3,'p_dict_expr','parser.py',257),
  ('dict_expr -> LBRACE RBRACE','dict_expr',2,'p_dict_expr','parser.py',258),
  ('dict_items -> dict_item','dict_items',1,'p_dict_items','parser.py',266),
  ('dict_items -> dict_item COMMA dict_items','dict_items',3,'p_dict_items','parser.py',267),
  ('dict_item -> expression COLON expression','dict_item',3,'p_dict_item','parser.py',275),
  ('loop -> FOR ID IN RANGE LPAREN expression COMMA expression RPAREN DO statements END','loop',12,'p_loop','parser.py',280),
  ('loop -> FOR ID IN expression DO statements END','loop',7,'p_loop','parser.py',281),
  ('loop -> FOR ID COMMA ID IN expression DO statements END','loop',9,'p_loop','parser.py',282),
  ('keyword_call -> LBRACKET ID RBRACKET COMMA parameter_list','keyword_call',5,'p_keyword_call','parser.py',297),
  ('keyword_call -> LBRACKET ID RBRACKET','keyword_call',3,'p_keyword_call','parser.py',298),
  ('parameter_list -> parameter_items','parameter_list',1,'p_parameter_list','parser.py',329),
  ('parameter_items -> parameter_item COMMA parameter_items','parameter_items',3,'p_parameter_items','parser.py',334),
  ('parameter_items -> parameter_item','parameter_items',1,'p_parameter_items','parser.py',335),
  ('parameter_item -> ID COLON expression','parameter_item',3,'p_parameter_item','parser.py',343),
  ('teardown -> TEARDOWN DO statements END','teardown',4,'p_teardown','parser.py',356),
  ('data_source -> STRING USING ID','data_source',3,'p_data_source','parser.py',361),
  ('custom_keyword -> FUNCTION ID LPAREN param_definitions RPAREN DO statements END','custom_keyword',8,'p_custom_keyword','parser.py',366),
  ('param_definitions -> param_def_list','param_definitions',1,'p_param_definitions','parser.py',371),
  ('param_definitions -> <empty>','param_definitions',0,'p_param_definitions','parser.py',372),
  ('param_def_list -> param_def COMMA param_def_list','param_def_list',3,'p_param_def_list','parser.py',380),
  ('param_def_list -> param_def','param_def_list',1,'p_param_def_list','parser.py',381),
  ('param_def -> ID EQUALS STRING','param_def',3,'p_param_def','parser.py',389),
  ('param_def -> ID EQUALS NUMBER','param_def',3,'p_param_def','parser.py',390),
  ('param_def -> ID','param_def',1,'p_param_def','parser.py',391),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',399),
  ('break_statement -> BREAK','break_statement',1,'p_break_statement','parser.py',404),
  ('continue_statement -> CONTINUE','continue_statement',1,'p_continue_statement','parser.py',409),
  ('if_statement -> IF expression DO statements END','if_statement',5,'p_if_statement','parser.py',414),
  ('if_statement -> IF expression DO statements elif_clauses END','if_statement',6,'p_if_statement','parser.py',415),
  ('if_statement -> IF expression DO statements ELSE statements END','if_statement',7,'p_if_statement','parser.py',416),
  ('if_statement -> IF expression DO statements elif_clauses ELSE statements END','if_statement',8,'p_if_statement','parser.py',417),
  ('elif_clauses -> elif_clause','elif_clauses',1,'p_elif_clauses','parser.py',433),
  ('elif_clauses -> elif_clause elif_clauses','elif_clauses',2,'p_elif_clauses','parser.py',434),
  ('elif_clause -> ELIF expression DO statements','elif_clause',4,'p_elif_clause','parser.py',442),
  ('comparison_expr -> expr_atom GT expr_atom','comparison_expr',3,'p_comparison_expr','parser.py',447),
  ('comparison_expr -> expr_atom LT expr_atom','comparison_expr',3,'p_comparison_expr','parser.py',448),
  ('comparison_expr -> expr_atom GE expr_atom','comparison_expr',3,'p_comparison_expr','parser.py',449),
  ('comparison_expr -> expr_atom LE expr_atom','comparison_expr',3,'p_comparison_expr','parser.py',450),
  ('comparison_expr -> expr_atom EQ expr_atom','comparison_expr',3,'p_comparison_expr','parser.py',451),
  ('comparison_expr -> expr_atom NE expr_atom','comparison_expr',3,'p_comparison_expr','parser.py',452),
  ('arithmetic_expr -> expression PLUS expression','arithmetic_expr',3,'p_arithmetic_expr','parser.py',475),
  ('arithmetic_expr -> expression MINUS expression','arithmetic_expr',3,'p_arithmetic_expr','parser.py',476),
  ('arithmetic_expr -> expression TIMES expression','arithmetic_expr',3,'p_arithmetic_expr','parser.py',477),
  ('arithmetic_expr -> expression DIVIDE expression','arithmetic_expr',3,'p_arithmetic_expr','parser.py',478),
  ('arithmetic_expr -> expression MODULO expression','arithmetic_expr',3,'p_arithmetic_expr','parser.py',479),
  ('remote_keyword_call -> ID PIPE LBRACKET ID RBRACKET COMMA parameter_list','remote_keyword_call',7,'p_remote_keyword_call','parser.py',558),
  ('remote_keyword_call -> ID PIPE LBRACKET ID RBRACKET','remote_keyword_call',5,'p_remote_keyword_call','parser.py',559),
]
