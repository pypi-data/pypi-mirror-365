#!/usr/bin/env python3
"""
Clapp Store Ba≈ülatma Scripti
Bu script, Clapp Store uygulamasƒ±nƒ± ba≈ülatmadan √∂nce gerekli kontrolleri yapar.
"""

import sys
import subprocess
import os

def check_python_version():
    """Python s√ºr√ºm√ºn√º kontrol et"""
    if sys.version_info < (3, 7):
        print("‚ùå Python 3.7 veya daha y√ºksek bir s√ºr√ºm gerekli!")
        print(f"   Mevcut s√ºr√ºm: {sys.version}")
        return False
    print(f"‚úÖ Python s√ºr√ºm√º uygun: {sys.version.split()[0]}")
    return True

def check_dependencies():
    """Gerekli paketlerin y√ºkl√º olup olmadƒ±ƒüƒ±nƒ± kontrol et"""
    required_packages = ['flet', 'requests']
    missing_packages = []
    
    for package in required_packages:
        try:
            __import__(package)
        except ImportError:
            missing_packages.append(package)
    
    if missing_packages:
        print(f"‚ùå Eksik paketler: {', '.join(missing_packages)}")
        print("   L√ºtfen a≈üaƒüƒ±daki komutu √ßalƒ±≈ütƒ±rƒ±n:")
        print("   pip install -r requirements.txt")
        return False
    
    print("‚úÖ T√ºm baƒüƒ±mlƒ±lƒ±klar y√ºkl√º")
    return True

def check_clapp():
    """Clapp paket y√∂neticisinin y√ºkl√º olup olmadƒ±ƒüƒ±nƒ± kontrol et"""
    try:
        result = subprocess.run(["clapp", "version"], capture_output=True, text=True, timeout=5)
        if result.returncode == 0:
            print(f"‚úÖ Clapp paket y√∂neticisi y√ºkl√º: {result.stdout.strip()}")
            return True
        else:
            print("‚ùå Clapp paket y√∂neticisi bulunamadƒ±")
            return False
    except FileNotFoundError:
        print("‚ùå Clapp komutu bulunamadƒ±")
        print("   L√ºtfen a≈üaƒüƒ±daki komutu √ßalƒ±≈ütƒ±rƒ±n:")
        print("   pip install clapp-pm")
        return False
    except Exception as e:
        print(f"‚ùå Clapp kontrol hatasƒ±: {e}")
        return False

def main():
    """Ana ba≈ülatma fonksiyonu"""
    print("üöÄ Clapp Store Ba≈ülatƒ±lƒ±yor...")
    print("=" * 40)
    
    # Kontroller
    checks = [
        ("Python S√ºr√ºm√º", check_python_version),
        ("Baƒüƒ±mlƒ±lƒ±klar", check_dependencies),
        ("Clapp Paket Y√∂neticisi", check_clapp),
    ]
    
    for check_name, check_func in checks:
        print(f"\n{check_name} kontrol ediliyor...")
        if not check_func():
            print(f"\n‚ùå {check_name} kontrol√º ba≈üarƒ±sƒ±z!")
            print("L√ºtfen yukarƒ±daki hatalarƒ± d√ºzeltin ve tekrar deneyin.")
            return False
    
    print("\n" + "=" * 40)
    print("‚úÖ T√ºm kontroller ba≈üarƒ±lƒ±!")
    print("üéâ Clapp Store ba≈ülatƒ±lƒ±yor...")
    print()
    
    # Ana uygulamayƒ± ba≈ülat
    try:
        from main import main as app_main
        import flet as ft
        ft.app(target=app_main)
    except ImportError as e:
        print(f"‚ùå Uygulama ba≈ülatƒ±lamadƒ±: {e}")
        print("L√ºtfen main.py dosyasƒ±nƒ±n mevcut olduƒüundan emin olun.")
        return False
    except Exception as e:
        print(f"‚ùå Uygulama hatasƒ±: {e}")
        return False
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 