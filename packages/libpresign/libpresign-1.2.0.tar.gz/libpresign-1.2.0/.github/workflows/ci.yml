name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Set up uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true
      
      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e ".[dev]"
      
      - name: Run ruff format check
        run: uv run ruff format --check .
      
      - name: Run ruff linter
        run: uv run ruff check .

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Set up uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true
      
      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e ".[dev]"
      
      - name: Run mypy
        run: uv run mypy libpresign

  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
        exclude:
          # Python 3.8 is not available on macos-latest (M1)
          - os: macos-latest
            python-version: '3.8'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Set up uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true
      
      - name: Install OpenSSL (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install openssl -y --no-progress
          echo "OPENSSL_ROOT_DIR=C:\Program Files\OpenSSL-Win64" >> $env:GITHUB_ENV
      
      - name: Install OpenSSL (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install openssl@3
          echo "OPENSSL_ROOT_DIR=$(brew --prefix openssl@3)" >> $GITHUB_ENV
      
      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e ".[test]"
      
      - name: Run tests with coverage
        run: |
          uv run pytest -v --cov=libpresign --cov-report=xml --cov-report=term-missing
      
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
          verbose: true

  test-builds:
    name: Test Building Wheels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Set up uv
        uses: astral-sh/setup-uv@v2
      
      - name: Build sdist
        run: |
          uv build --sdist
          ls -la dist/
      
      - name: Test sdist
        run: |
          cd dist
          tar -xzf *.tar.gz
          cd libpresign-*/
          uv venv test-env
          ./test-env/bin/pip install .
          ./test-env/bin/python -c "import libpresign; print(libpresign.__version__)"

  check-docs:
    name: Check Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Validate README
        run: |
          python -m pip install readme-renderer
          python -m readme_renderer README.md -o /tmp/README.html
      
      - name: Check CHANGELOG format
        run: |
          if [ -f "CHANGELOG.md" ]; then
            head -20 CHANGELOG.md
          fi

  all-checks-passed:
    name: All CI Checks Passed
    needs: [lint, type-check, test, test-builds, check-docs]
    runs-on: ubuntu-latest
    steps:
      - name: Success
        run: echo "All CI checks passed successfully!"