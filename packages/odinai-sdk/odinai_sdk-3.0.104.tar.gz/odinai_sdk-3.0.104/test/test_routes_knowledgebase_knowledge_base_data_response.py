# coding: utf-8

"""
    API Docs

    API Documentation to interact with

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from odin_sdk.models.routes_knowledgebase_knowledge_base_data_response import RoutesKnowledgebaseKnowledgeBaseDataResponse

class TestRoutesKnowledgebaseKnowledgeBaseDataResponse(unittest.TestCase):
    """RoutesKnowledgebaseKnowledgeBaseDataResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RoutesKnowledgebaseKnowledgeBaseDataResponse:
        """Test RoutesKnowledgebaseKnowledgeBaseDataResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RoutesKnowledgebaseKnowledgeBaseDataResponse`
        """
        model = RoutesKnowledgebaseKnowledgeBaseDataResponse()
        if include_optional:
            return RoutesKnowledgebaseKnowledgeBaseDataResponse(
                message = '',
                content = '',
                document_data = odin_sdk.models.document_data.Document Data(),
                url = '',
                uploaded_by = '',
                status = 'synced',
                size = 56,
                document_key = '',
                data_type_id = ''
            )
        else:
            return RoutesKnowledgebaseKnowledgeBaseDataResponse(
                message = '',
                content = '',
                document_data = odin_sdk.models.document_data.Document Data(),
                document_key = '',
        )
        """

    def testRoutesKnowledgebaseKnowledgeBaseDataResponse(self):
        """Test RoutesKnowledgebaseKnowledgeBaseDataResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
