# coding: utf-8

"""
    API Docs

    API Documentation to interact with

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from odin_sdk.models.dt_field import DTField

class TestDTField(unittest.TestCase):
    """DTField unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DTField:
        """Test DTField
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DTField`
        """
        model = DTField()
        if include_optional:
            return DTField(
                id = '',
                name = '',
                description = '',
                options = None,
                type = '',
                cell_value_type = '',
                is_multiple_cell_value = True,
                db_field_type = '',
                db_field_name = '',
                not_null = True,
                unique = True,
                is_primary = True,
                is_computed = True,
                is_lookup = True,
                is_pending = True,
                has_error = True,
                lookup_linked_field_id = '',
                lookup_options = '',
                table_id = '',
                version = 56,
                created_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_by = '',
                last_modified_by = ''
            )
        else:
            return DTField(
                id = '',
                name = '',
                type = '',
                cell_value_type = '',
                db_field_type = '',
                db_field_name = '',
                table_id = '',
                created_by = '',
        )
        """

    def testDTField(self):
        """Test DTField"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
