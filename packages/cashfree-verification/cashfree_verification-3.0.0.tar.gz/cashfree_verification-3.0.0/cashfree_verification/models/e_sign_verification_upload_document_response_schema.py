# coding: utf-8

"""
    Cashfree Verification API's.

    Cashfree's Verification APIs provide different types of verification to our merchants.

    The version of the OpenAPI document: 2023-12-18
    Contact: developers@cashfree.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictInt, StrictStr

class ESignVerificationUploadDocumentResponseSchema(BaseModel):
    """
    Success response for Upload Document For E-Sign
    """
    status: Optional[StrictStr] = Field(None, description="It displays the status of the API request.")
    document_id: Optional[StrictInt] = Field(None, description="It displays the unique ID created by Cashfree Payments to identify the uploaded document.")
    __properties = ["status", "document_id"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> ESignVerificationUploadDocumentResponseSchema:
        """Create an instance of ESignVerificationUploadDocumentResponseSchema from a JSON string"""
        return cls.from_dict(json.loads(json_str))
    
    @classmethod
    def from_json_for_one_of(cls, json_str: str) -> ESignVerificationUploadDocumentResponseSchema:
        """Create an instance of ESignVerificationUploadDocumentResponseSchema from a JSON string"""
        temp_dict = json.loads(json_str)
        if "status, document_id" in temp_dict.keys():
            return cls.from_dict(json.loads(json_str))
        return None

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ESignVerificationUploadDocumentResponseSchema:
        """Create an instance of ESignVerificationUploadDocumentResponseSchema from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return ESignVerificationUploadDocumentResponseSchema.parse_obj(obj)

        _obj = ESignVerificationUploadDocumentResponseSchema.parse_obj({
            "status": obj.get("status"),
            "document_id": obj.get("document_id")
        })
        return _obj


