# coding: utf-8

"""
    Cashfree Verification API's.

    Cashfree's Verification APIs provide different types of verification to our merchants.

    The version of the OpenAPI document: 2023-12-18
    Contact: developers@cashfree.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr

class CinResponseSchemaDirectorDetailsInner(BaseModel):
    """
    It displays the details of the director of the company.
    """
    dob: Optional[StrictStr] = Field(None, description="It displays the date of birth of the director.")
    designation: Optional[StrictStr] = Field(None, description="It displays the designation of the director.")
    address: Optional[StrictStr] = Field(None, description="It displays the address information of the director.")
    din: Optional[StrictStr] = Field(None, description="It displays the unique identification number assigned to individuals who are appointed as directors of companies in India.")
    name: Optional[StrictStr] = Field(None, description="It displays the name of the director.")
    __properties = ["dob", "designation", "address", "din", "name"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CinResponseSchemaDirectorDetailsInner:
        """Create an instance of CinResponseSchemaDirectorDetailsInner from a JSON string"""
        return cls.from_dict(json.loads(json_str))
    
    @classmethod
    def from_json_for_one_of(cls, json_str: str) -> CinResponseSchemaDirectorDetailsInner:
        """Create an instance of CinResponseSchemaDirectorDetailsInner from a JSON string"""
        temp_dict = json.loads(json_str)
        if "dob, designation, address, din, name" in temp_dict.keys():
            return cls.from_dict(json.loads(json_str))
        return None

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CinResponseSchemaDirectorDetailsInner:
        """Create an instance of CinResponseSchemaDirectorDetailsInner from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CinResponseSchemaDirectorDetailsInner.parse_obj(obj)

        _obj = CinResponseSchemaDirectorDetailsInner.parse_obj({
            "dob": obj.get("dob"),
            "designation": obj.get("designation"),
            "address": obj.get("address"),
            "din": obj.get("din"),
            "name": obj.get("name")
        })
        return _obj


